"use strict";(self.webpackChunkvendure_admin=self.webpackChunkvendure_admin||[]).push([[459],{6459:(F,m,t)=>{t.r(m),t.d(m,{default:()=>C});var i=t(1644),u=t(1121),e=t(5703),o=t(6944),h=t(1614),g=t(1533),c=t(6884);const p=(a,s)=>({success:a,error:s});function f(a,s){if(1&a&&(e.j41(0,"div",13),e.EFF(1),e.k0s()),2&a){const n=e.XpG();e.Y8G("ngClass",e.l_i(2,p,"success"===n.messageType,"error"===n.messageType)),e.R7$(),e.JRh(n.message)}}function b(a,s){if(1&a&&(e.j41(0,"option",14),e.EFF(1),e.k0s()),2&a){const n=s.$implicit;e.Y8G("value",n.id),e.R7$(),e.JRh(n.code)}}class l{constructor(s,n){this.fb=s,this.apollo=n,this.channels=[],this.message=null,this.messageType=null,this.assignmentForm=this.fb.group({customerId:[""],channelId:[""]})}ngOnInit(){this.fetchChannels()}fetchChannels(){const s=u.Ay`
            query GetChannels {
                channels {
                    items {
                        id
                        code
                    }
                }
            }
        `;this.apollo.watchQuery({query:s}).valueChanges.subscribe(n=>{this.channels=n.data.channels.items.filter(r=>"1"!==r.id)})}onSubmit(){const{customerId:s,channelId:n}=this.assignmentForm.value,r=u.Ay`
            mutation AssignCustomerToChannels($customerId: ID!, $channelIds: [ID!]!) {
                assignCustomerToChannels(customerId: $customerId, channelIds: $channelIds)
            }
        `;this.apollo.mutate({mutation:r,variables:{customerId:s,channelIds:[n]}}).subscribe(d=>{this.showMessage("Customer has been successfully assigned to the channel.","success")},d=>{this.showMessage("Failed to assign customer to the channel. Please try again.","error"),console.error("Error assigning customer to channel:",d)})}showMessage(s,n){this.message=s,this.messageType=n,setTimeout(()=>{this.message=null,this.messageType=null},5e3)}static{this.\u0275fac=function(n){return new(n||l)(e.rXU(o.ok),e.rXU(h.Ic))}}static{this.\u0275cmp=e.VBU({type:l,selectors:[["channel-assignment"]],standalone:!0,features:[e.aNF],decls:26,vars:3,consts:[[2,"margin-bottom","1rem"],["class","notification",3,"ngClass",4,"ngIf"],[2,"grid-template-columns","1fr 1fr","gap","2rem","max-width","600px","margin","2rem auto","padding","2rem","border","1px solid #ddd","border-radius","8px","background-color","#dcdcdc",3,"ngSubmit","formGroup"],[2,"display","flex","justify-content","space-evenly","gap","1rem"],[2,"flex-grow","1","min-width","200px"],["for","customerId",2,"display","block","color","black","font-weight","bold","margin-bottom","0.5rem"],["id","customerId","formControlName","customerId","placeholder","Enter the ID","required","",2,"width","80%","padding","0.5rem","border","1px solid #ddd","border-radius","4px"],["for","channelId",2,"display","block","color","black","font-weight","bold","margin-bottom","0.5rem"],["id","channelId","formControlName","channelId","required","",2,"width","100%","padding","0.5rem","border","1px solid #5A67D8","border-radius","4px"],["value","","disabled","","selected",""],[3,"value",4,"ngFor","ngForOf"],[2,"grid-column","span 2","text-align","center","margin-top","1rem"],["type","submit",2,"background-color","#5A67D8","color","white","padding","0.75rem 2rem","border","none","border-radius","4px","cursor","pointer","font-size","1rem","font-weight","bold","transition","background-color 0.3s"],[1,"notification",3,"ngClass"],[3,"value"]],template:function(n,r){1&n&&(e.j41(0,"vdr-page-block")(1,"p",0),e.EFF(2,"Check twice that the"),e.j41(3,"b"),e.EFF(4," Entered Customer ID "),e.k0s(),e.EFF(5,"and "),e.j41(6,"b"),e.EFF(7,"Selected Channel is correct"),e.k0s(),e.EFF(8,". "),e.k0s(),e.DNE(9,f,2,5,"div",1),e.j41(10,"form",2),e.bIt("ngSubmit",function(){return r.onSubmit()}),e.j41(11,"div",3)(12,"div",4)(13,"label",5),e.EFF(14,"Customer ID:"),e.k0s(),e.nrm(15,"input",6),e.k0s(),e.j41(16,"div",4)(17,"label",7),e.EFF(18,"Channel:"),e.k0s(),e.j41(19,"select",8)(20,"option",9),e.EFF(21,"Select the Channel"),e.k0s(),e.DNE(22,b,2,2,"option",10),e.k0s()()(),e.j41(23,"div",11)(24,"button",12),e.EFF(25," Update "),e.k0s()()()()),2&n&&(e.R7$(9),e.Y8G("ngIf",r.message),e.R7$(),e.Y8G("formGroup",r.assignmentForm),e.R7$(12),e.Y8G("ngForOf",r.channels))},dependencies:[i.GgS,g.aZZ,c.YU,c.Sq,c.bT,o.qT,o.xH,o.y7,o.me,o.wz,o.BC,o.cb,o.YS,o.j4,o.JD,i.Vr5,i.eH4],styles:[".notification[_ngcontent-%COMP%]{position:fixed;top:20px;right:20px;padding:1rem;border-radius:4px;color:#fff;font-weight:700;z-index:1000;transition:opacity .5s ease-in-out}.success[_ngcontent-%COMP%]{background-color:#4caf50}.error[_ngcontent-%COMP%]{background-color:#f44336}\n\n/*# sourceMappingURL=assignCustomer.component.ts-angular-inline--1.css.map*/"]})}}const C=[(0,i.hUq)({component:l,path:"",title:"Switch Customer from one to another Channel",breadcrumb:"Switch Channel"})]}}]);
//# sourceMappingURL=459.1dafc47ed6da35cb.js.map