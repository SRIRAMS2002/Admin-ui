{"version":3,"file":"934.d9aeb6a92a5deb64.js","mappings":"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","names":["AdjustmentType","AssetType","CurrencyCode","DeletionResult","ErrorCode","GlobalFlag","HistoryEntryType","JobState","LanguageCode","LogicalOperator","MetricInterval","MetricType","OrderType","Permission","SortOrder","StockMovementType","exports","DISTRIBUTED_ORDER_PROMOTION","OTHER","PROMOTION","BINARY","IMAGE","VIDEO","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRU","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VES","VND","VUV","WST","XAF","XCD","XOF","XPF","YER","ZAR","ZMW","ZWL","DELETED","NOT_DELETED","ALREADY_REFUNDED_ERROR","CANCEL_ACTIVE_ORDER_ERROR","CANCEL_PAYMENT_ERROR","CHANNEL_DEFAULT_LANGUAGE_ERROR","COUPON_CODE_EXPIRED_ERROR","COUPON_CODE_INVALID_ERROR","COUPON_CODE_LIMIT_ERROR","CREATE_FULFILLMENT_ERROR","DUPLICATE_ENTITY_ERROR","EMAIL_ADDRESS_CONFLICT_ERROR","EMPTY_ORDER_LINE_SELECTION_ERROR","FACET_IN_USE_ERROR","FULFILLMENT_STATE_TRANSITION_ERROR","GUEST_CHECKOUT_ERROR","INELIGIBLE_SHIPPING_METHOD_ERROR","INSUFFICIENT_STOCK_ERROR","INSUFFICIENT_STOCK_ON_HAND_ERROR","INVALID_CREDENTIALS_ERROR","INVALID_FULFILLMENT_HANDLER_ERROR","ITEMS_ALREADY_FULFILLED_ERROR","LANGUAGE_NOT_AVAILABLE_ERROR","MANUAL_PAYMENT_STATE_ERROR","MIME_TYPE_ERROR","MISSING_CONDITIONS_ERROR","MULTIPLE_ORDER_ERROR","NATIVE_AUTH_STRATEGY_ERROR","NEGATIVE_QUANTITY_ERROR","NOTHING_TO_REFUND_ERROR","NO_ACTIVE_ORDER_ERROR","NO_CHANGES_SPECIFIED_ERROR","ORDER_LIMIT_ERROR","ORDER_MODIFICATION_ERROR","ORDER_MODIFICATION_STATE_ERROR","ORDER_STATE_TRANSITION_ERROR","PAYMENT_METHOD_MISSING_ERROR","PAYMENT_ORDER_MISMATCH_ERROR","PAYMENT_STATE_TRANSITION_ERROR","PRODUCT_OPTION_IN_USE_ERROR","QUANTITY_TOO_GREAT_ERROR","REFUND_AMOUNT_ERROR","REFUND_ORDER_STATE_ERROR","REFUND_PAYMENT_ID_MISSING_ERROR","REFUND_STATE_TRANSITION_ERROR","SETTLE_PAYMENT_ERROR","UNKNOWN_ERROR","FALSE","INHERIT","TRUE","CUSTOMER_ADDED_TO_GROUP","CUSTOMER_ADDRESS_CREATED","CUSTOMER_ADDRESS_DELETED","CUSTOMER_ADDRESS_UPDATED","CUSTOMER_DETAIL_UPDATED","CUSTOMER_EMAIL_UPDATE_REQUESTED","CUSTOMER_EMAIL_UPDATE_VERIFIED","CUSTOMER_NOTE","CUSTOMER_PASSWORD_RESET_REQUESTED","CUSTOMER_PASSWORD_RESET_VERIFIED","CUSTOMER_PASSWORD_UPDATED","CUSTOMER_REGISTERED","CUSTOMER_REMOVED_FROM_GROUP","CUSTOMER_VERIFIED","ORDER_CANCELLATION","ORDER_COUPON_APPLIED","ORDER_COUPON_REMOVED","ORDER_CUSTOMER_UPDATED","ORDER_FULFILLMENT","ORDER_FULFILLMENT_TRANSITION","ORDER_MODIFIED","ORDER_NOTE","ORDER_PAYMENT_TRANSITION","ORDER_REFUND_TRANSITION","ORDER_STATE_TRANSITION","CANCELLED","COMPLETED","FAILED","PENDING","RETRYING","RUNNING","af","ak","am","ar","as","az","be","bg","bm","bn","bo","br","bs","ca","ce","co","cs","cu","cy","da","de","de_AT","de_CH","dz","ee","el","en","en_AU","en_CA","en_GB","en_US","eo","es","es_ES","es_MX","et","eu","fa","fa_AF","ff","fi","fo","fr","fr_CA","fr_CH","fy","ga","gd","gl","gu","gv","ha","he","hi","hr","ht","hu","hy","ia","id","ig","ii","is","it","ja","jv","ka","ki","kk","kl","km","kn","ko","ks","ku","kw","ky","la","lb","lg","ln","lo","lt","lu","lv","mg","mi","mk","ml","mn","mr","ms","mt","my","nb","nd","ne","nl","nl_BE","nn","ny","om","or","os","pa","pl","ps","pt","pt_BR","pt_PT","qu","rm","rn","ro","ro_MD","ru","rw","sa","sd","se","sg","si","sk","sl","sm","sn","so","sq","sr","st","su","sv","sw","sw_CD","ta","te","tg","th","ti","tk","to","tr","tt","ug","uk","ur","uz","vi","vo","wo","xh","yi","yo","zh","zh_Hans","zh_Hant","zu","AND","OR","Daily","AverageOrderValue","OrderCount","OrderTotal","Aggregate","Regular","Seller","Authenticated","CreateAdministrator","CreateAsset","CreateCatalog","CreateChannel","CreateCollection","CreateCountry","CreateCustomer","CreateCustomerGroup","CreateFacet","CreateOrder","CreatePaymentMethod","CreateProduct","CreatePromotion","CreateSeller","CreateSettings","CreateShippingMethod","CreateStockLocation","CreateSystem","CreateTag","CreateTaxCategory","CreateTaxRate","CreateZone","DeleteAdministrator","DeleteAsset","DeleteCatalog","DeleteChannel","DeleteCollection","DeleteCountry","DeleteCustomer","DeleteCustomerGroup","DeleteFacet","DeleteOrder","DeletePaymentMethod","DeleteProduct","DeletePromotion","DeleteSeller","DeleteSettings","DeleteShippingMethod","DeleteStockLocation","DeleteSystem","DeleteTag","DeleteTaxCategory","DeleteTaxRate","DeleteZone","Owner","Public","ReadAdministrator","ReadAsset","ReadCatalog","ReadChannel","ReadCollection","ReadCountry","ReadCustomer","ReadCustomerGroup","ReadFacet","ReadOrder","ReadPaymentMethod","ReadProduct","ReadPromotion","ReadSeller","ReadSettings","ReadShippingMethod","ReadStockLocation","ReadSystem","ReadTag","ReadTaxCategory","ReadTaxRate","ReadZone","SuperAdmin","UpdateAdministrator","UpdateAsset","UpdateCatalog","UpdateChannel","UpdateCollection","UpdateCountry","UpdateCustomer","UpdateCustomerGroup","UpdateFacet","UpdateGlobalSettings","UpdateOrder","UpdatePaymentMethod","UpdateProduct","UpdatePromotion","UpdateSeller","UpdateSettings","UpdateShippingMethod","UpdateStockLocation","UpdateSystem","UpdateTag","UpdateTaxCategory","UpdateTaxRate","UpdateZone","ASC","DESC","ADJUSTMENT","ALLOCATION","CANCELLATION","RELEASE","RETURN","SALE","ProductOptionsEditorComponent_button_20_Template","rf","ctx","_r1","i0","ctx_r1","save","detailForm","pristine","invalid","ProductOptionsEditorComponent_form_22_vdr_card_2_ng_container_11_Template","optionGroup_r3","$implicit","optionGroupCustomFields","get","updatePermission","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_3_Template","optionControl_r5","item","value","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_6_Template","optionControl_r6","createdAt","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_9_Template","optionControl_r7","updatedAt","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_12_Template","optionControl_r8","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_15_Template","optionControl_r9","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_18_Template","optionControl_r10","optionCustomFields","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_Template","_r4","$event","paginationSettings","currentPage","options_r11","ngIf","itemsPerPage","length","ProductOptionsEditorComponent_form_22_vdr_card_2_Template","i_r12","index","code","getOptions","ProductOptionsEditorComponent_form_22_Template","getOptionGroups","CreateProductOptionGroupDialogComponent_ng_template_0_Template","CreateProductOptionGroupDialogComponent_ng_template_8_Template","cancel","confirm","form","CreateProductVariantDialogComponent_ng_template_0_Template","CreateProductVariantDialogComponent_vdr_form_field_3_Template","optionGroup_r1","name","options","CreateProductVariantDialogComponent_clr_alert_4_Template","CreateProductVariantDialogComponent_div_5_Template","existingVariant","sku","CreateProductVariantDialogComponent_ng_template_16_Template","_r3","product","optionGroups","_c0","_c1","OptionValueInputComponent_div_1_vdr_chip_1_Template","option_r4","ctx_r4","removeOption","i_r6","updateOption","cancelBubble","editName","isLast_r7","last","lastSelected","locked","groupName","editingIndex","OptionValueInputComponent_div_1_Template","optionValues","ProductVariantsEditorComponent_div_2_Template","group_r2","i_r3","ctx_r3","addOption","removeOptionGroup","isNew","values","ProductVariantsEditorComponent_ng_template_20_Template","variant_r5","ProductVariantsEditorComponent_ng_template_23_Template","variant_r6","ProductVariantsEditorComponent_ng_template_26_Template","variant_r7","ProductVariantsEditorComponent_ng_template_29_Template","variant_r8","ProductVariantsEditorComponent_ng_template_32_Template","variant_r9","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_vdr_chip_0_Template","option_r10","optionGroup_r11","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_ng_template_1_Template","_r12","variant_r13","setOptionToAddToVariant","addOptionToVariant","optionsToAddToVariant","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_Template","selectOption_r14","getOption","ProductVariantsEditorComponent_vdr_dt2_column_33_Template","ProductVariantsEditorComponent_ng_template_37_Template","variant_r15","price","currencyCode","ProductVariantsEditorComponent_ng_template_40_Template","variant_r16","priceWithTax","ProductVariantsEditorComponent_ng_template_43_Template","_r17","variant_r18","deleteVariant","ApplyFacetDialogComponent_ng_template_0_Template","ApplyFacetDialogComponent_ng_template_2_Template","selectValues","selectedValues","_c2","AssetDetailComponent_button_5_Template","_c3","_c4","_c5","a0","channel","_c6","channelCode","AssignProductsToChannelDialogComponent_ng_template_0_ng_container_0_Template","AssignProductsToChannelDialogComponent_ng_template_0_ng_template_1_Template","AssignProductsToChannelDialogComponent_ng_template_0_Template","productModeTitle_r1","isProductVariantMode","AssignProductsToChannelDialogComponent_ng_template_29_Template","selectedChannel","AssignProductsToChannelDialogComponent_ng_template_30_Template","AssignProductsToChannelDialogComponent_tr_33_ng_template_7_Template","row_r3","pricePreview","defaultCurrencyCode","AssignProductsToChannelDialogComponent_tr_33_ng_template_8_Template","AssignProductsToChannelDialogComponent_tr_33_Template","noChannelSelected_r4","currentChannel","AssignProductsToChannelDialogComponent_ng_template_35_ng_template_4_Template","AssignProductsToChannelDialogComponent_ng_template_35_ng_template_5_Template","AssignProductsToChannelDialogComponent_ng_template_35_Template","_r5","assign","noSelection_r6","BulkAddFacetValuesDialogComponent_ng_template_0_Template","BulkAddFacetValuesDialogComponent_table_7_tr_2_div_4_Template","item_r2","BulkAddFacetValuesDialogComponent_table_7_tr_2_vdr_facet_value_chip_6_Template","facetValue_r4","removeFacetValue","BulkAddFacetValuesDialogComponent_table_7_tr_2_Template","facetValues","BulkAddFacetValuesDialogComponent_table_7_Template","items","BulkAddFacetValuesDialogComponent_ng_template_8_Template","BulkAddFacetValuesDialogComponent_ng_template_10_Template","_r6","addFacetValues","facetValuesRemoved","_c7","_c8","CollectionContentsComponent_ng_container_3_Template","CollectionContentsComponent_ng_template_14_Template","variant_r1","CollectionContentsComponent_ng_template_17_Template","variant_r2","CollectionContentsComponent_ng_template_20_Template","variant_r3","CollectionContentsComponent_ng_template_23_Template","variant_r4","productId","CollectionContentsComponent_ng_template_26_Template","_c9","_c10","_c11","_c12","a1","a2","a3","totalItems","_c13","i","depth","_c14","currentStart","currentEnd","_c15","collection","_c16","rowItem","_c17","CollectionDataTableComponent_vdr_data_table_filter_presets_0_Template","filters","CollectionDataTableComponent_th_7_Template","onToggleAllClick","selectionManager","areAllCurrentItemsSelected","CollectionDataTableComponent_th_8_div_5_clr_icon_2_Template","CollectionDataTableComponent_th_8_div_5_clr_icon_3_Template","CollectionDataTableComponent_th_8_div_5_clr_icon_4_Template","CollectionDataTableComponent_th_8_div_5_div_5_Template","sort_r5","sortOrder","CollectionDataTableComponent_th_8_div_5_Template","toggleSortOrder","CollectionDataTableComponent_th_8_Template","column_r6","expand","align","heading","sort","CollectionDataTableComponent_tr_13_ng_container_6_Template","CollectionDataTableComponent_tr_13_ng_container_7_Template","CollectionDataTableComponent_tr_13_ng_container_8_vdr_data_table_filters_2_Template","activeFilter_r8","CollectionDataTableComponent_tr_13_ng_container_8_vdr_data_table_filters_3_Template","CollectionDataTableComponent_tr_13_ng_container_8_Template","activeFilters","CollectionDataTableComponent_tr_13_Template","_r7","toggleSearchFilterRow","showSearchFilterRow","visibleSortedColumns","searchComponent","template","customSearchTemplate","CollectionDataTableComponent_ng_container_15_Template","item_r9","i_r10","collectionRowTmp_r11","CollectionDataTableComponent_tr_18_Template","emptyStateLabel","CollectionDataTableComponent_vdr_items_per_page_controls_20_Template","itemsPerPageChange","emit","CollectionDataTableComponent_div_21_Template","CollectionDataTableComponent_vdr_pagination_controls_22_Template","_r13","pageChange","CollectionDataTableComponent_ng_template_23_td_2_Template","_r14","item_r15","onRowClick","activeIndex","absoluteIndex","isSelected","CollectionDataTableComponent_ng_template_23_td_3_ng_container_2_ng_container_1_Template","CollectionDataTableComponent_ng_template_23_td_3_ng_container_2_Template","componentConfig_r16","config","component","injector","CollectionDataTableComponent_ng_template_23_td_3_ng_template_3_ng_container_0_Template","CollectionDataTableComponent_ng_template_23_td_3_ng_template_3_Template","column_r17","ctx_r17","depth_r19","CollectionDataTableComponent_ng_template_23_td_3_Template","defaultComponent_r20","customComponents","CollectionDataTableComponent_ng_template_23_ng_container_5_ng_container_1_Template","CollectionDataTableComponent_ng_template_23_ng_container_5_Template","subCollection_r21","CollectionDataTableComponent_ng_template_23_Template","getSubcollections","_c18","_c19","pattern","_c20","_c21","_c22","count","_c23","standalone","CollectionDetailComponent_button_9_Template","_r2","ctx_r2","create","CollectionDetailComponent_ng_template_11_button_0_Template","assetsChanged","CollectionDetailComponent_ng_template_11_Template","CollectionDetailComponent_ng_container_24_Template","CollectionDetailComponent_ng_template_25_Template","CollectionDetailComponent_vdr_card_27_Template","entity_r5","CollectionDetailComponent_vdr_page_block_29_li_3_a_1_Template","CollectionDetailComponent_vdr_page_block_29_li_3_a_2_Template","breadcrumb_r6","CollectionDetailComponent_vdr_page_block_29_li_3_ng_container_3_Template","CollectionDetailComponent_vdr_page_block_29_li_3_Template","isFirst_r7","first","isLast_r8","CollectionDetailComponent_vdr_page_block_29_Template","entity_r9","breadcrumbs","CollectionDetailComponent_vdr_card_47_Template","customFields","CollectionDetailComponent_ng_container_60_Template","CollectionDetailComponent_ng_template_61_Template","CollectionDetailComponent_ng_container_64_Template","_r10","i_r11","removeFilter","filter_r12","getFilterDefinition","CollectionDetailComponent_div_65_button_9_Template","filter_r14","addFilter","description","CollectionDetailComponent_div_65_Template","allFilters","CollectionDetailComponent_ng_template_73_Template","_r15","toggleLivePreview","tmp_7_0","tmp_9_0","count_r16","livePreview","_c24","MoveCollectionsDialogComponent_ng_template_0_Template","MoveCollectionsDialogComponent_ng_template_11_Template","collection_r1","MoveCollectionsDialogComponent_ng_template_14_clr_icon_1_Template","depth_r3","MoveCollectionsDialogComponent_ng_template_14_button_2_clr_icon_1_Template","MoveCollectionsDialogComponent_ng_template_14_button_2_clr_icon_2_Template","MoveCollectionsDialogComponent_ng_template_14_button_2_Template","collection_r5","ctx_r5","toggleExpanded","expandedIds","includes","MoveCollectionsDialogComponent_ng_template_14_button_3_Template","MoveCollectionsDialogComponent_ng_template_14_Template","resolveWith","children","parentId","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_ng_container_1_div_1_Template","item_r7","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_ng_container_1_Template","breadcrumbs_r8","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_span_2_Template","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_Template","MoveCollectionsDialogComponent_ng_template_17_Template","collection_r9","MoveCollectionsDialogComponent_ng_template_20_Template","collection_r10","slug","_c25","_c26","_c27","_c28","contents","_c29","contentsPage","CollectionListComponent_a_8_Template","CollectionListComponent_ng_template_12_ng_template_12_Template","collection_r3","CollectionListComponent_ng_template_12_ng_template_15_Template","collection_r4","CollectionListComponent_ng_template_12_ng_template_18_Template","CollectionListComponent_ng_template_12_ng_template_21_Template","collection_r6","position","CollectionListComponent_ng_template_12_ng_template_24_clr_icon_1_Template","depth_r7","CollectionListComponent_ng_template_12_ng_template_24_button_2_clr_icon_1_Template","CollectionListComponent_ng_template_12_ng_template_24_button_2_clr_icon_2_Template","CollectionListComponent_ng_template_12_ng_template_24_button_2_Template","_r8","CollectionListComponent_ng_template_12_ng_template_24_Template","CollectionListComponent_ng_template_12_ng_template_27_ng_container_1_ng_container_1_div_1_Template","item_r10","CollectionListComponent_ng_template_12_ng_template_27_ng_container_1_ng_container_1_Template","breadcrumbs_r11","CollectionListComponent_ng_template_12_ng_template_27_ng_container_1_span_2_Template","CollectionListComponent_ng_template_12_ng_template_27_ng_container_1_Template","CollectionListComponent_ng_template_12_ng_template_27_Template","collection_r12","CollectionListComponent_ng_template_12_ng_template_30_Template","collection_r13","CollectionListComponent_ng_template_12_ng_template_33_vdr_chip_0_Template","CollectionListComponent_ng_template_12_ng_template_33_vdr_chip_1_Template","CollectionListComponent_ng_template_12_ng_template_33_Template","collection_r14","isPrivate","CollectionListComponent_ng_template_12_ng_template_36_Template","collection_r15","CollectionListComponent_ng_template_12_vdr_dt2_custom_field_column_37_Template","customField_r16","sorts","CollectionListComponent_ng_template_12_Template","setPageNumber","setItemsPerPage","onRearrange","setVisibleColumns","dataTableListId","items$","subCollections$","itemsPerPage$","totalItems$","currentPage$","activeCollectionIndex$","searchTermControl","CollectionListComponent_ng_template_13_ng_container_0_Template","activeCollectionId$","CollectionListComponent_ng_template_13_Template","_c31","_c32","_c33","_c34","CollectionTreeNodeComponent_div_3_button_5_clr_icon_1_Template","CollectionTreeNodeComponent_div_3_button_5_clr_icon_2_Template","CollectionTreeNodeComponent_div_3_button_5_Template","expandAll","expanded","CollectionTreeNodeComponent_div_3_ng_template_6_Template","CollectionTreeNodeComponent_div_3_vdr_chip_10_Template","CollectionTreeNodeComponent_div_3_div_19_Template","CollectionTreeNodeComponent_div_3_a_24_Template","CollectionTreeNodeComponent_div_3_button_39_Template","_r9","move","hasUpdatePermission$","path","CollectionTreeNodeComponent_div_3_vdr_collection_tree_node_46_Template","activeCollectionId","CollectionTreeNodeComponent_div_3_Template","toggleSelection","getMoveListItems","i_r7","moveUp","ctx_r7","moveDown","delete","folderSpacer_r11","collectionTree","moveListItems","hasDeletePermission$","CollectionTreeComponent_vdr_collection_tree_node_0_Template","ctx_r0","ConfirmVariantDeletionDialogComponent_ng_template_0_Template","ConfirmVariantDeletionDialogComponent_li_4_Template","ConfirmVariantDeletionDialogComponent_ng_template_5_Template","CreateFacetValueDialogComponent_ng_template_0_Template","CreateFacetValueDialogComponent_ng_template_8_Template","_c35","_c36","_c37","_c38","FacetDetailComponent_button_9_Template","FacetDetailComponent_ng_template_11_button_0_Template","FacetDetailComponent_ng_template_11_Template","FacetDetailComponent_ng_container_24_Template","FacetDetailComponent_ng_template_25_Template","FacetDetailComponent_vdr_page_entity_info_28_Template","FacetDetailComponent_vdr_card_41_Template","FacetDetailComponent_vdr_card_43_ng_template_2_Template","filterControl","FacetDetailComponent_vdr_card_43_ng_container_3_ng_container_11_Template","FacetDetailComponent_vdr_card_43_ng_container_3_tr_14_td_8_Template","value_r8","customValueFields","FacetDetailComponent_vdr_card_43_ng_container_3_tr_14_Template","updateValueCode","target","deleteFacetValue","FacetDetailComponent_vdr_card_43_ng_container_3_Template","setCurrentPage","filteredValues_r9","FacetDetailComponent_vdr_card_43_button_6_Template","addFacetValue","FacetDetailComponent_vdr_card_43_Template","values$","FacetListComponent_a_8_Template","FacetListComponent_ng_template_20_Template","facet_r1","FacetListComponent_ng_template_23_Template","facet_r2","FacetListComponent_ng_template_26_Template","facet_r3","FacetListComponent_ng_template_29_Template","facet_r4","FacetListComponent_ng_template_32_Template","facet_r5","FacetListComponent_ng_template_35_vdr_chip_0_Template","FacetListComponent_ng_template_35_vdr_chip_1_Template","FacetListComponent_ng_template_35_Template","facet_r6","FacetListComponent_ng_template_38_vdr_facet_value_chip_1_Template","value_r7","FacetListComponent_ng_template_38_vdr_chip_3_Template","facet_r8","valueList","FacetListComponent_ng_template_38_button_4_ng_container_1_Template","ctx_r9","initialLimit","FacetListComponent_ng_template_38_button_4_ng_template_2_Template","FacetListComponent_ng_template_38_button_4_Template","toggleDisplayLimit","collapse_r11","displayLimit","FacetListComponent_ng_template_38_Template","FacetListComponent_vdr_dt2_custom_field_column_39_Template","customField_r12","_c39","GenerateProductVariantsComponent_div_0_Template","optionValueInputComponent_r3","handleEnter","generateVariants","GenerateProductVariantsComponent_ng_container_5_clr_alert_1_Template","GenerateProductVariantsComponent_ng_container_5_vdr_form_field_3_option_3_Template","location_r6","GenerateProductVariantsComponent_ng_container_5_vdr_form_field_3_Template","selectedStockLocationId","stockLocations_r7","GenerateProductVariantsComponent_ng_container_5_div_4_th_4_Template","GenerateProductVariantsComponent_ng_container_5_div_4_th_5_Template","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_td_1_Template","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_td_2_Template","join","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_Template","variantFormValues","enabled","variants","GenerateProductVariantsComponent_ng_container_5_div_4_Template","trackByFn","GenerateProductVariantsComponent_ng_container_5_Template","_c40","ProductVariantListComponent_vdr_page_block_0_Template","setLanguage","availableLanguages$","contentLanguage$","ProductVariantListComponent_ng_template_11_Template","ProductVariantListComponent_ng_template_14_Template","ProductVariantListComponent_ng_template_17_Template","ProductVariantListComponent_ng_template_20_img_1_Template","asset_r6","ProductVariantListComponent_ng_template_20_ng_template_2_Template","ProductVariantListComponent_ng_template_20_Template","imagePlaceholder_r8","featuredAsset","ProductVariantListComponent_ng_template_23_Template","ProductVariantListComponent_ng_template_26_Template","variant_r10","ProductVariantListComponent_ng_template_29_vdr_chip_0_Template","ProductVariantListComponent_ng_template_29_vdr_chip_1_Template","ProductVariantListComponent_ng_template_29_Template","variant_r11","ProductVariantListComponent_ng_template_32_Template","variant_r12","ProductVariantListComponent_ng_template_35_Template","ProductVariantListComponent_ng_template_38_vdr_chip_0_span_4_Template","stockLevel_r14","stockAllocated","ProductVariantListComponent_ng_template_38_vdr_chip_0_Template","stockLocation","stockOnHand","ProductVariantListComponent_ng_template_38_Template","stockLevels","ProductVariantListComponent_vdr_dt2_custom_field_column_39_Template","field_r16","_c41","_c42","_c43","_c44","ProductDetailComponent_button_10_Template","createVariantsConfig","ProductDetailComponent_ng_template_12_button_0_Template","ProductDetailComponent_ng_template_12_Template","updatePermissions","ProductDetailComponent_clr_toggle_wrapper_21_Template","ProductDetailComponent_ng_container_22_vdr_card_1_vdr_form_item_2_ng_container_3_vdr_chip_1_Template","channel_r7","removeFromChannel","ProductDetailComponent_ng_container_22_vdr_card_1_vdr_form_item_2_ng_container_3_Template","isDefaultChannel","ProductDetailComponent_ng_container_22_vdr_card_1_vdr_form_item_2_Template","assignToChannel","productChannels$","ProductDetailComponent_ng_container_22_vdr_card_1_Template","ProductDetailComponent_ng_container_22_Template","ProductDetailComponent_vdr_card_24_vdr_chip_3_Template","optionGroup_r8","ProductDetailComponent_vdr_card_24_a_6_Template","ProductDetailComponent_vdr_card_24_Template","entity","ProductDetailComponent_vdr_facet_value_chip_28_Template","facetValue_r10","removeProductFacetValue","ProductDetailComponent_button_31_Template","_r11","selectProductFacetValue","ProductDetailComponent_vdr_card_32_Template","entity_r12","ProductDetailComponent_div_43_Template","ProductDetailComponent_vdr_card_55_Template","ProductDetailComponent_div_63_Template","ProductDetailComponent_ng_template_65_Template","ProductDetailComponent_div_67_Template","_c45","ProductListComponent_a_8_Template","ProductListComponent_ng_template_24_Template","product_r1","ProductListComponent_ng_template_27_Template","product_r2","ProductListComponent_ng_template_30_Template","product_r3","ProductListComponent_ng_template_33_img_1_Template","asset_r4","ProductListComponent_ng_template_33_ng_template_2_Template","ProductListComponent_ng_template_33_Template","product_r5","imagePlaceholder_r6","ProductListComponent_ng_template_36_Template","product_r7","ProductListComponent_ng_template_39_Template","product_r8","ProductListComponent_ng_template_42_vdr_chip_0_Template","ProductListComponent_ng_template_42_vdr_chip_1_Template","ProductListComponent_ng_template_42_Template","product_r9","ProductListComponent_ng_template_45_Template","product_r10","variantList","ProductListComponent_vdr_dt2_custom_field_column_46_Template","customField_r11","ctx_r11","_c47","rate","_c48","VariantPriceDetailComponent_div_3_Template","taxRate$","VariantPriceDetailComponent_div_4_Template","grossPrice$","VariantPriceStrategyDetailComponent_div_0_Template","variant","ProductVariantQuickJumpComponent_ng_select_0_ng_template_3_Template","item_r3","ProductVariantQuickJumpComponent_ng_select_0_Template","selectedVariantId","onSelect","variants$","searchFn","_c49","_c50","ProductVariantDetailComponent_ng_container_4_vdr_language_selector_1_Template","availableLanguages_r3","isNew$","languageCode$","ProductVariantDetailComponent_ng_container_4_Template","ProductVariantDetailComponent_button_9_Template","stockLevelsForm","pricesForm","ProductVariantDetailComponent_form_11_clr_toggle_wrapper_6_Template","ProductVariantDetailComponent_form_11_vdr_card_7_vdr_chip_3_Template","option_r6","optionGroupCode","groupId","optionName","ProductVariantDetailComponent_form_11_vdr_card_7_a_6_Template","ProductVariantDetailComponent_form_11_vdr_card_7_Template","ProductVariantDetailComponent_form_11_vdr_facet_value_chip_11_Template","facetValue_r9","ProductVariantDetailComponent_form_11_button_14_Template","selectFacetValue","ProductVariantDetailComponent_form_11_vdr_page_entity_info_16_Template","entity_r11","ProductVariantDetailComponent_form_11_vdr_card_30_Template","ProductVariantDetailComponent_form_11_option_41_Template","taxCategory_r12","ProductVariantDetailComponent_form_11_div_43_div_7_Template","price_r14","toggleDeletePrice","channelDefaultCurrencyCode","ProductVariantDetailComponent_form_11_div_43_Template","undefined","controls","channelPriceIncludesTax$","ProductVariantDetailComponent_form_11_ng_container_46_div_1_button_8_Template","currencyCode_r16","addPriceInCurrency","ProductVariantDetailComponent_form_11_ng_container_46_div_1_Template","unusedCurrencyCodes_r17","ProductVariantDetailComponent_form_11_ng_container_46_Template","ProductVariantDetailComponent_form_11_div_76_Template","tmp_5_0","tmp_6_0","tmp_10_0","stockLevel_r18","ProductVariantDetailComponent_form_11_ng_container_77_div_1_button_8_Template","_r19","stockLocation_r20","addStockLocation","ProductVariantDetailComponent_form_11_ng_container_77_div_1_Template","unusedStockLocations_r21","ProductVariantDetailComponent_form_11_ng_container_77_Template","ProductVariantDetailComponent_form_11_Template","assetChanges","tmp_42_0","facetValues$","entity$","assets","taxCategories$","unusedCurrencyCodes$","inventoryIsNotTracked","globalOutOfStockThreshold","unusedStockLocation$","ProductVariantsTableComponent_ng_container_10_Template","ProductVariantsTableComponent_tr_22_ng_container_1_img_4_Template","featuredAsset_r2","ProductVariantsTableComponent_tr_22_ng_container_1_ng_template_5_Template","ProductVariantsTableComponent_tr_22_ng_container_1_ng_container_17_Template","option_r3","formGroup_r4","optionGroupName","ProductVariantsTableComponent_tr_22_ng_container_1_vdr_currency_input_21_Template","ProductVariantsTableComponent_tr_22_ng_container_1_vdr_currency_input_22_Template","ProductVariantsTableComponent_tr_22_ng_container_1_Template","placeholder_r7","getFeaturedAsset","channelPriceIncludesTax","ProductVariantsTableComponent_tr_22_Template","formGroupMap","UpdateProductOptionDialogComponent_ng_template_0_Template","UpdateProductOptionDialogComponent_section_14_Template","customFieldsForm","UpdateProductOptionDialogComponent_ng_template_15_Template","update","nameInput_r4","codeInput_r5","replaceLast","search","replace","lastIndex","lastIndexOf","substr","ProductDetailService","constructor","dataService","this","getTaxCategories","settings","mapSingle","data","taxCategories","pipe","shareReplay","createProductWithVariants","input","languageCode","createProduct$","createProduct","nonEmptyOptionGroups","groups","filter","g","createOptionGroups$","createProductOptionGroups","forkJoin","mergeMap","map","optionGroup","addOptionGroupToProduct","optionGroupId","of","v","optionIds","option","find","o","Error","og","reduce","flat","createProductVariants","stockLocationId","c","normalizeString","translations","createProductOptionGroup","variantData","notNullOrUndefined","stock","updateProduct","updateOptions","autoUpdate","productInput","variantsInput","updateOperations","updateVariantsInput","getProductVariantsForProduct","productVariants","push","productOldName","findTranslation","productNewName","currentVariantName","variantInput","existingVariantInput","variantTranslation","updateProductVariants","updateProductOptions","inputs","autoUpdateProductNames","updateProductVariantNames$","replacementMap","Map","newOptionName","oldOptionName","set","variantsToUpdate","size","oldOptionNames","Array","from","keys","variantName","some","updatedVariantName","updateProductOption","deleteProductVariant","switchMap","result","getProduct","single$","throwError","message","ɵfac","t","i1","ɵprov","token","factory","providedIn","ProductOptionsEditorComponent","BaseDetailComponent","route","router","serverConfigService","permissionsService","productDetailService","formBuilder","changeDetector","notificationService","super","autoUpdateVariantNames","getCustomFieldConfig","ngOnInit","optionGroups$","snapshot","tap","group","UntypedFormGroup","UntypedFormArray","init","$product","combineLatest","take","updatedProductOptionInputs","optionGroupForm","dirty","optionGroupEntity","getUpdatedOptionGroup","updateProductOptionGroup","optionForm","getUpdatedOption","subscribe","markAsPristine","markForCheck","success","marker","err","error","optionGroupFormGroup","createUpdatedTranslatable","translatable","updatedFields","customFieldConfig","defaultTranslation","optionFormGroup","setFormValues","groupsForm","groupTranslation","groupForm","setOptionGroupForm","setCustomFieldsForm","optionsForm","array","addControl","optionTranslation","setOptionForm","formGroup","currentTranslation","customValueFieldsGroup","hash","field","setCustomFieldFormValues","control","setValue","i1$1","i2","ɵcmp","type","selectors","features","decls","vars","consts","dependencies","i3","i3$1","i5","styles","changeDetection","CreateProductOptionGroupDialogComponent","Validators","required","updateCode","nameControl","codeControl","CreateProductVariantDialogComponent","record","FormControl","valueChanges","Object","every","entries","groupCode","optionId","getGroupIdFromCode","Number","getGroupCodeFromId","i5$1","OPTION_VALUE_INPUT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","OptionValueInputComponent","multi","formValue","add","EventEmitter","remove","edit","disabled","isFocussed","registerOnChange","fn","onChangeFn","registerOnTouched","onTouchFn","setDisabledState","isDisabled","writeValue","obj","focus","textArea","nativeElement","event","optionValue","nameInputs","setTimeout","newName","handleKey","key","addOptionValue","preventDefault","removeLastOption","handleBlur","parseInputIntoOptions","unique","split","s","trim","viewQuery","ElementRef","_t","outputs","textArea_r2","GeneratedVariant","ProductVariantsEditorComponent","modalService","formValueChanged","optionsChanged","SelectionManager","multiSelect","itemsAreEqual","a","b","additiveMode","refresh$","Subject","paramMap","getDefaultUiLanguage","getActiveChannel","activeChannel","product$","getProductVariantsOptions","parent","startWith","term","toLowerCase","p","allUsedOptionIds","allUsedOptionGroupIds","page","onFormChanged","variantInfo","canDeactivate","addOptionGroup","fromComponent","locals","EMPTY","next","usedByVariantsCount","dialog","title","body","translationVars","buttons","label","returnValue","val","removeOptionGroupFromProduct","force","__typename","addOptionToGroup","productOptionGroupId","createProductOption","deleteProductOption","variantId","response","createNewVariant","ProductVariantsResolver","BaseEntityResolver","mapStream","createRoutes","pageService","PageComponent","locationId","breadcrumb","getPageTabRoutes","redirectTo","link","CanDeactivateDetailGuard","resolve","inject","DataService","params","createResolveData","productOptionsEditorBreadcrumb","ApplyFacetDialogComponent","ngAfterViewInit","selector","FacetValueSelectorComponent","ASSET_DETAIL_QUERY","gql","ASSET_FRAGMENT","TAG_FRAGMENT","AssetDetailComponent","TypedBaseDetailComponent","FormGroup","tags","getCustomFieldsDefaults","ngOnDestroy","destroy","onAssetChange","markAsDirty","updateAsset","AssetListComponent","BaseListComponent","searchTerm$","BehaviorSubject","filterByTags$","uploading","setQueryFn","args","getAssetList","refetchOnChannelChange","skip","searchTerm","contains","tagsOperator","paginationConfig$","debounceTime","takeUntil","destroy$","refresh","allTags$","getTagList","filesSelected","files","createAssets","finalize","successCount","deleteAssets","showModalAndDelete","r","assetIds","res","i5$2","AssignProductsToChannelDialogComponent","productVariantIds","priceFactorControl","UntypedFormControl","selectedChannelIdControl","activeChannelId$","client","userStatus","activeChannelId","allChannels$","getChannels","channels","availableChannels","ids","selectChannel","variantsPreview$","getTopVariants","factor","channelIds","assignVariantsToChannel","channelId","priceFactor","assignProductsToChannel","productIds","_this","_asyncToGenerator","lastValueFrom","getProductVariants","filterOperator","in","noSelection_r7","currentChannelIds","GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS","GET_VARIANTS_WITH_FACET_VALUES_BY_IDS","UPDATE_PRODUCTS_BULK","UPDATE_VARIANTS_BULK","BulkAddFacetValuesDialogComponent","changeDetectorRef","mode","state","fetchData$","query","products","subscription","unsubscribe","facetValueId","fv","selectedFacetValueIds","mutate","facetValueIds","CollectionContentsComponent","previewUpdatedFilters","filterTermControl","isLoading","collectionIdChange$","parentIdChange$","filterChanges$","inheritFiltersChanges$","contentsCurrentPage$","queryParamMap","qpm","distinctUntilChanged","contentsItemsPerPage$","perPage","filterTerm$","setContentsPageNumber","asObservable","inheritFilters","collection$","filterTerm","filterClause","previewCollectionVariants","catchError","getCollectionContents","contents$","contentsTotalItems$","ngOnChanges","changes","collectionId","currentValue","updatedFilters","complete","setParam","setContentsItemsPerPage","navigate","relativeTo","queryParams","n","queryParamsHandling","replaceUrl","contentQueries","dirIndex","TemplateRef","headerTemplate","CollectionDataTableComponent","DataTable2Component","changeOrder","dragRefs","sortPredicate","dropList","getSortedItems","subCollections","allCollections","subCollectionMatches","forEach","collectionRowList","removeItem","ref","toArray","dropContainer","_dragRef","_withDropContainer","_dropListRef","addItem","onDrop","isTopLevel","pageIndexOffset","parentIndex","findIndex","adjustedIndex","currentIndex","splice","previousIndex","adjustedPreviousIndex","CdkDropList","CdkDrag","ngContentSelectors","onColumnReorder","onColumnsReset","disableSelect","selection","uiLanguage$","sortedColumns","i4","COLLECTION_DETAIL_QUERY","COLLECTION_FRAGMENT","CollectionDetailComponent","localStorageService","unicodePatternValidator","visible","filterRemoved$","getCollectionFilters","collectionFilters","filtersFormArray","inheritFiltersControl","inheritFilters$","updatedFilters$","merge","statusChanges","touched","mapOperationsToInputs","_filter","arg","arguments","parentId$","pm","f","updateSlug","nameValue","slugControl","currentSlugIsEmpty","collectionFilter","filtersArray","argsHash","output","getConfigArgValue","removeAt","markAsTouched","getUpdatedCollection","createCollection","category","updateCollection","contentsComponent","JSON","stringify","patchValue","formArray","clear","featuredAssetId","operations","formValueOperations","j","encodeConfigArgValue","updateButton_r17","private_r18","noInherit_r19","CollectionBreadcrumbPipe","transform","slice","ɵpipe","pure","MoveCollectionsDialogComponent","i18nService","expandedIds$","getCollectionsResult","getCollections","topLevelOnly","refetch","rootCollectionId$","collections","rootCollectionId","translate","deleteCollectionsBulkAction","createBulkDeleteAction","location","requiresPermission","userPermissions","getItemName","bulkDelete","deleteCollections","moveCollectionsBulkAction","icon","onClick","hostComponent","clearSelection","ModalService","NotificationService","closable","moveCollection","assignCollectionsToChannelBulkAction","createBulkAssignToChannelAction","bulkAssignToChannel","collectionIds","assignCollectionsToChannel","removeCollectionsFromChannelBulkAction","createBulkRemoveFromChannelAction","bulkRemoveFromChannel","removeCollectionsFromChannel","duplicateCollectionsBulkAction","DuplicateEntityDialogComponent","entities","entityName","getEntityName","CollectionListComponent","TypedBaseListComponent","createFilterCollection","addIdFilter","addDateFilters","kind","filterField","toFilterInput","eq","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSort","addCustomFieldSorts","configure","document","GetCollectionListDocument","getItems","setVariables","_take","createFilterInput","createSortInput","refreshListOnChanges","activeCollectionTitle$","match","closeContents","setContentLanguage","CollectionTreeService","allMoveListItems","_rearrange$","_delete$","rearrange$","delete$","setCollectionTree","tree","resetMoveList","calculateAllMoveListItems","ancestorIdPath","has","newParentId","container","onMove","onDelete","visit","node","parentPath","concat","child","Set","CollectionTreeNodeComponent","collectionTreeService","parentName","permissions$","permissions","perms","selectionChanges$","expandAllChange","previousValue","drop","moveItemInArray","arrayToTree","nodes","currentState","topLevelNodes","mappedArr","currentStateMap","treeToMap","nodeMap","hasOwnProperty","mappedElem","CollectionTreeComponent","rearrange","deleteCollection","ConfirmVariantDeletionDialogComponent","CreateFacetValueDialogComponent","facetId","FACET_DETAIL_QUERY","FACET_WITH_VALUE_LIST_FRAGMENT","FacetDetailComponent","facet","fetchFacetValues","currentCode","valueId","customValueFieldIsSet","createFacetValues","facetForm","newFacet","getUpdatedFacet","createFacet","valuesFormRecord","updatedFacetInput","updateFacet","updatedValues","getUpdatedFacetValues","updateFacetValues","deleted","GetFacetDetailDocument","deleteFacetValues","newPage","facetValueListOptions","SortOrder$1","setFacetValueFormValues","currentValuesFormGroup","valueTranslation","valueControl","fieldDef","fieldValue","facetFormGroup","valuesFormGroup","updateButton_r11","private_r12","deleteFacetsBulkAction","shouldRetryItem","retrying","deleteFacets","assignFacetsToChannelBulkAction","facetIds","assignFacetsToChannel","removeFacetsFromChannelBulkAction","removeFacetsFromChannel","isErrorResult","removeFacetsFromChannelBulkAction2","getTranslationVars","getChannelCodeFromUserStatus","iconClass","isVisible","currentChannelIsNotDefault","res2","removedCount","errors","errorIds","result2","notRemovedCount","then","duplicateFacetsBulkAction","FACET_LIST_QUERY","FacetListComponent","GetFacetListDocument","facets","DEFAULT_VARIANT_CODE","GenerateProductVariantsComponent","variantsChange","stockLocations$","GetStockLocationListDocument","stockLocations","onFormChange","groupNameInputs","sum","generateAllCombinations","nonNullable","copyFromDefault","copyValuesToPristine","optionValueInputComponent","stopPropagation","formControl","correspondingFormControl","emitEvent","variantsToCreate","prop","ProductVariantListComponent","hideLanguageSelect","addFilters","inputType","addSorts","ProductVariantListQueryDocument","filterParam","_and","filterInput","_or","dataTableId","GET_PRODUCT_DETAIL","PRODUCT_DETAIL_FRAGMENT","ProductDetailComponent","productFacetValues$","formFacetValueIdChanges$","getFacetValues","DEFAULT_CHANNEL_CODE","removeProductsFromChannel","assignVariantToChannel","removeVariantFromChannel","removeVariantsFromChannel","displayFacetValueModal","productGroup","currentFacetValueIds","newProduct","getUpdatedProduct","console","updateSlugAfterSave","productFormGroup","results","firstResult","isUpdateMutation","tmp_18_0","updateButton_r14","variantList_r15","deleteProductsBulkAction","deleteProducts","assignProductsToChannelBulkAction","isMultiChannel","removeProductsFromChannelBulkAction","assignFacetValuesToProductsBulkAction","duplicateProductsBulkAction","ProductListComponent","jobQueueService","pendingSearchIndexUpdates","pageLocationId","FacetValueFormInputComponent","serializeValue","deserializeValue","getLabel","ProductListQueryDocument","rebuildSearchIndex","reindex","info","addJob","job","time","Intl","NumberFormat","format","duration","indexedItemCount","deleteProduct","delay","VariantPriceDetailComponent","priceChange$","taxCategoryIdChange$","taxRates$","getTaxRatesSimple","taxRates","activeChannel$","taxCategoryId","defaultTaxZone","applicableRate","taxRate","zone","Math","round","priceIncludesTax","VariantPriceStrategyDetailComponent","calculatedPriceDiffersFromInputPrice","defaultPrice","prices","ProductVariantQuickJumpComponent","GetProductVariantsQuickJumpDocument","tmp_0_0","ProductVariantDetailComponent","customOptionFields","useGlobalOutOfStockThreshold","outOfStockThreshold","trackInventory","getGlobalSettings","globalSettings","globalTrackInventory","result$","availableCurrencyCodes$","availableCurrencyCodes","currencyCodes","usedIds","l","pricesIncludeTax","stockLevels$","switchMapTo","innerObservable","resultSelector","isFunction","deleteFormControl","stockLocationName","pick","getUpdatedVariant","ProductVariantUpdateMutationDocument","taxCategory","stockLevel","variantFormGroup","assignProductVariantsToChannelBulkAction","removeProductVariantsFromChannelBulkAction","removeProductVariantsFromChannel","deleteProductVariantsBulkAction","deleteProductVariants","assignFacetValuesToProductVariantsBulkAction","ProductVariantsTableComponent","buildFormGroupMap","pendingAssetChanges","controlGroup","None","paginationConfig","UpdateProductOptionDialogComponent","updateVariantName","codeInputTouched","productOption","activeLanguage","cfCurrentTranslation","CatalogModule","hasRegisteredTabsAndBulkActions","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","GetProductDetailDocument","entityKey","getBreadcrumbs","GetProductVariantDetailDocument","variables","CollectionDetailQueryDocument","AssetDetailQueryDocument","ɵmod","ɵinj","providers","ROUTES","useFactory","deps","PageService","imports","SharedModule","RouterModule","forChild","PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT","PRODUCT_LIST_QUERY","PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT","PRODUCT_VARIANT_DETAIL_QUERY","PRODUCT_VARIANT_UPDATE_MUTATION","PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT","PRODUCT_VARIANT_LIST_QUERY"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/@vendure/common/lib/generated-types.js","../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-catalog.mjs","../node_modules/rxjs/dist/esm/internal/operators/switchMapTo.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StockMovementType = exports.SortOrder = exports.Permission = exports.OrderType = exports.MetricType = exports.MetricInterval = exports.LogicalOperator = exports.LanguageCode = exports.JobState = exports.HistoryEntryType = exports.GlobalFlag = exports.ErrorCode = exports.DeletionResult = exports.CurrencyCode = exports.AssetType = exports.AdjustmentType = void 0;\nvar AdjustmentType;\n(function (AdjustmentType) {\n    AdjustmentType[\"DISTRIBUTED_ORDER_PROMOTION\"] = \"DISTRIBUTED_ORDER_PROMOTION\";\n    AdjustmentType[\"OTHER\"] = \"OTHER\";\n    AdjustmentType[\"PROMOTION\"] = \"PROMOTION\";\n})(AdjustmentType || (exports.AdjustmentType = AdjustmentType = {}));\nvar AssetType;\n(function (AssetType) {\n    AssetType[\"BINARY\"] = \"BINARY\";\n    AssetType[\"IMAGE\"] = \"IMAGE\";\n    AssetType[\"VIDEO\"] = \"VIDEO\";\n})(AssetType || (exports.AssetType = AssetType = {}));\n/**\n * @description\n * ISO 4217 currency code\n *\n * @docsCategory common\n */\nvar CurrencyCode;\n(function (CurrencyCode) {\n    /** United Arab Emirates dirham */\n    CurrencyCode[\"AED\"] = \"AED\";\n    /** Afghan afghani */\n    CurrencyCode[\"AFN\"] = \"AFN\";\n    /** Albanian lek */\n    CurrencyCode[\"ALL\"] = \"ALL\";\n    /** Armenian dram */\n    CurrencyCode[\"AMD\"] = \"AMD\";\n    /** Netherlands Antillean guilder */\n    CurrencyCode[\"ANG\"] = \"ANG\";\n    /** Angolan kwanza */\n    CurrencyCode[\"AOA\"] = \"AOA\";\n    /** Argentine peso */\n    CurrencyCode[\"ARS\"] = \"ARS\";\n    /** Australian dollar */\n    CurrencyCode[\"AUD\"] = \"AUD\";\n    /** Aruban florin */\n    CurrencyCode[\"AWG\"] = \"AWG\";\n    /** Azerbaijani manat */\n    CurrencyCode[\"AZN\"] = \"AZN\";\n    /** Bosnia and Herzegovina convertible mark */\n    CurrencyCode[\"BAM\"] = \"BAM\";\n    /** Barbados dollar */\n    CurrencyCode[\"BBD\"] = \"BBD\";\n    /** Bangladeshi taka */\n    CurrencyCode[\"BDT\"] = \"BDT\";\n    /** Bulgarian lev */\n    CurrencyCode[\"BGN\"] = \"BGN\";\n    /** Bahraini dinar */\n    CurrencyCode[\"BHD\"] = \"BHD\";\n    /** Burundian franc */\n    CurrencyCode[\"BIF\"] = \"BIF\";\n    /** Bermudian dollar */\n    CurrencyCode[\"BMD\"] = \"BMD\";\n    /** Brunei dollar */\n    CurrencyCode[\"BND\"] = \"BND\";\n    /** Boliviano */\n    CurrencyCode[\"BOB\"] = \"BOB\";\n    /** Brazilian real */\n    CurrencyCode[\"BRL\"] = \"BRL\";\n    /** Bahamian dollar */\n    CurrencyCode[\"BSD\"] = \"BSD\";\n    /** Bhutanese ngultrum */\n    CurrencyCode[\"BTN\"] = \"BTN\";\n    /** Botswana pula */\n    CurrencyCode[\"BWP\"] = \"BWP\";\n    /** Belarusian ruble */\n    CurrencyCode[\"BYN\"] = \"BYN\";\n    /** Belize dollar */\n    CurrencyCode[\"BZD\"] = \"BZD\";\n    /** Canadian dollar */\n    CurrencyCode[\"CAD\"] = \"CAD\";\n    /** Congolese franc */\n    CurrencyCode[\"CDF\"] = \"CDF\";\n    /** Swiss franc */\n    CurrencyCode[\"CHF\"] = \"CHF\";\n    /** Chilean peso */\n    CurrencyCode[\"CLP\"] = \"CLP\";\n    /** Renminbi (Chinese) yuan */\n    CurrencyCode[\"CNY\"] = \"CNY\";\n    /** Colombian peso */\n    CurrencyCode[\"COP\"] = \"COP\";\n    /** Costa Rican colon */\n    CurrencyCode[\"CRC\"] = \"CRC\";\n    /** Cuban convertible peso */\n    CurrencyCode[\"CUC\"] = \"CUC\";\n    /** Cuban peso */\n    CurrencyCode[\"CUP\"] = \"CUP\";\n    /** Cape Verde escudo */\n    CurrencyCode[\"CVE\"] = \"CVE\";\n    /** Czech koruna */\n    CurrencyCode[\"CZK\"] = \"CZK\";\n    /** Djiboutian franc */\n    CurrencyCode[\"DJF\"] = \"DJF\";\n    /** Danish krone */\n    CurrencyCode[\"DKK\"] = \"DKK\";\n    /** Dominican peso */\n    CurrencyCode[\"DOP\"] = \"DOP\";\n    /** Algerian dinar */\n    CurrencyCode[\"DZD\"] = \"DZD\";\n    /** Egyptian pound */\n    CurrencyCode[\"EGP\"] = \"EGP\";\n    /** Eritrean nakfa */\n    CurrencyCode[\"ERN\"] = \"ERN\";\n    /** Ethiopian birr */\n    CurrencyCode[\"ETB\"] = \"ETB\";\n    /** Euro */\n    CurrencyCode[\"EUR\"] = \"EUR\";\n    /** Fiji dollar */\n    CurrencyCode[\"FJD\"] = \"FJD\";\n    /** Falkland Islands pound */\n    CurrencyCode[\"FKP\"] = \"FKP\";\n    /** Pound sterling */\n    CurrencyCode[\"GBP\"] = \"GBP\";\n    /** Georgian lari */\n    CurrencyCode[\"GEL\"] = \"GEL\";\n    /** Ghanaian cedi */\n    CurrencyCode[\"GHS\"] = \"GHS\";\n    /** Gibraltar pound */\n    CurrencyCode[\"GIP\"] = \"GIP\";\n    /** Gambian dalasi */\n    CurrencyCode[\"GMD\"] = \"GMD\";\n    /** Guinean franc */\n    CurrencyCode[\"GNF\"] = \"GNF\";\n    /** Guatemalan quetzal */\n    CurrencyCode[\"GTQ\"] = \"GTQ\";\n    /** Guyanese dollar */\n    CurrencyCode[\"GYD\"] = \"GYD\";\n    /** Hong Kong dollar */\n    CurrencyCode[\"HKD\"] = \"HKD\";\n    /** Honduran lempira */\n    CurrencyCode[\"HNL\"] = \"HNL\";\n    /** Croatian kuna */\n    CurrencyCode[\"HRK\"] = \"HRK\";\n    /** Haitian gourde */\n    CurrencyCode[\"HTG\"] = \"HTG\";\n    /** Hungarian forint */\n    CurrencyCode[\"HUF\"] = \"HUF\";\n    /** Indonesian rupiah */\n    CurrencyCode[\"IDR\"] = \"IDR\";\n    /** Israeli new shekel */\n    CurrencyCode[\"ILS\"] = \"ILS\";\n    /** Indian rupee */\n    CurrencyCode[\"INR\"] = \"INR\";\n    /** Iraqi dinar */\n    CurrencyCode[\"IQD\"] = \"IQD\";\n    /** Iranian rial */\n    CurrencyCode[\"IRR\"] = \"IRR\";\n    /** Icelandic króna */\n    CurrencyCode[\"ISK\"] = \"ISK\";\n    /** Jamaican dollar */\n    CurrencyCode[\"JMD\"] = \"JMD\";\n    /** Jordanian dinar */\n    CurrencyCode[\"JOD\"] = \"JOD\";\n    /** Japanese yen */\n    CurrencyCode[\"JPY\"] = \"JPY\";\n    /** Kenyan shilling */\n    CurrencyCode[\"KES\"] = \"KES\";\n    /** Kyrgyzstani som */\n    CurrencyCode[\"KGS\"] = \"KGS\";\n    /** Cambodian riel */\n    CurrencyCode[\"KHR\"] = \"KHR\";\n    /** Comoro franc */\n    CurrencyCode[\"KMF\"] = \"KMF\";\n    /** North Korean won */\n    CurrencyCode[\"KPW\"] = \"KPW\";\n    /** South Korean won */\n    CurrencyCode[\"KRW\"] = \"KRW\";\n    /** Kuwaiti dinar */\n    CurrencyCode[\"KWD\"] = \"KWD\";\n    /** Cayman Islands dollar */\n    CurrencyCode[\"KYD\"] = \"KYD\";\n    /** Kazakhstani tenge */\n    CurrencyCode[\"KZT\"] = \"KZT\";\n    /** Lao kip */\n    CurrencyCode[\"LAK\"] = \"LAK\";\n    /** Lebanese pound */\n    CurrencyCode[\"LBP\"] = \"LBP\";\n    /** Sri Lankan rupee */\n    CurrencyCode[\"LKR\"] = \"LKR\";\n    /** Liberian dollar */\n    CurrencyCode[\"LRD\"] = \"LRD\";\n    /** Lesotho loti */\n    CurrencyCode[\"LSL\"] = \"LSL\";\n    /** Libyan dinar */\n    CurrencyCode[\"LYD\"] = \"LYD\";\n    /** Moroccan dirham */\n    CurrencyCode[\"MAD\"] = \"MAD\";\n    /** Moldovan leu */\n    CurrencyCode[\"MDL\"] = \"MDL\";\n    /** Malagasy ariary */\n    CurrencyCode[\"MGA\"] = \"MGA\";\n    /** Macedonian denar */\n    CurrencyCode[\"MKD\"] = \"MKD\";\n    /** Myanmar kyat */\n    CurrencyCode[\"MMK\"] = \"MMK\";\n    /** Mongolian tögrög */\n    CurrencyCode[\"MNT\"] = \"MNT\";\n    /** Macanese pataca */\n    CurrencyCode[\"MOP\"] = \"MOP\";\n    /** Mauritanian ouguiya */\n    CurrencyCode[\"MRU\"] = \"MRU\";\n    /** Mauritian rupee */\n    CurrencyCode[\"MUR\"] = \"MUR\";\n    /** Maldivian rufiyaa */\n    CurrencyCode[\"MVR\"] = \"MVR\";\n    /** Malawian kwacha */\n    CurrencyCode[\"MWK\"] = \"MWK\";\n    /** Mexican peso */\n    CurrencyCode[\"MXN\"] = \"MXN\";\n    /** Malaysian ringgit */\n    CurrencyCode[\"MYR\"] = \"MYR\";\n    /** Mozambican metical */\n    CurrencyCode[\"MZN\"] = \"MZN\";\n    /** Namibian dollar */\n    CurrencyCode[\"NAD\"] = \"NAD\";\n    /** Nigerian naira */\n    CurrencyCode[\"NGN\"] = \"NGN\";\n    /** Nicaraguan córdoba */\n    CurrencyCode[\"NIO\"] = \"NIO\";\n    /** Norwegian krone */\n    CurrencyCode[\"NOK\"] = \"NOK\";\n    /** Nepalese rupee */\n    CurrencyCode[\"NPR\"] = \"NPR\";\n    /** New Zealand dollar */\n    CurrencyCode[\"NZD\"] = \"NZD\";\n    /** Omani rial */\n    CurrencyCode[\"OMR\"] = \"OMR\";\n    /** Panamanian balboa */\n    CurrencyCode[\"PAB\"] = \"PAB\";\n    /** Peruvian sol */\n    CurrencyCode[\"PEN\"] = \"PEN\";\n    /** Papua New Guinean kina */\n    CurrencyCode[\"PGK\"] = \"PGK\";\n    /** Philippine peso */\n    CurrencyCode[\"PHP\"] = \"PHP\";\n    /** Pakistani rupee */\n    CurrencyCode[\"PKR\"] = \"PKR\";\n    /** Polish złoty */\n    CurrencyCode[\"PLN\"] = \"PLN\";\n    /** Paraguayan guaraní */\n    CurrencyCode[\"PYG\"] = \"PYG\";\n    /** Qatari riyal */\n    CurrencyCode[\"QAR\"] = \"QAR\";\n    /** Romanian leu */\n    CurrencyCode[\"RON\"] = \"RON\";\n    /** Serbian dinar */\n    CurrencyCode[\"RSD\"] = \"RSD\";\n    /** Russian ruble */\n    CurrencyCode[\"RUB\"] = \"RUB\";\n    /** Rwandan franc */\n    CurrencyCode[\"RWF\"] = \"RWF\";\n    /** Saudi riyal */\n    CurrencyCode[\"SAR\"] = \"SAR\";\n    /** Solomon Islands dollar */\n    CurrencyCode[\"SBD\"] = \"SBD\";\n    /** Seychelles rupee */\n    CurrencyCode[\"SCR\"] = \"SCR\";\n    /** Sudanese pound */\n    CurrencyCode[\"SDG\"] = \"SDG\";\n    /** Swedish krona/kronor */\n    CurrencyCode[\"SEK\"] = \"SEK\";\n    /** Singapore dollar */\n    CurrencyCode[\"SGD\"] = \"SGD\";\n    /** Saint Helena pound */\n    CurrencyCode[\"SHP\"] = \"SHP\";\n    /** Sierra Leonean leone */\n    CurrencyCode[\"SLL\"] = \"SLL\";\n    /** Somali shilling */\n    CurrencyCode[\"SOS\"] = \"SOS\";\n    /** Surinamese dollar */\n    CurrencyCode[\"SRD\"] = \"SRD\";\n    /** South Sudanese pound */\n    CurrencyCode[\"SSP\"] = \"SSP\";\n    /** São Tomé and Príncipe dobra */\n    CurrencyCode[\"STN\"] = \"STN\";\n    /** Salvadoran colón */\n    CurrencyCode[\"SVC\"] = \"SVC\";\n    /** Syrian pound */\n    CurrencyCode[\"SYP\"] = \"SYP\";\n    /** Swazi lilangeni */\n    CurrencyCode[\"SZL\"] = \"SZL\";\n    /** Thai baht */\n    CurrencyCode[\"THB\"] = \"THB\";\n    /** Tajikistani somoni */\n    CurrencyCode[\"TJS\"] = \"TJS\";\n    /** Turkmenistan manat */\n    CurrencyCode[\"TMT\"] = \"TMT\";\n    /** Tunisian dinar */\n    CurrencyCode[\"TND\"] = \"TND\";\n    /** Tongan paʻanga */\n    CurrencyCode[\"TOP\"] = \"TOP\";\n    /** Turkish lira */\n    CurrencyCode[\"TRY\"] = \"TRY\";\n    /** Trinidad and Tobago dollar */\n    CurrencyCode[\"TTD\"] = \"TTD\";\n    /** New Taiwan dollar */\n    CurrencyCode[\"TWD\"] = \"TWD\";\n    /** Tanzanian shilling */\n    CurrencyCode[\"TZS\"] = \"TZS\";\n    /** Ukrainian hryvnia */\n    CurrencyCode[\"UAH\"] = \"UAH\";\n    /** Ugandan shilling */\n    CurrencyCode[\"UGX\"] = \"UGX\";\n    /** United States dollar */\n    CurrencyCode[\"USD\"] = \"USD\";\n    /** Uruguayan peso */\n    CurrencyCode[\"UYU\"] = \"UYU\";\n    /** Uzbekistan som */\n    CurrencyCode[\"UZS\"] = \"UZS\";\n    /** Venezuelan bolívar soberano */\n    CurrencyCode[\"VES\"] = \"VES\";\n    /** Vietnamese đồng */\n    CurrencyCode[\"VND\"] = \"VND\";\n    /** Vanuatu vatu */\n    CurrencyCode[\"VUV\"] = \"VUV\";\n    /** Samoan tala */\n    CurrencyCode[\"WST\"] = \"WST\";\n    /** CFA franc BEAC */\n    CurrencyCode[\"XAF\"] = \"XAF\";\n    /** East Caribbean dollar */\n    CurrencyCode[\"XCD\"] = \"XCD\";\n    /** CFA franc BCEAO */\n    CurrencyCode[\"XOF\"] = \"XOF\";\n    /** CFP franc (franc Pacifique) */\n    CurrencyCode[\"XPF\"] = \"XPF\";\n    /** Yemeni rial */\n    CurrencyCode[\"YER\"] = \"YER\";\n    /** South African rand */\n    CurrencyCode[\"ZAR\"] = \"ZAR\";\n    /** Zambian kwacha */\n    CurrencyCode[\"ZMW\"] = \"ZMW\";\n    /** Zimbabwean dollar */\n    CurrencyCode[\"ZWL\"] = \"ZWL\";\n})(CurrencyCode || (exports.CurrencyCode = CurrencyCode = {}));\nvar DeletionResult;\n(function (DeletionResult) {\n    /** The entity was successfully deleted */\n    DeletionResult[\"DELETED\"] = \"DELETED\";\n    /** Deletion did not take place, reason given in message */\n    DeletionResult[\"NOT_DELETED\"] = \"NOT_DELETED\";\n})(DeletionResult || (exports.DeletionResult = DeletionResult = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"ALREADY_REFUNDED_ERROR\"] = \"ALREADY_REFUNDED_ERROR\";\n    ErrorCode[\"CANCEL_ACTIVE_ORDER_ERROR\"] = \"CANCEL_ACTIVE_ORDER_ERROR\";\n    ErrorCode[\"CANCEL_PAYMENT_ERROR\"] = \"CANCEL_PAYMENT_ERROR\";\n    ErrorCode[\"CHANNEL_DEFAULT_LANGUAGE_ERROR\"] = \"CHANNEL_DEFAULT_LANGUAGE_ERROR\";\n    ErrorCode[\"COUPON_CODE_EXPIRED_ERROR\"] = \"COUPON_CODE_EXPIRED_ERROR\";\n    ErrorCode[\"COUPON_CODE_INVALID_ERROR\"] = \"COUPON_CODE_INVALID_ERROR\";\n    ErrorCode[\"COUPON_CODE_LIMIT_ERROR\"] = \"COUPON_CODE_LIMIT_ERROR\";\n    ErrorCode[\"CREATE_FULFILLMENT_ERROR\"] = \"CREATE_FULFILLMENT_ERROR\";\n    ErrorCode[\"DUPLICATE_ENTITY_ERROR\"] = \"DUPLICATE_ENTITY_ERROR\";\n    ErrorCode[\"EMAIL_ADDRESS_CONFLICT_ERROR\"] = \"EMAIL_ADDRESS_CONFLICT_ERROR\";\n    ErrorCode[\"EMPTY_ORDER_LINE_SELECTION_ERROR\"] = \"EMPTY_ORDER_LINE_SELECTION_ERROR\";\n    ErrorCode[\"FACET_IN_USE_ERROR\"] = \"FACET_IN_USE_ERROR\";\n    ErrorCode[\"FULFILLMENT_STATE_TRANSITION_ERROR\"] = \"FULFILLMENT_STATE_TRANSITION_ERROR\";\n    ErrorCode[\"GUEST_CHECKOUT_ERROR\"] = \"GUEST_CHECKOUT_ERROR\";\n    ErrorCode[\"INELIGIBLE_SHIPPING_METHOD_ERROR\"] = \"INELIGIBLE_SHIPPING_METHOD_ERROR\";\n    ErrorCode[\"INSUFFICIENT_STOCK_ERROR\"] = \"INSUFFICIENT_STOCK_ERROR\";\n    ErrorCode[\"INSUFFICIENT_STOCK_ON_HAND_ERROR\"] = \"INSUFFICIENT_STOCK_ON_HAND_ERROR\";\n    ErrorCode[\"INVALID_CREDENTIALS_ERROR\"] = \"INVALID_CREDENTIALS_ERROR\";\n    ErrorCode[\"INVALID_FULFILLMENT_HANDLER_ERROR\"] = \"INVALID_FULFILLMENT_HANDLER_ERROR\";\n    ErrorCode[\"ITEMS_ALREADY_FULFILLED_ERROR\"] = \"ITEMS_ALREADY_FULFILLED_ERROR\";\n    ErrorCode[\"LANGUAGE_NOT_AVAILABLE_ERROR\"] = \"LANGUAGE_NOT_AVAILABLE_ERROR\";\n    ErrorCode[\"MANUAL_PAYMENT_STATE_ERROR\"] = \"MANUAL_PAYMENT_STATE_ERROR\";\n    ErrorCode[\"MIME_TYPE_ERROR\"] = \"MIME_TYPE_ERROR\";\n    ErrorCode[\"MISSING_CONDITIONS_ERROR\"] = \"MISSING_CONDITIONS_ERROR\";\n    ErrorCode[\"MULTIPLE_ORDER_ERROR\"] = \"MULTIPLE_ORDER_ERROR\";\n    ErrorCode[\"NATIVE_AUTH_STRATEGY_ERROR\"] = \"NATIVE_AUTH_STRATEGY_ERROR\";\n    ErrorCode[\"NEGATIVE_QUANTITY_ERROR\"] = \"NEGATIVE_QUANTITY_ERROR\";\n    ErrorCode[\"NOTHING_TO_REFUND_ERROR\"] = \"NOTHING_TO_REFUND_ERROR\";\n    ErrorCode[\"NO_ACTIVE_ORDER_ERROR\"] = \"NO_ACTIVE_ORDER_ERROR\";\n    ErrorCode[\"NO_CHANGES_SPECIFIED_ERROR\"] = \"NO_CHANGES_SPECIFIED_ERROR\";\n    ErrorCode[\"ORDER_LIMIT_ERROR\"] = \"ORDER_LIMIT_ERROR\";\n    ErrorCode[\"ORDER_MODIFICATION_ERROR\"] = \"ORDER_MODIFICATION_ERROR\";\n    ErrorCode[\"ORDER_MODIFICATION_STATE_ERROR\"] = \"ORDER_MODIFICATION_STATE_ERROR\";\n    ErrorCode[\"ORDER_STATE_TRANSITION_ERROR\"] = \"ORDER_STATE_TRANSITION_ERROR\";\n    ErrorCode[\"PAYMENT_METHOD_MISSING_ERROR\"] = \"PAYMENT_METHOD_MISSING_ERROR\";\n    ErrorCode[\"PAYMENT_ORDER_MISMATCH_ERROR\"] = \"PAYMENT_ORDER_MISMATCH_ERROR\";\n    ErrorCode[\"PAYMENT_STATE_TRANSITION_ERROR\"] = \"PAYMENT_STATE_TRANSITION_ERROR\";\n    ErrorCode[\"PRODUCT_OPTION_IN_USE_ERROR\"] = \"PRODUCT_OPTION_IN_USE_ERROR\";\n    ErrorCode[\"QUANTITY_TOO_GREAT_ERROR\"] = \"QUANTITY_TOO_GREAT_ERROR\";\n    ErrorCode[\"REFUND_AMOUNT_ERROR\"] = \"REFUND_AMOUNT_ERROR\";\n    ErrorCode[\"REFUND_ORDER_STATE_ERROR\"] = \"REFUND_ORDER_STATE_ERROR\";\n    ErrorCode[\"REFUND_PAYMENT_ID_MISSING_ERROR\"] = \"REFUND_PAYMENT_ID_MISSING_ERROR\";\n    ErrorCode[\"REFUND_STATE_TRANSITION_ERROR\"] = \"REFUND_STATE_TRANSITION_ERROR\";\n    ErrorCode[\"SETTLE_PAYMENT_ERROR\"] = \"SETTLE_PAYMENT_ERROR\";\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n})(ErrorCode || (exports.ErrorCode = ErrorCode = {}));\nvar GlobalFlag;\n(function (GlobalFlag) {\n    GlobalFlag[\"FALSE\"] = \"FALSE\";\n    GlobalFlag[\"INHERIT\"] = \"INHERIT\";\n    GlobalFlag[\"TRUE\"] = \"TRUE\";\n})(GlobalFlag || (exports.GlobalFlag = GlobalFlag = {}));\nvar HistoryEntryType;\n(function (HistoryEntryType) {\n    HistoryEntryType[\"CUSTOMER_ADDED_TO_GROUP\"] = \"CUSTOMER_ADDED_TO_GROUP\";\n    HistoryEntryType[\"CUSTOMER_ADDRESS_CREATED\"] = \"CUSTOMER_ADDRESS_CREATED\";\n    HistoryEntryType[\"CUSTOMER_ADDRESS_DELETED\"] = \"CUSTOMER_ADDRESS_DELETED\";\n    HistoryEntryType[\"CUSTOMER_ADDRESS_UPDATED\"] = \"CUSTOMER_ADDRESS_UPDATED\";\n    HistoryEntryType[\"CUSTOMER_DETAIL_UPDATED\"] = \"CUSTOMER_DETAIL_UPDATED\";\n    HistoryEntryType[\"CUSTOMER_EMAIL_UPDATE_REQUESTED\"] = \"CUSTOMER_EMAIL_UPDATE_REQUESTED\";\n    HistoryEntryType[\"CUSTOMER_EMAIL_UPDATE_VERIFIED\"] = \"CUSTOMER_EMAIL_UPDATE_VERIFIED\";\n    HistoryEntryType[\"CUSTOMER_NOTE\"] = \"CUSTOMER_NOTE\";\n    HistoryEntryType[\"CUSTOMER_PASSWORD_RESET_REQUESTED\"] = \"CUSTOMER_PASSWORD_RESET_REQUESTED\";\n    HistoryEntryType[\"CUSTOMER_PASSWORD_RESET_VERIFIED\"] = \"CUSTOMER_PASSWORD_RESET_VERIFIED\";\n    HistoryEntryType[\"CUSTOMER_PASSWORD_UPDATED\"] = \"CUSTOMER_PASSWORD_UPDATED\";\n    HistoryEntryType[\"CUSTOMER_REGISTERED\"] = \"CUSTOMER_REGISTERED\";\n    HistoryEntryType[\"CUSTOMER_REMOVED_FROM_GROUP\"] = \"CUSTOMER_REMOVED_FROM_GROUP\";\n    HistoryEntryType[\"CUSTOMER_VERIFIED\"] = \"CUSTOMER_VERIFIED\";\n    HistoryEntryType[\"ORDER_CANCELLATION\"] = \"ORDER_CANCELLATION\";\n    HistoryEntryType[\"ORDER_COUPON_APPLIED\"] = \"ORDER_COUPON_APPLIED\";\n    HistoryEntryType[\"ORDER_COUPON_REMOVED\"] = \"ORDER_COUPON_REMOVED\";\n    HistoryEntryType[\"ORDER_CUSTOMER_UPDATED\"] = \"ORDER_CUSTOMER_UPDATED\";\n    HistoryEntryType[\"ORDER_FULFILLMENT\"] = \"ORDER_FULFILLMENT\";\n    HistoryEntryType[\"ORDER_FULFILLMENT_TRANSITION\"] = \"ORDER_FULFILLMENT_TRANSITION\";\n    HistoryEntryType[\"ORDER_MODIFIED\"] = \"ORDER_MODIFIED\";\n    HistoryEntryType[\"ORDER_NOTE\"] = \"ORDER_NOTE\";\n    HistoryEntryType[\"ORDER_PAYMENT_TRANSITION\"] = \"ORDER_PAYMENT_TRANSITION\";\n    HistoryEntryType[\"ORDER_REFUND_TRANSITION\"] = \"ORDER_REFUND_TRANSITION\";\n    HistoryEntryType[\"ORDER_STATE_TRANSITION\"] = \"ORDER_STATE_TRANSITION\";\n})(HistoryEntryType || (exports.HistoryEntryType = HistoryEntryType = {}));\n/**\n * @description\n * The state of a Job in the JobQueue\n *\n * @docsCategory common\n */\nvar JobState;\n(function (JobState) {\n    JobState[\"CANCELLED\"] = \"CANCELLED\";\n    JobState[\"COMPLETED\"] = \"COMPLETED\";\n    JobState[\"FAILED\"] = \"FAILED\";\n    JobState[\"PENDING\"] = \"PENDING\";\n    JobState[\"RETRYING\"] = \"RETRYING\";\n    JobState[\"RUNNING\"] = \"RUNNING\";\n})(JobState || (exports.JobState = JobState = {}));\n/**\n * @description\n * Languages in the form of a ISO 639-1 language code with optional\n * region or script modifier (e.g. de_AT). The selection available is based\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\n * and includes the major spoken languages of the world and any widely-used variants.\n *\n * @docsCategory common\n */\nvar LanguageCode;\n(function (LanguageCode) {\n    /** Afrikaans */\n    LanguageCode[\"af\"] = \"af\";\n    /** Akan */\n    LanguageCode[\"ak\"] = \"ak\";\n    /** Amharic */\n    LanguageCode[\"am\"] = \"am\";\n    /** Arabic */\n    LanguageCode[\"ar\"] = \"ar\";\n    /** Assamese */\n    LanguageCode[\"as\"] = \"as\";\n    /** Azerbaijani */\n    LanguageCode[\"az\"] = \"az\";\n    /** Belarusian */\n    LanguageCode[\"be\"] = \"be\";\n    /** Bulgarian */\n    LanguageCode[\"bg\"] = \"bg\";\n    /** Bambara */\n    LanguageCode[\"bm\"] = \"bm\";\n    /** Bangla */\n    LanguageCode[\"bn\"] = \"bn\";\n    /** Tibetan */\n    LanguageCode[\"bo\"] = \"bo\";\n    /** Breton */\n    LanguageCode[\"br\"] = \"br\";\n    /** Bosnian */\n    LanguageCode[\"bs\"] = \"bs\";\n    /** Catalan */\n    LanguageCode[\"ca\"] = \"ca\";\n    /** Chechen */\n    LanguageCode[\"ce\"] = \"ce\";\n    /** Corsican */\n    LanguageCode[\"co\"] = \"co\";\n    /** Czech */\n    LanguageCode[\"cs\"] = \"cs\";\n    /** Church Slavic */\n    LanguageCode[\"cu\"] = \"cu\";\n    /** Welsh */\n    LanguageCode[\"cy\"] = \"cy\";\n    /** Danish */\n    LanguageCode[\"da\"] = \"da\";\n    /** German */\n    LanguageCode[\"de\"] = \"de\";\n    /** Austrian German */\n    LanguageCode[\"de_AT\"] = \"de_AT\";\n    /** Swiss High German */\n    LanguageCode[\"de_CH\"] = \"de_CH\";\n    /** Dzongkha */\n    LanguageCode[\"dz\"] = \"dz\";\n    /** Ewe */\n    LanguageCode[\"ee\"] = \"ee\";\n    /** Greek */\n    LanguageCode[\"el\"] = \"el\";\n    /** English */\n    LanguageCode[\"en\"] = \"en\";\n    /** Australian English */\n    LanguageCode[\"en_AU\"] = \"en_AU\";\n    /** Canadian English */\n    LanguageCode[\"en_CA\"] = \"en_CA\";\n    /** British English */\n    LanguageCode[\"en_GB\"] = \"en_GB\";\n    /** American English */\n    LanguageCode[\"en_US\"] = \"en_US\";\n    /** Esperanto */\n    LanguageCode[\"eo\"] = \"eo\";\n    /** Spanish */\n    LanguageCode[\"es\"] = \"es\";\n    /** European Spanish */\n    LanguageCode[\"es_ES\"] = \"es_ES\";\n    /** Mexican Spanish */\n    LanguageCode[\"es_MX\"] = \"es_MX\";\n    /** Estonian */\n    LanguageCode[\"et\"] = \"et\";\n    /** Basque */\n    LanguageCode[\"eu\"] = \"eu\";\n    /** Persian */\n    LanguageCode[\"fa\"] = \"fa\";\n    /** Dari */\n    LanguageCode[\"fa_AF\"] = \"fa_AF\";\n    /** Fulah */\n    LanguageCode[\"ff\"] = \"ff\";\n    /** Finnish */\n    LanguageCode[\"fi\"] = \"fi\";\n    /** Faroese */\n    LanguageCode[\"fo\"] = \"fo\";\n    /** French */\n    LanguageCode[\"fr\"] = \"fr\";\n    /** Canadian French */\n    LanguageCode[\"fr_CA\"] = \"fr_CA\";\n    /** Swiss French */\n    LanguageCode[\"fr_CH\"] = \"fr_CH\";\n    /** Western Frisian */\n    LanguageCode[\"fy\"] = \"fy\";\n    /** Irish */\n    LanguageCode[\"ga\"] = \"ga\";\n    /** Scottish Gaelic */\n    LanguageCode[\"gd\"] = \"gd\";\n    /** Galician */\n    LanguageCode[\"gl\"] = \"gl\";\n    /** Gujarati */\n    LanguageCode[\"gu\"] = \"gu\";\n    /** Manx */\n    LanguageCode[\"gv\"] = \"gv\";\n    /** Hausa */\n    LanguageCode[\"ha\"] = \"ha\";\n    /** Hebrew */\n    LanguageCode[\"he\"] = \"he\";\n    /** Hindi */\n    LanguageCode[\"hi\"] = \"hi\";\n    /** Croatian */\n    LanguageCode[\"hr\"] = \"hr\";\n    /** Haitian Creole */\n    LanguageCode[\"ht\"] = \"ht\";\n    /** Hungarian */\n    LanguageCode[\"hu\"] = \"hu\";\n    /** Armenian */\n    LanguageCode[\"hy\"] = \"hy\";\n    /** Interlingua */\n    LanguageCode[\"ia\"] = \"ia\";\n    /** Indonesian */\n    LanguageCode[\"id\"] = \"id\";\n    /** Igbo */\n    LanguageCode[\"ig\"] = \"ig\";\n    /** Sichuan Yi */\n    LanguageCode[\"ii\"] = \"ii\";\n    /** Icelandic */\n    LanguageCode[\"is\"] = \"is\";\n    /** Italian */\n    LanguageCode[\"it\"] = \"it\";\n    /** Japanese */\n    LanguageCode[\"ja\"] = \"ja\";\n    /** Javanese */\n    LanguageCode[\"jv\"] = \"jv\";\n    /** Georgian */\n    LanguageCode[\"ka\"] = \"ka\";\n    /** Kikuyu */\n    LanguageCode[\"ki\"] = \"ki\";\n    /** Kazakh */\n    LanguageCode[\"kk\"] = \"kk\";\n    /** Kalaallisut */\n    LanguageCode[\"kl\"] = \"kl\";\n    /** Khmer */\n    LanguageCode[\"km\"] = \"km\";\n    /** Kannada */\n    LanguageCode[\"kn\"] = \"kn\";\n    /** Korean */\n    LanguageCode[\"ko\"] = \"ko\";\n    /** Kashmiri */\n    LanguageCode[\"ks\"] = \"ks\";\n    /** Kurdish */\n    LanguageCode[\"ku\"] = \"ku\";\n    /** Cornish */\n    LanguageCode[\"kw\"] = \"kw\";\n    /** Kyrgyz */\n    LanguageCode[\"ky\"] = \"ky\";\n    /** Latin */\n    LanguageCode[\"la\"] = \"la\";\n    /** Luxembourgish */\n    LanguageCode[\"lb\"] = \"lb\";\n    /** Ganda */\n    LanguageCode[\"lg\"] = \"lg\";\n    /** Lingala */\n    LanguageCode[\"ln\"] = \"ln\";\n    /** Lao */\n    LanguageCode[\"lo\"] = \"lo\";\n    /** Lithuanian */\n    LanguageCode[\"lt\"] = \"lt\";\n    /** Luba-Katanga */\n    LanguageCode[\"lu\"] = \"lu\";\n    /** Latvian */\n    LanguageCode[\"lv\"] = \"lv\";\n    /** Malagasy */\n    LanguageCode[\"mg\"] = \"mg\";\n    /** Maori */\n    LanguageCode[\"mi\"] = \"mi\";\n    /** Macedonian */\n    LanguageCode[\"mk\"] = \"mk\";\n    /** Malayalam */\n    LanguageCode[\"ml\"] = \"ml\";\n    /** Mongolian */\n    LanguageCode[\"mn\"] = \"mn\";\n    /** Marathi */\n    LanguageCode[\"mr\"] = \"mr\";\n    /** Malay */\n    LanguageCode[\"ms\"] = \"ms\";\n    /** Maltese */\n    LanguageCode[\"mt\"] = \"mt\";\n    /** Burmese */\n    LanguageCode[\"my\"] = \"my\";\n    /** Norwegian Bokmål */\n    LanguageCode[\"nb\"] = \"nb\";\n    /** North Ndebele */\n    LanguageCode[\"nd\"] = \"nd\";\n    /** Nepali */\n    LanguageCode[\"ne\"] = \"ne\";\n    /** Dutch */\n    LanguageCode[\"nl\"] = \"nl\";\n    /** Flemish */\n    LanguageCode[\"nl_BE\"] = \"nl_BE\";\n    /** Norwegian Nynorsk */\n    LanguageCode[\"nn\"] = \"nn\";\n    /** Nyanja */\n    LanguageCode[\"ny\"] = \"ny\";\n    /** Oromo */\n    LanguageCode[\"om\"] = \"om\";\n    /** Odia */\n    LanguageCode[\"or\"] = \"or\";\n    /** Ossetic */\n    LanguageCode[\"os\"] = \"os\";\n    /** Punjabi */\n    LanguageCode[\"pa\"] = \"pa\";\n    /** Polish */\n    LanguageCode[\"pl\"] = \"pl\";\n    /** Pashto */\n    LanguageCode[\"ps\"] = \"ps\";\n    /** Portuguese */\n    LanguageCode[\"pt\"] = \"pt\";\n    /** Brazilian Portuguese */\n    LanguageCode[\"pt_BR\"] = \"pt_BR\";\n    /** European Portuguese */\n    LanguageCode[\"pt_PT\"] = \"pt_PT\";\n    /** Quechua */\n    LanguageCode[\"qu\"] = \"qu\";\n    /** Romansh */\n    LanguageCode[\"rm\"] = \"rm\";\n    /** Rundi */\n    LanguageCode[\"rn\"] = \"rn\";\n    /** Romanian */\n    LanguageCode[\"ro\"] = \"ro\";\n    /** Moldavian */\n    LanguageCode[\"ro_MD\"] = \"ro_MD\";\n    /** Russian */\n    LanguageCode[\"ru\"] = \"ru\";\n    /** Kinyarwanda */\n    LanguageCode[\"rw\"] = \"rw\";\n    /** Sanskrit */\n    LanguageCode[\"sa\"] = \"sa\";\n    /** Sindhi */\n    LanguageCode[\"sd\"] = \"sd\";\n    /** Northern Sami */\n    LanguageCode[\"se\"] = \"se\";\n    /** Sango */\n    LanguageCode[\"sg\"] = \"sg\";\n    /** Sinhala */\n    LanguageCode[\"si\"] = \"si\";\n    /** Slovak */\n    LanguageCode[\"sk\"] = \"sk\";\n    /** Slovenian */\n    LanguageCode[\"sl\"] = \"sl\";\n    /** Samoan */\n    LanguageCode[\"sm\"] = \"sm\";\n    /** Shona */\n    LanguageCode[\"sn\"] = \"sn\";\n    /** Somali */\n    LanguageCode[\"so\"] = \"so\";\n    /** Albanian */\n    LanguageCode[\"sq\"] = \"sq\";\n    /** Serbian */\n    LanguageCode[\"sr\"] = \"sr\";\n    /** Southern Sotho */\n    LanguageCode[\"st\"] = \"st\";\n    /** Sundanese */\n    LanguageCode[\"su\"] = \"su\";\n    /** Swedish */\n    LanguageCode[\"sv\"] = \"sv\";\n    /** Swahili */\n    LanguageCode[\"sw\"] = \"sw\";\n    /** Congo Swahili */\n    LanguageCode[\"sw_CD\"] = \"sw_CD\";\n    /** Tamil */\n    LanguageCode[\"ta\"] = \"ta\";\n    /** Telugu */\n    LanguageCode[\"te\"] = \"te\";\n    /** Tajik */\n    LanguageCode[\"tg\"] = \"tg\";\n    /** Thai */\n    LanguageCode[\"th\"] = \"th\";\n    /** Tigrinya */\n    LanguageCode[\"ti\"] = \"ti\";\n    /** Turkmen */\n    LanguageCode[\"tk\"] = \"tk\";\n    /** Tongan */\n    LanguageCode[\"to\"] = \"to\";\n    /** Turkish */\n    LanguageCode[\"tr\"] = \"tr\";\n    /** Tatar */\n    LanguageCode[\"tt\"] = \"tt\";\n    /** Uyghur */\n    LanguageCode[\"ug\"] = \"ug\";\n    /** Ukrainian */\n    LanguageCode[\"uk\"] = \"uk\";\n    /** Urdu */\n    LanguageCode[\"ur\"] = \"ur\";\n    /** Uzbek */\n    LanguageCode[\"uz\"] = \"uz\";\n    /** Vietnamese */\n    LanguageCode[\"vi\"] = \"vi\";\n    /** Volapük */\n    LanguageCode[\"vo\"] = \"vo\";\n    /** Wolof */\n    LanguageCode[\"wo\"] = \"wo\";\n    /** Xhosa */\n    LanguageCode[\"xh\"] = \"xh\";\n    /** Yiddish */\n    LanguageCode[\"yi\"] = \"yi\";\n    /** Yoruba */\n    LanguageCode[\"yo\"] = \"yo\";\n    /** Chinese */\n    LanguageCode[\"zh\"] = \"zh\";\n    /** Simplified Chinese */\n    LanguageCode[\"zh_Hans\"] = \"zh_Hans\";\n    /** Traditional Chinese */\n    LanguageCode[\"zh_Hant\"] = \"zh_Hant\";\n    /** Zulu */\n    LanguageCode[\"zu\"] = \"zu\";\n})(LanguageCode || (exports.LanguageCode = LanguageCode = {}));\nvar LogicalOperator;\n(function (LogicalOperator) {\n    LogicalOperator[\"AND\"] = \"AND\";\n    LogicalOperator[\"OR\"] = \"OR\";\n})(LogicalOperator || (exports.LogicalOperator = LogicalOperator = {}));\nvar MetricInterval;\n(function (MetricInterval) {\n    MetricInterval[\"Daily\"] = \"Daily\";\n})(MetricInterval || (exports.MetricInterval = MetricInterval = {}));\nvar MetricType;\n(function (MetricType) {\n    MetricType[\"AverageOrderValue\"] = \"AverageOrderValue\";\n    MetricType[\"OrderCount\"] = \"OrderCount\";\n    MetricType[\"OrderTotal\"] = \"OrderTotal\";\n})(MetricType || (exports.MetricType = MetricType = {}));\nvar OrderType;\n(function (OrderType) {\n    OrderType[\"Aggregate\"] = \"Aggregate\";\n    OrderType[\"Regular\"] = \"Regular\";\n    OrderType[\"Seller\"] = \"Seller\";\n})(OrderType || (exports.OrderType = OrderType = {}));\n/**\n * @description\n * Permissions for administrators and customers. Used to control access to\n * GraphQL resolvers via the {@link Allow} decorator.\n *\n * ## Understanding Permission.Owner\n *\n * `Permission.Owner` is a special permission which is used in some Vendure resolvers to indicate that that resolver should only\n * be accessible to the \"owner\" of that resource.\n *\n * For example, the Shop API `activeCustomer` query resolver should only return the Customer object for the \"owner\" of that Customer, i.e.\n * based on the activeUserId of the current session. As a result, the resolver code looks like this:\n *\n * @example\n * ```TypeScript\n * \\@Query()\n * \\@Allow(Permission.Owner)\n * async activeCustomer(\\@Ctx() ctx: RequestContext): Promise<Customer | undefined> {\n *   const userId = ctx.activeUserId;\n *   if (userId) {\n *     return this.customerService.findOneByUserId(ctx, userId);\n *   }\n * }\n * ```\n *\n * Here we can see that the \"ownership\" must be enforced by custom logic inside the resolver. Since \"ownership\" cannot be defined generally\n * nor statically encoded at build-time, any resolvers using `Permission.Owner` **must** include logic to enforce that only the owner\n * of the resource has access. If not, then it is the equivalent of using `Permission.Public`.\n *\n *\n * @docsCategory common\n */\nvar Permission;\n(function (Permission) {\n    /** Authenticated means simply that the user is logged in */\n    Permission[\"Authenticated\"] = \"Authenticated\";\n    /** Grants permission to create Administrator */\n    Permission[\"CreateAdministrator\"] = \"CreateAdministrator\";\n    /** Grants permission to create Asset */\n    Permission[\"CreateAsset\"] = \"CreateAsset\";\n    /** Grants permission to create Products, Facets, Assets, Collections */\n    Permission[\"CreateCatalog\"] = \"CreateCatalog\";\n    /** Grants permission to create Channel */\n    Permission[\"CreateChannel\"] = \"CreateChannel\";\n    /** Grants permission to create Collection */\n    Permission[\"CreateCollection\"] = \"CreateCollection\";\n    /** Grants permission to create Country */\n    Permission[\"CreateCountry\"] = \"CreateCountry\";\n    /** Grants permission to create Customer */\n    Permission[\"CreateCustomer\"] = \"CreateCustomer\";\n    /** Grants permission to create CustomerGroup */\n    Permission[\"CreateCustomerGroup\"] = \"CreateCustomerGroup\";\n    /** Grants permission to create Facet */\n    Permission[\"CreateFacet\"] = \"CreateFacet\";\n    /** Grants permission to create Order */\n    Permission[\"CreateOrder\"] = \"CreateOrder\";\n    /** Grants permission to create PaymentMethod */\n    Permission[\"CreatePaymentMethod\"] = \"CreatePaymentMethod\";\n    /** Grants permission to create Product */\n    Permission[\"CreateProduct\"] = \"CreateProduct\";\n    /** Grants permission to create Promotion */\n    Permission[\"CreatePromotion\"] = \"CreatePromotion\";\n    /** Grants permission to create Seller */\n    Permission[\"CreateSeller\"] = \"CreateSeller\";\n    /** Grants permission to create PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n    Permission[\"CreateSettings\"] = \"CreateSettings\";\n    /** Grants permission to create ShippingMethod */\n    Permission[\"CreateShippingMethod\"] = \"CreateShippingMethod\";\n    /** Grants permission to create StockLocation */\n    Permission[\"CreateStockLocation\"] = \"CreateStockLocation\";\n    /** Grants permission to create System */\n    Permission[\"CreateSystem\"] = \"CreateSystem\";\n    /** Grants permission to create Tag */\n    Permission[\"CreateTag\"] = \"CreateTag\";\n    /** Grants permission to create TaxCategory */\n    Permission[\"CreateTaxCategory\"] = \"CreateTaxCategory\";\n    /** Grants permission to create TaxRate */\n    Permission[\"CreateTaxRate\"] = \"CreateTaxRate\";\n    /** Grants permission to create Zone */\n    Permission[\"CreateZone\"] = \"CreateZone\";\n    /** Grants permission to delete Administrator */\n    Permission[\"DeleteAdministrator\"] = \"DeleteAdministrator\";\n    /** Grants permission to delete Asset */\n    Permission[\"DeleteAsset\"] = \"DeleteAsset\";\n    /** Grants permission to delete Products, Facets, Assets, Collections */\n    Permission[\"DeleteCatalog\"] = \"DeleteCatalog\";\n    /** Grants permission to delete Channel */\n    Permission[\"DeleteChannel\"] = \"DeleteChannel\";\n    /** Grants permission to delete Collection */\n    Permission[\"DeleteCollection\"] = \"DeleteCollection\";\n    /** Grants permission to delete Country */\n    Permission[\"DeleteCountry\"] = \"DeleteCountry\";\n    /** Grants permission to delete Customer */\n    Permission[\"DeleteCustomer\"] = \"DeleteCustomer\";\n    /** Grants permission to delete CustomerGroup */\n    Permission[\"DeleteCustomerGroup\"] = \"DeleteCustomerGroup\";\n    /** Grants permission to delete Facet */\n    Permission[\"DeleteFacet\"] = \"DeleteFacet\";\n    /** Grants permission to delete Order */\n    Permission[\"DeleteOrder\"] = \"DeleteOrder\";\n    /** Grants permission to delete PaymentMethod */\n    Permission[\"DeletePaymentMethod\"] = \"DeletePaymentMethod\";\n    /** Grants permission to delete Product */\n    Permission[\"DeleteProduct\"] = \"DeleteProduct\";\n    /** Grants permission to delete Promotion */\n    Permission[\"DeletePromotion\"] = \"DeletePromotion\";\n    /** Grants permission to delete Seller */\n    Permission[\"DeleteSeller\"] = \"DeleteSeller\";\n    /** Grants permission to delete PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n    Permission[\"DeleteSettings\"] = \"DeleteSettings\";\n    /** Grants permission to delete ShippingMethod */\n    Permission[\"DeleteShippingMethod\"] = \"DeleteShippingMethod\";\n    /** Grants permission to delete StockLocation */\n    Permission[\"DeleteStockLocation\"] = \"DeleteStockLocation\";\n    /** Grants permission to delete System */\n    Permission[\"DeleteSystem\"] = \"DeleteSystem\";\n    /** Grants permission to delete Tag */\n    Permission[\"DeleteTag\"] = \"DeleteTag\";\n    /** Grants permission to delete TaxCategory */\n    Permission[\"DeleteTaxCategory\"] = \"DeleteTaxCategory\";\n    /** Grants permission to delete TaxRate */\n    Permission[\"DeleteTaxRate\"] = \"DeleteTaxRate\";\n    /** Grants permission to delete Zone */\n    Permission[\"DeleteZone\"] = \"DeleteZone\";\n    /** Owner means the user owns this entity, e.g. a Customer's own Order */\n    Permission[\"Owner\"] = \"Owner\";\n    /** Public means any unauthenticated user may perform the operation */\n    Permission[\"Public\"] = \"Public\";\n    /** Grants permission to read Administrator */\n    Permission[\"ReadAdministrator\"] = \"ReadAdministrator\";\n    /** Grants permission to read Asset */\n    Permission[\"ReadAsset\"] = \"ReadAsset\";\n    /** Grants permission to read Products, Facets, Assets, Collections */\n    Permission[\"ReadCatalog\"] = \"ReadCatalog\";\n    /** Grants permission to read Channel */\n    Permission[\"ReadChannel\"] = \"ReadChannel\";\n    /** Grants permission to read Collection */\n    Permission[\"ReadCollection\"] = \"ReadCollection\";\n    /** Grants permission to read Country */\n    Permission[\"ReadCountry\"] = \"ReadCountry\";\n    /** Grants permission to read Customer */\n    Permission[\"ReadCustomer\"] = \"ReadCustomer\";\n    /** Grants permission to read CustomerGroup */\n    Permission[\"ReadCustomerGroup\"] = \"ReadCustomerGroup\";\n    /** Grants permission to read Facet */\n    Permission[\"ReadFacet\"] = \"ReadFacet\";\n    /** Grants permission to read Order */\n    Permission[\"ReadOrder\"] = \"ReadOrder\";\n    /** Grants permission to read PaymentMethod */\n    Permission[\"ReadPaymentMethod\"] = \"ReadPaymentMethod\";\n    /** Grants permission to read Product */\n    Permission[\"ReadProduct\"] = \"ReadProduct\";\n    /** Grants permission to read Promotion */\n    Permission[\"ReadPromotion\"] = \"ReadPromotion\";\n    /** Grants permission to read Seller */\n    Permission[\"ReadSeller\"] = \"ReadSeller\";\n    /** Grants permission to read PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n    Permission[\"ReadSettings\"] = \"ReadSettings\";\n    /** Grants permission to read ShippingMethod */\n    Permission[\"ReadShippingMethod\"] = \"ReadShippingMethod\";\n    /** Grants permission to read StockLocation */\n    Permission[\"ReadStockLocation\"] = \"ReadStockLocation\";\n    /** Grants permission to read System */\n    Permission[\"ReadSystem\"] = \"ReadSystem\";\n    /** Grants permission to read Tag */\n    Permission[\"ReadTag\"] = \"ReadTag\";\n    /** Grants permission to read TaxCategory */\n    Permission[\"ReadTaxCategory\"] = \"ReadTaxCategory\";\n    /** Grants permission to read TaxRate */\n    Permission[\"ReadTaxRate\"] = \"ReadTaxRate\";\n    /** Grants permission to read Zone */\n    Permission[\"ReadZone\"] = \"ReadZone\";\n    /** SuperAdmin has unrestricted access to all operations */\n    Permission[\"SuperAdmin\"] = \"SuperAdmin\";\n    /** Grants permission to update Administrator */\n    Permission[\"UpdateAdministrator\"] = \"UpdateAdministrator\";\n    /** Grants permission to update Asset */\n    Permission[\"UpdateAsset\"] = \"UpdateAsset\";\n    /** Grants permission to update Products, Facets, Assets, Collections */\n    Permission[\"UpdateCatalog\"] = \"UpdateCatalog\";\n    /** Grants permission to update Channel */\n    Permission[\"UpdateChannel\"] = \"UpdateChannel\";\n    /** Grants permission to update Collection */\n    Permission[\"UpdateCollection\"] = \"UpdateCollection\";\n    /** Grants permission to update Country */\n    Permission[\"UpdateCountry\"] = \"UpdateCountry\";\n    /** Grants permission to update Customer */\n    Permission[\"UpdateCustomer\"] = \"UpdateCustomer\";\n    /** Grants permission to update CustomerGroup */\n    Permission[\"UpdateCustomerGroup\"] = \"UpdateCustomerGroup\";\n    /** Grants permission to update Facet */\n    Permission[\"UpdateFacet\"] = \"UpdateFacet\";\n    /** Grants permission to update GlobalSettings */\n    Permission[\"UpdateGlobalSettings\"] = \"UpdateGlobalSettings\";\n    /** Grants permission to update Order */\n    Permission[\"UpdateOrder\"] = \"UpdateOrder\";\n    /** Grants permission to update PaymentMethod */\n    Permission[\"UpdatePaymentMethod\"] = \"UpdatePaymentMethod\";\n    /** Grants permission to update Product */\n    Permission[\"UpdateProduct\"] = \"UpdateProduct\";\n    /** Grants permission to update Promotion */\n    Permission[\"UpdatePromotion\"] = \"UpdatePromotion\";\n    /** Grants permission to update Seller */\n    Permission[\"UpdateSeller\"] = \"UpdateSeller\";\n    /** Grants permission to update PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n    Permission[\"UpdateSettings\"] = \"UpdateSettings\";\n    /** Grants permission to update ShippingMethod */\n    Permission[\"UpdateShippingMethod\"] = \"UpdateShippingMethod\";\n    /** Grants permission to update StockLocation */\n    Permission[\"UpdateStockLocation\"] = \"UpdateStockLocation\";\n    /** Grants permission to update System */\n    Permission[\"UpdateSystem\"] = \"UpdateSystem\";\n    /** Grants permission to update Tag */\n    Permission[\"UpdateTag\"] = \"UpdateTag\";\n    /** Grants permission to update TaxCategory */\n    Permission[\"UpdateTaxCategory\"] = \"UpdateTaxCategory\";\n    /** Grants permission to update TaxRate */\n    Permission[\"UpdateTaxRate\"] = \"UpdateTaxRate\";\n    /** Grants permission to update Zone */\n    Permission[\"UpdateZone\"] = \"UpdateZone\";\n})(Permission || (exports.Permission = Permission = {}));\nvar SortOrder;\n(function (SortOrder) {\n    SortOrder[\"ASC\"] = \"ASC\";\n    SortOrder[\"DESC\"] = \"DESC\";\n})(SortOrder || (exports.SortOrder = SortOrder = {}));\nvar StockMovementType;\n(function (StockMovementType) {\n    StockMovementType[\"ADJUSTMENT\"] = \"ADJUSTMENT\";\n    StockMovementType[\"ALLOCATION\"] = \"ALLOCATION\";\n    StockMovementType[\"CANCELLATION\"] = \"CANCELLATION\";\n    StockMovementType[\"RELEASE\"] = \"RELEASE\";\n    StockMovementType[\"RETURN\"] = \"RETURN\";\n    StockMovementType[\"SALE\"] = \"SALE\";\n})(StockMovementType || (exports.StockMovementType = StockMovementType = {}));\n","import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, forwardRef, EventEmitter, ElementRef, Input, ViewChild, ViewChildren, Output, inject, TemplateRef, ContentChild, Pipe, SkipSelf, Optional, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { findTranslation, DeletionResult, BaseDetailComponent, Permission, createUpdatedTranslatable, SelectionManager, getDefaultUiLanguage, BaseEntityResolver, PageComponent, CanDeactivateDetailGuard, DataService, createResolveData, FacetValueSelectorComponent, ASSET_FRAGMENT, TAG_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, BaseListComponent, SortOrder, LogicalOperator, DataTable2Component, COLLECTION_FRAGMENT, unicodePatternValidator, getConfigArgValue, encodeConfigArgValue, createBulkDeleteAction, ModalService, NotificationService, createBulkAssignToChannelAction, createBulkRemoveFromChannelAction, DuplicateEntityDialogComponent, TypedBaseListComponent, GetCollectionListDocument, FACET_WITH_VALUE_LIST_FRAGMENT, GetFacetDetailDocument, getChannelCodeFromUserStatus, currentChannelIsNotDefault, GetFacetListDocument, GetStockLocationListDocument, ProductVariantListQueryDocument, PRODUCT_DETAIL_FRAGMENT, isMultiChannel, FacetValueFormInputComponent, ProductListQueryDocument, JobState, GetProductVariantsQuickJumpDocument, GlobalFlag, ProductVariantUpdateMutationDocument, detailComponentWithResolver, GetProductDetailDocument, GetProductVariantDetailDocument, CollectionDetailQueryDocument, AssetDetailQueryDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport { SortOrder as SortOrder$1 } from '@vendure/common/lib/generated-types';\nimport { shareReplay, mergeMap, map, switchMap, tap, take, startWith, debounceTime, takeUntil, finalize, distinctUntilChanged, filter, catchError, delay, skip, switchMapTo } from 'rxjs/operators';\nimport * as i2 from '@angular/forms';\nimport { UntypedFormGroup, UntypedFormArray, Validators, FormControl, NG_VALUE_ACCESSOR, FormGroup, UntypedFormControl } from '@angular/forms';\nimport { forkJoin, of, throwError, combineLatest, Subject, EMPTY, BehaviorSubject, from, lastValueFrom, merge, concat } from 'rxjs';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { notNullOrUndefined, generateAllCombinations } from '@vendure/common/lib/shared-utils';\nimport * as i3 from '@clr/angular';\nimport * as i3$1 from '@angular/common';\nimport * as i5 from '@ngx-translate/core';\nimport { unique } from '@vendure/common/lib/unique';\nimport * as i5$1 from '@ng-select/ng-select';\nimport { gql } from 'apollo-angular';\nimport * as i5$2 from 'ngx-pagination';\nimport * as i4 from '@angular/cdk/drag-drop';\nimport { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { pick } from '@vendure/common/lib/pick';\n\n/**\n * @description\n * Like String.prototype.replace(), but replaces the last instance\n * rather than the first.\n */\nfunction replaceLast(target, search, replace) {\n    if (!target) {\n        return '';\n    }\n    const lastIndex = target.lastIndexOf(search);\n    if (lastIndex === -1) {\n        return target;\n    }\n    const head = target.substr(0, lastIndex);\n    const tail = target.substr(lastIndex).replace(search, replace);\n    return head + tail;\n}\n\n/**\n * Handles the logic for making the API calls to perform CRUD operations on a Product and its related\n * entities. This logic was extracted out of the component because it became too large and hard to follow.\n */\nclass ProductDetailService {\n    constructor(dataService) {\n        this.dataService = dataService;\n    }\n    getTaxCategories() {\n        return this.dataService.settings\n            .getTaxCategories()\n            .mapSingle(data => data.taxCategories.items)\n            .pipe(shareReplay(1));\n    }\n    createProductWithVariants(input, createVariantsConfig, languageCode) {\n        const createProduct$ = this.dataService.product.createProduct(input);\n        const nonEmptyOptionGroups = createVariantsConfig.groups.filter(g => 0 < g.values.length);\n        const createOptionGroups$ = this.createProductOptionGroups(nonEmptyOptionGroups, languageCode);\n        return forkJoin(createProduct$, createOptionGroups$).pipe(mergeMap(([{ createProduct }, optionGroups]) => {\n            const addOptionsToProduct$ = optionGroups.length\n                ? forkJoin(optionGroups.map(optionGroup => this.dataService.product.addOptionGroupToProduct({\n                    productId: createProduct.id,\n                    optionGroupId: optionGroup.id,\n                })))\n                : of([]);\n            return addOptionsToProduct$.pipe(map(() => ({ createProduct, optionGroups })));\n        }), mergeMap(({ createProduct, optionGroups }) => {\n            const variants = createVariantsConfig.variants.map(v => {\n                const optionIds = optionGroups.length\n                    ? v.optionValues.map((optionName, index) => {\n                        const option = optionGroups[index].options.find(o => o.name === optionName);\n                        if (!option) {\n                            throw new Error(`Could not find a matching ProductOption \"${optionName}\" when creating variant`);\n                        }\n                        return option.id;\n                    })\n                    : [];\n                return {\n                    ...v,\n                    optionIds,\n                };\n            });\n            const options = optionGroups.map(og => og.options).reduce((flat, o) => [...flat, ...o], []);\n            return this.createProductVariants(createProduct, variants, options, languageCode, createVariantsConfig.stockLocationId);\n        }));\n    }\n    createProductOptionGroups(groups, languageCode) {\n        return groups.length\n            ? forkJoin(groups.map(c => this.dataService.product\n                .createProductOptionGroups({\n                code: normalizeString(c.name, '-'),\n                translations: [{ languageCode, name: c.name }],\n                options: c.values.map(v => ({\n                    code: normalizeString(v, '-'),\n                    translations: [{ languageCode, name: v }],\n                })),\n            })\n                .pipe(map(data => data.createProductOptionGroup))))\n            : of([]);\n    }\n    createProductVariants(product, variantData, options, languageCode, stockLocationId) {\n        const variants = variantData.map(v => {\n            const name = options.length\n                ? `${product.name} ${v.optionIds\n                    .map(id => options.find(o => o.id === id))\n                    .filter(notNullOrUndefined)\n                    .map(o => o.name)\n                    .join(' ')}`\n                : product.name;\n            return {\n                productId: product.id,\n                price: v.price,\n                sku: v.sku,\n                translations: [\n                    {\n                        languageCode,\n                        name,\n                    },\n                ],\n                stockLevels: [\n                    {\n                        stockLocationId,\n                        stockOnHand: v.stock,\n                    },\n                ],\n                optionIds: v.optionIds,\n            };\n        });\n        return this.dataService.product.createProductVariants(variants).pipe(map(({ createProductVariants }) => ({\n            createProductVariants,\n            productId: product.id,\n        })));\n    }\n    updateProduct(updateOptions) {\n        const { product, languageCode, autoUpdate, productInput, variantsInput } = updateOptions;\n        const updateOperations = [];\n        const updateVariantsInput = variantsInput || [];\n        const variants$ = autoUpdate\n            ? this.dataService.product\n                .getProductVariantsForProduct({}, product.id)\n                .mapSingle(({ productVariants }) => productVariants.items)\n            : of([]);\n        return variants$.pipe(mergeMap(variants => {\n            if (productInput) {\n                updateOperations.push(this.dataService.product.updateProduct(productInput));\n                const productOldName = findTranslation(product, languageCode)?.name ?? '';\n                const productNewName = findTranslation(productInput, languageCode)?.name;\n                if (productNewName && productOldName !== productNewName && autoUpdate) {\n                    for (const variant of variants) {\n                        const currentVariantName = findTranslation(variant, languageCode)?.name || '';\n                        let variantInput;\n                        const existingVariantInput = updateVariantsInput.find(i => i.id === variant.id);\n                        if (existingVariantInput) {\n                            variantInput = existingVariantInput;\n                        }\n                        else {\n                            variantInput = {\n                                id: variant.id,\n                                translations: [{ languageCode, name: currentVariantName }],\n                            };\n                            updateVariantsInput.push(variantInput);\n                        }\n                        const variantTranslation = findTranslation(variantInput, languageCode);\n                        if (variantTranslation) {\n                            if (variantTranslation.name) {\n                                variantTranslation.name = replaceLast(variantTranslation.name, productOldName, productNewName);\n                            }\n                            else {\n                                // The variant translation was falsy, which occurs\n                                // when defining the product name for a new translation\n                                // language that had not yet been defined.\n                                variantTranslation.name = [\n                                    productNewName,\n                                    ...variant.options.map(o => o.name),\n                                ].join(' ');\n                            }\n                        }\n                    }\n                }\n            }\n            if (updateVariantsInput.length) {\n                updateOperations.push(this.dataService.product.updateProductVariants(updateVariantsInput));\n            }\n            return forkJoin(updateOperations);\n        }));\n    }\n    updateProductOptions(inputs, autoUpdateProductNames, product, languageCode) {\n        const variants$ = autoUpdateProductNames\n            ? this.dataService.product\n                .getProductVariantsForProduct({}, product.id)\n                .mapSingle(({ productVariants }) => productVariants.items)\n            : of([]);\n        return variants$.pipe(mergeMap(variants => {\n            let updateProductVariantNames$ = of([]);\n            if (autoUpdateProductNames) {\n                const replacementMap = new Map();\n                for (const input of inputs) {\n                    const newOptionName = findTranslation(input, languageCode)?.name;\n                    let oldOptionName;\n                    for (const variant of variants) {\n                        if (oldOptionName) {\n                            continue;\n                        }\n                        if (variant.options.map(o => o.id).includes(input.id)) {\n                            if (!oldOptionName) {\n                                oldOptionName = findTranslation(variant.options.find(o => o.id === input.id), languageCode)?.name;\n                            }\n                        }\n                    }\n                    if (oldOptionName && newOptionName) {\n                        replacementMap.set(oldOptionName, newOptionName);\n                    }\n                }\n                const variantsToUpdate = [];\n                if (replacementMap.size) {\n                    const oldOptionNames = Array.from(replacementMap.keys());\n                    for (const variant of variants) {\n                        const variantName = findTranslation(variant, languageCode)?.name;\n                        if (!variantName) {\n                            continue;\n                        }\n                        if (!oldOptionNames.some(oldOptionName => variantName.includes(oldOptionName))) {\n                            continue;\n                        }\n                        const updatedVariantName = oldOptionNames.reduce((name, oldOptionName) => replaceLast(name, oldOptionName, replacementMap.get(oldOptionName)), variantName);\n                        variantsToUpdate.push({\n                            id: variant.id,\n                            translations: [\n                                {\n                                    languageCode,\n                                    name: updatedVariantName,\n                                },\n                            ],\n                        });\n                    }\n                }\n                if (variantsToUpdate.length) {\n                    updateProductVariantNames$ =\n                        this.dataService.product.updateProductVariants(variantsToUpdate);\n                }\n                else {\n                    updateProductVariantNames$ = of([]);\n                }\n            }\n            return forkJoin(inputs.map(input => this.dataService.product.updateProductOption(input))).pipe(mergeMap(() => updateProductVariantNames$));\n        }));\n    }\n    deleteProductVariant(id, productId) {\n        return this.dataService.product.deleteProductVariant(id).pipe(switchMap(result => {\n            if (result.deleteProductVariant.result === DeletionResult.DELETED) {\n                return this.dataService.product.getProduct(productId).single$;\n            }\n            else {\n                return throwError(result.deleteProductVariant.message);\n            }\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductDetailService, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductDetailService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductDetailService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\nclass ProductOptionsEditorComponent extends BaseDetailComponent {\n    constructor(route, router, serverConfigService, dataService, permissionsService, productDetailService, formBuilder, changeDetector, notificationService) {\n        super(route, router, serverConfigService, dataService, permissionsService);\n        this.route = route;\n        this.router = router;\n        this.serverConfigService = serverConfigService;\n        this.dataService = dataService;\n        this.permissionsService = permissionsService;\n        this.productDetailService = productDetailService;\n        this.formBuilder = formBuilder;\n        this.changeDetector = changeDetector;\n        this.notificationService = notificationService;\n        this.autoUpdateVariantNames = true;\n        this.paginationSettings = {};\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\n        this.optionGroupCustomFields = this.getCustomFieldConfig('ProductOptionGroup');\n        this.optionCustomFields = this.getCustomFieldConfig('ProductOption');\n    }\n    ngOnInit() {\n        this.optionGroups$ = this.route.snapshot.data.entity.pipe(map((product) => product.optionGroups), tap((optionGroups) => {\n            for (const group of optionGroups) {\n                this.paginationSettings[group.id] = {\n                    currentPage: 1,\n                    itemsPerPage: 10,\n                };\n            }\n        }));\n        this.detailForm = new UntypedFormGroup({\n            optionGroups: new UntypedFormArray([]),\n        });\n        super.init();\n    }\n    getOptionGroups() {\n        const optionGroups = this.detailForm.get('optionGroups');\n        return optionGroups.controls;\n    }\n    getOptions(optionGroup) {\n        const options = optionGroup.get('options');\n        return options.controls;\n    }\n    save() {\n        if (this.detailForm.invalid || this.detailForm.pristine) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const $product = this.dataService.product.getProduct(this.id).mapSingle(data => data.product);\n        combineLatest(this.entity$, this.languageCode$, $product)\n            .pipe(take(1), mergeMap(([{ optionGroups }, languageCode, product]) => {\n            const updateOperations = [];\n            const updatedProductOptionInputs = [];\n            for (const optionGroupForm of this.getOptionGroups()) {\n                if (optionGroupForm.dirty) {\n                    const optionGroupEntity = optionGroups.find(og => og.id === optionGroupForm.value.id);\n                    if (optionGroupEntity) {\n                        const input = this.getUpdatedOptionGroup(optionGroupEntity, optionGroupForm, languageCode);\n                        updateOperations.push(this.dataService.product.updateProductOptionGroup(input));\n                    }\n                }\n                for (const optionForm of this.getOptions(optionGroupForm)) {\n                    if (optionForm.dirty) {\n                        const optionGroup = optionGroups\n                            .find(og => og.id === optionGroupForm.value.id)\n                            ?.options.find(o => o.id === optionForm.value.id);\n                        if (optionGroup) {\n                            const input = this.getUpdatedOption(optionGroup, optionForm, languageCode);\n                            updatedProductOptionInputs.push(input);\n                        }\n                    }\n                }\n            }\n            if (updatedProductOptionInputs.length) {\n                updateOperations.push(this.productDetailService.updateProductOptions(updatedProductOptionInputs, this.autoUpdateVariantNames, product, languageCode));\n            }\n            return forkJoin(updateOperations);\n        }))\n            .subscribe(() => {\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'ProductOptionGroup',\n            });\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'ProductOptionGroup',\n            });\n        });\n    }\n    getUpdatedOptionGroup(optionGroup, optionGroupFormGroup, languageCode) {\n        const input = createUpdatedTranslatable({\n            translatable: optionGroup,\n            updatedFields: optionGroupFormGroup.value,\n            customFieldConfig: this.optionGroupCustomFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: optionGroup.name || '',\n            },\n        });\n        return input;\n    }\n    getUpdatedOption(option, optionFormGroup, languageCode) {\n        const input = createUpdatedTranslatable({\n            translatable: option,\n            updatedFields: optionFormGroup.value,\n            customFieldConfig: this.optionCustomFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: option.name || '',\n            },\n        });\n        return input;\n    }\n    setFormValues(entity, languageCode) {\n        const groupsForm = this.detailForm.get('optionGroups');\n        for (const optionGroup of entity.optionGroups) {\n            const groupTranslation = findTranslation(optionGroup, languageCode);\n            const groupForm = this.setOptionGroupForm(optionGroup, groupsForm, groupTranslation);\n            this.setCustomFieldsForm(this.optionGroupCustomFields, groupForm, optionGroup, groupTranslation);\n            let optionsForm = groupForm.get('options');\n            if (!optionsForm) {\n                optionsForm = this.formBuilder.array([]);\n                groupForm.addControl('options', optionsForm);\n            }\n            for (const option of optionGroup.options) {\n                const optionTranslation = findTranslation(option, languageCode);\n                const optionForm = this.setOptionForm(option, optionsForm, optionTranslation);\n                this.setCustomFieldsForm(this.optionCustomFields, optionForm, option, optionTranslation);\n            }\n        }\n    }\n    setCustomFieldsForm(customFields, formGroup, entity, currentTranslation) {\n        if (customFields.length) {\n            let customValueFieldsGroup = formGroup.get(['customFields']);\n            if (!customValueFieldsGroup) {\n                customValueFieldsGroup = this.formBuilder.group(customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}));\n                formGroup.addControl('customFields', customValueFieldsGroup);\n            }\n            this.setCustomFieldFormValues(customFields, customValueFieldsGroup, entity, currentTranslation);\n        }\n    }\n    setOptionGroupForm(entity, groupsForm, currentTranslation) {\n        const group = {\n            id: entity.id,\n            createdAt: entity.createdAt,\n            updatedAt: entity.updatedAt,\n            code: entity.code,\n            name: currentTranslation?.name ?? '',\n        };\n        let groupForm = groupsForm.controls.find(control => control.value.id === entity.id);\n        if (groupForm) {\n            groupForm.get('id')?.setValue(group.id);\n            groupForm.get('code')?.setValue(group.code);\n            groupForm.get('name')?.setValue(group.name);\n            groupForm.get('createdAt')?.setValue(group.createdAt);\n            groupForm.get('updatedAt')?.setValue(group.updatedAt);\n        }\n        else {\n            groupForm = this.formBuilder.group(group);\n            groupsForm.push(groupForm);\n        }\n        return groupForm;\n    }\n    setOptionForm(entity, optionsForm, currentTranslation) {\n        const group = {\n            id: entity.id,\n            createdAt: entity.createdAt,\n            updatedAt: entity.updatedAt,\n            code: entity.code,\n            name: currentTranslation?.name ?? '',\n        };\n        let optionForm = optionsForm.controls.find(control => control.value.id === entity.id);\n        if (optionForm) {\n            optionForm.get('id')?.setValue(group.id);\n            optionForm.get('code')?.setValue(group.code);\n            optionForm.get('name')?.setValue(group.name);\n            optionForm.get('createdAt')?.setValue(group.createdAt);\n            optionForm.get('updatedAt')?.setValue(group.updatedAt);\n        }\n        else {\n            optionForm = this.formBuilder.group(group);\n            optionsForm.push(optionForm);\n        }\n        return optionForm;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductOptionsEditorComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1$1.Router }, { token: i1.ServerConfigService }, { token: i1.DataService }, { token: i1.PermissionsService }, { token: ProductDetailService }, { token: i2.UntypedFormBuilder }, { token: i0.ChangeDetectorRef }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ProductOptionsEditorComponent, selector: \"vdr-product-options-editor\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-header>\\r\\n    <vdr-page-title></vdr-page-title>\\r\\n    <vdr-page-header-description>{{ 'catalog.page-description-options-editor' | translate }}</vdr-page-header-description>\\r\\n</vdr-page-header>\\r\\n<vdr-page-body>\\r\\n    <vdr-page-block>\\r\\n        <vdr-action-bar>\\r\\n            <vdr-ab-left>\\r\\n                <vdr-language-selector\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </vdr-ab-left>\\r\\n\\r\\n            <vdr-ab-right>\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div class=\\\"mr-2\\\">\\r\\n                        <clr-checkbox-wrapper>\\r\\n                            <input\\r\\n                                clrCheckbox\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                id=\\\"auto-update\\\"\\r\\n                                [(ngModel)]=\\\"autoUpdateVariantNames\\\"\\r\\n                            />\\r\\n                            <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                        </clr-checkbox-wrapper>\\r\\n                    </div>\\r\\n                    <button\\r\\n                        *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                        class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"detailForm.pristine || detailForm.invalid\\\"\\r\\n                    >\\r\\n                        {{ 'common.update' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-ab-right>\\r\\n        </vdr-action-bar>\\r\\n    </vdr-page-block>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"optionGroups$ | async as optionGroups\\\">\\r\\n            <div formGroupName=\\\"optionGroups\\\">\\r\\n                <vdr-card\\r\\n                    *ngFor=\\\"let optionGroup of getOptionGroups(); index as i\\\"\\r\\n                    [formArrayName]=\\\"i\\\"\\r\\n                    [title]=\\\"optionGroup.value.code\\\"\\r\\n                >\\r\\n                    <vdr-page-entity-info [entity]=\\\"optionGroup.value\\\"></vdr-page-entity-info>\\r\\n                    <div class=\\\"form-grid\\\">\\r\\n                        <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'name-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'code-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"code\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                    </div>\\r\\n                    <ng-container formGroupName=\\\"customFields\\\" *ngIf=\\\"optionGroupCustomFields.length\\\">\\r\\n                        <vdr-tabbed-custom-fields\\r\\n                            entityName=\\\"ProductOptionGroup\\\"\\r\\n                            [customFields]=\\\"optionGroupCustomFields\\\"\\r\\n                            [customFieldsFormGroup]=\\\"optionGroup.get('customFields')\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-tabbed-custom-fields>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <vdr-data-table-2\\r\\n                        id=\\\"edit-options-list\\\"\\r\\n                        *ngIf=\\\"getOptions(optionGroup) as options\\\"\\r\\n                        [items]=\\\"options\\\"\\r\\n                        [itemsPerPage]=\\\"paginationSettings[optionGroup.value.id]?.itemsPerPage\\\"\\r\\n                        [currentPage]=\\\"paginationSettings[optionGroup.value.id]?.currentPage\\\"\\r\\n                        (pageChange)=\\\"paginationSettings[optionGroup.value.id].currentPage = $event\\\"\\r\\n                        [totalItems]=\\\"options.length\\\"\\r\\n                    >\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.id }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.createdAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.updatedAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [formControl]=\\\"optionControl.get('name')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input type=\\\"text\\\" [formControl]=\\\"optionControl.get('code')\\\" />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column\\r\\n                            [heading]=\\\"'common.custom-fields' | translate\\\" id=\\\"custom-fields\\\"\\r\\n                            [hiddenByDefault]=\\\"optionCustomFields.length === 0\\\"\\r\\n                        >\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <vdr-tabbed-custom-fields\\r\\n                                    entityName=\\\"ProductOption\\\"\\r\\n                                    [customFields]=\\\"optionCustomFields\\\"\\r\\n                                    [compact]=\\\"true\\\"\\r\\n                                    [customFieldsFormGroup]=\\\"optionControl.get('customFields')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                ></vdr-tabbed-custom-fields>\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                    </vdr-data-table-2>\\r\\n                </vdr-card>\\r\\n            </div>\\r\\n        </form>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-body>\\r\\n\", styles: [\".option-group-header{display:flex;align-items:baseline}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageHeaderComponent, selector: \"vdr-page-header\" }, { kind: \"component\", type: i1.PageTitleComponent, selector: \"vdr-page-title\", inputs: [\"title\"] }, { kind: \"component\", type: i1.PageHeaderDescriptionComponent, selector: \"vdr-page-header-description\" }, { kind: \"component\", type: i1.PageBodyComponent, selector: \"vdr-page-body\" }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductOptionsEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-options-editor', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-header>\\r\\n    <vdr-page-title></vdr-page-title>\\r\\n    <vdr-page-header-description>{{ 'catalog.page-description-options-editor' | translate }}</vdr-page-header-description>\\r\\n</vdr-page-header>\\r\\n<vdr-page-body>\\r\\n    <vdr-page-block>\\r\\n        <vdr-action-bar>\\r\\n            <vdr-ab-left>\\r\\n                <vdr-language-selector\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </vdr-ab-left>\\r\\n\\r\\n            <vdr-ab-right>\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div class=\\\"mr-2\\\">\\r\\n                        <clr-checkbox-wrapper>\\r\\n                            <input\\r\\n                                clrCheckbox\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                id=\\\"auto-update\\\"\\r\\n                                [(ngModel)]=\\\"autoUpdateVariantNames\\\"\\r\\n                            />\\r\\n                            <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                        </clr-checkbox-wrapper>\\r\\n                    </div>\\r\\n                    <button\\r\\n                        *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                        class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"detailForm.pristine || detailForm.invalid\\\"\\r\\n                    >\\r\\n                        {{ 'common.update' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-ab-right>\\r\\n        </vdr-action-bar>\\r\\n    </vdr-page-block>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"optionGroups$ | async as optionGroups\\\">\\r\\n            <div formGroupName=\\\"optionGroups\\\">\\r\\n                <vdr-card\\r\\n                    *ngFor=\\\"let optionGroup of getOptionGroups(); index as i\\\"\\r\\n                    [formArrayName]=\\\"i\\\"\\r\\n                    [title]=\\\"optionGroup.value.code\\\"\\r\\n                >\\r\\n                    <vdr-page-entity-info [entity]=\\\"optionGroup.value\\\"></vdr-page-entity-info>\\r\\n                    <div class=\\\"form-grid\\\">\\r\\n                        <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'name-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'code-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"code\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                    </div>\\r\\n                    <ng-container formGroupName=\\\"customFields\\\" *ngIf=\\\"optionGroupCustomFields.length\\\">\\r\\n                        <vdr-tabbed-custom-fields\\r\\n                            entityName=\\\"ProductOptionGroup\\\"\\r\\n                            [customFields]=\\\"optionGroupCustomFields\\\"\\r\\n                            [customFieldsFormGroup]=\\\"optionGroup.get('customFields')\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-tabbed-custom-fields>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <vdr-data-table-2\\r\\n                        id=\\\"edit-options-list\\\"\\r\\n                        *ngIf=\\\"getOptions(optionGroup) as options\\\"\\r\\n                        [items]=\\\"options\\\"\\r\\n                        [itemsPerPage]=\\\"paginationSettings[optionGroup.value.id]?.itemsPerPage\\\"\\r\\n                        [currentPage]=\\\"paginationSettings[optionGroup.value.id]?.currentPage\\\"\\r\\n                        (pageChange)=\\\"paginationSettings[optionGroup.value.id].currentPage = $event\\\"\\r\\n                        [totalItems]=\\\"options.length\\\"\\r\\n                    >\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.id }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.createdAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.updatedAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [formControl]=\\\"optionControl.get('name')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input type=\\\"text\\\" [formControl]=\\\"optionControl.get('code')\\\" />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column\\r\\n                            [heading]=\\\"'common.custom-fields' | translate\\\" id=\\\"custom-fields\\\"\\r\\n                            [hiddenByDefault]=\\\"optionCustomFields.length === 0\\\"\\r\\n                        >\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <vdr-tabbed-custom-fields\\r\\n                                    entityName=\\\"ProductOption\\\"\\r\\n                                    [customFields]=\\\"optionCustomFields\\\"\\r\\n                                    [compact]=\\\"true\\\"\\r\\n                                    [customFieldsFormGroup]=\\\"optionControl.get('customFields')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                ></vdr-tabbed-custom-fields>\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                    </vdr-data-table-2>\\r\\n                </vdr-card>\\r\\n            </div>\\r\\n        </form>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-body>\\r\\n\", styles: [\".option-group-header{display:flex;align-items:baseline}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1$1.ActivatedRoute }, { type: i1$1.Router }, { type: i1.ServerConfigService }, { type: i1.DataService }, { type: i1.PermissionsService }, { type: ProductDetailService }, { type: i2.UntypedFormBuilder }, { type: i0.ChangeDetectorRef }, { type: i1.NotificationService }] });\n\nclass CreateProductOptionGroupDialogComponent {\n    constructor(formBuilder) {\n        this.formBuilder = formBuilder;\n        this.form = this.formBuilder.group({\n            name: ['', Validators.required],\n            code: ['', Validators.required],\n        });\n    }\n    updateCode() {\n        const nameControl = this.form.get('name');\n        const codeControl = this.form.get('code');\n        if (nameControl && codeControl && codeControl.pristine) {\n            codeControl.setValue(normalizeString(`${nameControl.value}`, '-'));\n        }\n    }\n    confirm() {\n        const { name, code } = this.form.value;\n        if (!name || !code) {\n            return;\n        }\n        this.resolveWith({\n            code,\n            options: [],\n            translations: [{ languageCode: this.languageCode, name }],\n        });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CreateProductOptionGroupDialogComponent, deps: [{ token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CreateProductOptionGroupDialogComponent, selector: \"vdr-create-product-option-group-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-option-group' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CreateProductOptionGroupDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-create-product-option-group-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-option-group' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i2.FormBuilder }] });\n\nclass CreateProductVariantDialogComponent {\n    constructor(formBuilder) {\n        this.formBuilder = formBuilder;\n        this.form = this.formBuilder.group({\n            name: ['', Validators.required],\n            sku: [''],\n            price: [''],\n            options: this.formBuilder.record({}),\n        });\n    }\n    ngOnInit() {\n        this.currencyCode = this.product.variants[0]?.currencyCode;\n        for (const optionGroup of this.product.optionGroups) {\n            this.form.get('options').addControl(optionGroup.code, new FormControl('', Validators.required));\n        }\n        const optionsRecord = this.form.get('options');\n        optionsRecord.valueChanges.subscribe(value => {\n            const nameControl = this.form.get('name');\n            const allNull = Object.values(value).every(v => v == null);\n            if (!allNull && value && nameControl && !nameControl.dirty) {\n                const name = Object.entries(value)\n                    .map(([groupCode, optionId]) => this.product.optionGroups\n                    .find(og => og.code === groupCode)\n                    ?.options.find(o => o.id === optionId)?.name)\n                    .join(' ');\n                nameControl.setValue(`${this.product.name} ${name}`);\n            }\n            const allSelected = Object.values(value).every(v => v != null);\n            if (allSelected) {\n                this.existingVariant = this.product.variants.find(v => Object.entries(value).every(([groupCode, optionId]) => v.options.find(o => o.groupId === this.getGroupIdFromCode(groupCode))?.id ===\n                    optionId));\n            }\n        });\n    }\n    confirm() {\n        const { name, sku, options, price } = this.form.value;\n        if (!name || !options || price == null) {\n            return;\n        }\n        const optionIds = Object.values(options).filter(notNullOrUndefined);\n        this.resolveWith({\n            productId: this.product.id,\n            sku: sku || '',\n            price: Number(price),\n            optionIds,\n            translations: [\n                {\n                    languageCode: this.product.languageCode,\n                    name,\n                },\n            ],\n        });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    getGroupCodeFromId(id) {\n        return this.product.optionGroups.find(og => og.id === id)?.code ?? '';\n    }\n    getGroupIdFromCode(code) {\n        return this.product.optionGroups.find(og => og.code === code)?.id ?? '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CreateProductVariantDialogComponent, deps: [{ token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CreateProductVariantDialogComponent, selector: \"vdr-create-product-variant-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-variant' | translate }}\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <div formGroupName=\\\"options\\\" class=\\\"form-grid\\\">\\r\\n        <vdr-form-field [label]=\\\"optionGroup.name\\\" *ngFor=\\\"let optionGroup of product.optionGroups\\\">\\r\\n            <ng-select [items]=\\\"optionGroup.options\\\" [formControlName]=\\\"optionGroup.code\\\" bindLabel=\\\"name\\\"\\r\\n                bindValue=\\\"id\\\" appendTo=\\\"body\\\">\\r\\n            </ng-select>\\r\\n        </vdr-form-field>\\r\\n        <clr-alert *ngIf=\\\"product.optionGroups.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\"\\r\\n            class=\\\"form-grid-span\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.cannot-create-variants-without-options' | translate }}\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"existingVariant\\\" class=\\\"mt-2\\\">\\r\\n        <clr-alert clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.product-variant-exists' | translate }}: {{ existingVariant.name }} ({{\\r\\n                    existingVariant.sku\\r\\n                    }})\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-field [label]=\\\"'common.name' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"sku\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.price' | translate\\\">\\r\\n            <vdr-currency-input name=\\\"price\\\" [currencyCode]=\\\"currencyCode\\\" formControlName=\\\"price\\\" />\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\"\\r\\n        [disabled]=\\\"form.invalid || existingVariant || product.optionGroups.length === 0\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertLightweight\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CreateProductVariantDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-create-product-variant-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-variant' | translate }}\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <div formGroupName=\\\"options\\\" class=\\\"form-grid\\\">\\r\\n        <vdr-form-field [label]=\\\"optionGroup.name\\\" *ngFor=\\\"let optionGroup of product.optionGroups\\\">\\r\\n            <ng-select [items]=\\\"optionGroup.options\\\" [formControlName]=\\\"optionGroup.code\\\" bindLabel=\\\"name\\\"\\r\\n                bindValue=\\\"id\\\" appendTo=\\\"body\\\">\\r\\n            </ng-select>\\r\\n        </vdr-form-field>\\r\\n        <clr-alert *ngIf=\\\"product.optionGroups.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\"\\r\\n            class=\\\"form-grid-span\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.cannot-create-variants-without-options' | translate }}\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"existingVariant\\\" class=\\\"mt-2\\\">\\r\\n        <clr-alert clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.product-variant-exists' | translate }}: {{ existingVariant.name }} ({{\\r\\n                    existingVariant.sku\\r\\n                    }})\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-field [label]=\\\"'common.name' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"sku\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.price' | translate\\\">\\r\\n            <vdr-currency-input name=\\\"price\\\" [currencyCode]=\\\"currencyCode\\\" formControlName=\\\"price\\\" />\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\"\\r\\n        [disabled]=\\\"form.invalid || existingVariant || product.optionGroups.length === 0\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\" }]\n        }], ctorParameters: () => [{ type: i2.FormBuilder }] });\n\nconst OPTION_VALUE_INPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => OptionValueInputComponent),\n    multi: true,\n};\nclass OptionValueInputComponent {\n    get optionValues() {\n        return this.formValue ?? this.options ?? [];\n    }\n    constructor(changeDetector) {\n        this.changeDetector = changeDetector;\n        this.groupName = '';\n        this.add = new EventEmitter();\n        this.remove = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.disabled = false;\n        this.input = '';\n        this.isFocussed = false;\n        this.lastSelected = false;\n        this.editingIndex = -1;\n    }\n    registerOnChange(fn) {\n        this.onChangeFn = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchFn = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.changeDetector.markForCheck();\n    }\n    writeValue(obj) {\n        this.formValue = obj || [];\n    }\n    focus() {\n        this.textArea.nativeElement.focus();\n    }\n    editName(index, event) {\n        const optionValue = this.optionValues[index];\n        if (!optionValue.locked && !optionValue.id) {\n            event.cancelBubble = true;\n            this.editingIndex = index;\n            const input = this.nameInputs.get(index)?.nativeElement;\n            setTimeout(() => input?.focus());\n        }\n    }\n    updateOption(index, event) {\n        const optionValue = this.optionValues[index];\n        const newName = event.target.value;\n        if (optionValue) {\n            if (newName) {\n                optionValue.name = newName;\n                this.edit.emit({ index, option: optionValue });\n            }\n            this.editingIndex = -1;\n        }\n    }\n    removeOption(option) {\n        if (!option.locked) {\n            if (this.formValue) {\n                this.formValue = this.formValue?.filter(o => o.name !== option.name);\n                this.onChangeFn(this.formValue);\n            }\n            else {\n                this.remove.emit(option);\n            }\n        }\n    }\n    handleKey(event) {\n        switch (event.key) {\n            case ',':\n            case 'Enter':\n                this.addOptionValue();\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (this.lastSelected) {\n                    this.removeLastOption();\n                    this.lastSelected = false;\n                }\n                else if (this.input === '') {\n                    this.lastSelected = true;\n                }\n                break;\n            default:\n                this.lastSelected = false;\n        }\n    }\n    handleBlur() {\n        this.isFocussed = false;\n        this.addOptionValue();\n    }\n    addOptionValue() {\n        const options = this.parseInputIntoOptions(this.input).filter(option => {\n            // do not add an option with the same name\n            // as an existing option\n            const existing = this.options ?? this.formValue;\n            return !existing?.find(o => o?.name === option.name);\n        });\n        if (!this.formValue && this.options) {\n            for (const option of options) {\n                this.add.emit(option);\n            }\n        }\n        else {\n            this.formValue = unique([...this.formValue, ...options]);\n            this.onChangeFn(this.formValue);\n        }\n        this.input = '';\n    }\n    parseInputIntoOptions(input) {\n        return input\n            .split(/[,\\n]/)\n            .map(s => s.trim())\n            .filter(s => s !== '')\n            .map(s => ({ name: s, locked: false }));\n    }\n    removeLastOption() {\n        if (this.optionValues.length) {\n            const option = this.optionValues[this.optionValues.length - 1];\n            this.removeOption(option);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OptionValueInputComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: { groupName: \"groupName\", options: \"options\", disabled: \"disabled\" }, outputs: { add: \"add\", remove: \"remove\", edit: \"edit\" }, providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"textArea\", first: true, predicate: [\"textArea\"], descendants: true, static: true }, { propertyName: \"nameInputs\", predicate: [\"editNameInput\"], descendants: true, read: ElementRef }], ngImport: i0, template: \"<div class=\\\"input-wrapper\\\" [class.focus]=\\\"isFocussed\\\" (click)=\\\"textArea.focus()\\\">\\r\\n    <div class=\\\"chips\\\" *ngIf=\\\"0 < optionValues.length\\\">\\r\\n        <vdr-chip\\r\\n            *ngFor=\\\"let option of optionValues; last as isLast; index as i\\\"\\r\\n            [icon]=\\\"option.locked ? 'lock' : 'times'\\\"\\r\\n            [class.selected]=\\\"isLast && lastSelected\\\"\\r\\n            [class.locked]=\\\"option.locked\\\"\\r\\n            [colorFrom]=\\\"groupName\\\"\\r\\n            (iconClick)=\\\"removeOption(option)\\\"\\r\\n        >\\r\\n            <span [hidden]=\\\"editingIndex !== i\\\">\\r\\n                <input\\r\\n                    #editNameInput\\r\\n                    type=\\\"text\\\"\\r\\n                    [ngModel]=\\\"option.name\\\"\\r\\n                    (blur)=\\\"updateOption(i, $event)\\\"\\r\\n                    (click)=\\\"$event.cancelBubble = true\\\"\\r\\n                />\\r\\n            </span>\\r\\n            <span\\r\\n                class=\\\"option-name\\\"\\r\\n                [class.editable]=\\\"!option.locked && !option.id\\\"\\r\\n                (click)=\\\"editName(i, $event)\\\" [hidden]=\\\"editingIndex === i\\\">{{ option.name }}</span>\\r\\n        </vdr-chip>\\r\\n    </div>\\r\\n    <textarea\\r\\n        #textArea\\r\\n        (keyup)=\\\"handleKey($event)\\\"\\r\\n        (focus)=\\\"isFocussed = true\\\"\\r\\n        (blur)=\\\"handleBlur()\\\"\\r\\n        [(ngModel)]=\\\"input\\\"\\r\\n        [disabled]=\\\"disabled\\\"\\r\\n    ></textarea>\\r\\n</div>\\r\\n\", styles: [\".input-wrapper{background-color:var(--color-form-input-bg);border-radius:3px!important;border:1px solid var(--color-grey-300)!important;cursor:text}.input-wrapper.focus{border-color:var(--color-primary-500)!important;box-shadow:0 0 1px 1px var(--color-primary-100)}.input-wrapper .chips{padding:5px}.input-wrapper textarea{border:none;width:100%;height:24px;margin-top:3px;padding:0 6px}.input-wrapper textarea:focus{outline:none;box-shadow:none}.input-wrapper textarea:disabled{background-color:var(--color-component-bg-100)}vdr-chip ::ng-deep .wrapper{margin:0 3px}vdr-chip.locked{opacity:.8}vdr-chip.selected ::ng-deep .wrapper{border-color:var(--color-warning-500)!important;box-shadow:0 0 1px 1px var(--color-warning-400);opacity:.6}vdr-chip .option-name.editable:hover{outline:1px solid var(--color-component-bg-300);outline-offset:1px;border-radius:1px}vdr-chip input{padding:0!important;margin-top:-2px;margin-bottom:-2px}\\n\"], dependencies: [{ kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OptionValueInputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-option-value-input', changeDetection: ChangeDetectionStrategy.Default, providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR], template: \"<div class=\\\"input-wrapper\\\" [class.focus]=\\\"isFocussed\\\" (click)=\\\"textArea.focus()\\\">\\r\\n    <div class=\\\"chips\\\" *ngIf=\\\"0 < optionValues.length\\\">\\r\\n        <vdr-chip\\r\\n            *ngFor=\\\"let option of optionValues; last as isLast; index as i\\\"\\r\\n            [icon]=\\\"option.locked ? 'lock' : 'times'\\\"\\r\\n            [class.selected]=\\\"isLast && lastSelected\\\"\\r\\n            [class.locked]=\\\"option.locked\\\"\\r\\n            [colorFrom]=\\\"groupName\\\"\\r\\n            (iconClick)=\\\"removeOption(option)\\\"\\r\\n        >\\r\\n            <span [hidden]=\\\"editingIndex !== i\\\">\\r\\n                <input\\r\\n                    #editNameInput\\r\\n                    type=\\\"text\\\"\\r\\n                    [ngModel]=\\\"option.name\\\"\\r\\n                    (blur)=\\\"updateOption(i, $event)\\\"\\r\\n                    (click)=\\\"$event.cancelBubble = true\\\"\\r\\n                />\\r\\n            </span>\\r\\n            <span\\r\\n                class=\\\"option-name\\\"\\r\\n                [class.editable]=\\\"!option.locked && !option.id\\\"\\r\\n                (click)=\\\"editName(i, $event)\\\" [hidden]=\\\"editingIndex === i\\\">{{ option.name }}</span>\\r\\n        </vdr-chip>\\r\\n    </div>\\r\\n    <textarea\\r\\n        #textArea\\r\\n        (keyup)=\\\"handleKey($event)\\\"\\r\\n        (focus)=\\\"isFocussed = true\\\"\\r\\n        (blur)=\\\"handleBlur()\\\"\\r\\n        [(ngModel)]=\\\"input\\\"\\r\\n        [disabled]=\\\"disabled\\\"\\r\\n    ></textarea>\\r\\n</div>\\r\\n\", styles: [\".input-wrapper{background-color:var(--color-form-input-bg);border-radius:3px!important;border:1px solid var(--color-grey-300)!important;cursor:text}.input-wrapper.focus{border-color:var(--color-primary-500)!important;box-shadow:0 0 1px 1px var(--color-primary-100)}.input-wrapper .chips{padding:5px}.input-wrapper textarea{border:none;width:100%;height:24px;margin-top:3px;padding:0 6px}.input-wrapper textarea:focus{outline:none;box-shadow:none}.input-wrapper textarea:disabled{background-color:var(--color-component-bg-100)}vdr-chip ::ng-deep .wrapper{margin:0 3px}vdr-chip.locked{opacity:.8}vdr-chip.selected ::ng-deep .wrapper{border-color:var(--color-warning-500)!important;box-shadow:0 0 1px 1px var(--color-warning-400);opacity:.6}vdr-chip .option-name.editable:hover{outline:1px solid var(--color-component-bg-300);outline-offset:1px;border-radius:1px}vdr-chip input{padding:0!important;margin-top:-2px;margin-bottom:-2px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { groupName: [{\n                type: Input\n            }], textArea: [{\n                type: ViewChild,\n                args: ['textArea', { static: true }]\n            }], nameInputs: [{\n                type: ViewChildren,\n                args: ['editNameInput', { read: ElementRef }]\n            }], options: [{\n                type: Input\n            }], add: [{\n                type: Output\n            }], remove: [{\n                type: Output\n            }], edit: [{\n                type: Output\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass GeneratedVariant {\n    constructor(config) {\n        for (const key of Object.keys(config)) {\n            this[key] = config[key];\n        }\n    }\n}\nclass ProductVariantsEditorComponent {\n    constructor(route, dataService, productDetailService, notificationService, modalService, changeDetector) {\n        this.route = route;\n        this.dataService = dataService;\n        this.productDetailService = productDetailService;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.changeDetector = changeDetector;\n        this.formValueChanged = false;\n        this.optionsChanged = false;\n        this.itemsPerPage = 100;\n        this.currentPage = 1;\n        this.searchTermControl = new FormControl('');\n        this.selectionManager = new SelectionManager({\n            multiSelect: true,\n            itemsAreEqual: (a, b) => a.id === b.id,\n            additiveMode: true,\n        });\n        this.optionsToAddToVariant = {};\n        this.refresh$ = new Subject();\n    }\n    ngOnInit() {\n        this.languageCode =\n            this.route.snapshot.paramMap.get('lang') || getDefaultUiLanguage();\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\n            this.currencyCode = data.activeChannel.defaultCurrencyCode;\n        });\n        const product$ = this.refresh$.pipe(switchMap(() => this.dataService.product\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            .getProductVariantsOptions(this.route.parent?.snapshot.paramMap.get('id'))\n            .mapSingle(data => data.product)), startWith(this.route.snapshot.data.product));\n        this.variants$ = product$.pipe(switchMap(product => this.searchTermControl.valueChanges.pipe(startWith(''), map(term => term\n            ? product.variants.filter(v => v.name.toLowerCase().includes(term.toLowerCase()))\n            : product.variants))));\n        this.optionGroups$ = product$.pipe(map(product => product.optionGroups));\n        this.totalItems$ = this.variants$.pipe(map(variants => variants.length));\n        product$.subscribe(p => {\n            this.product = p;\n            const allUsedOptionIds = p.variants.map(v => v.options.map(option => option.id)).flat();\n            const allUsedOptionGroupIds = p.variants.map(v => v.options.map(option => option.groupId)).flat();\n            this.optionGroups = p.optionGroups.map(og => ({\n                id: og.id,\n                isNew: false,\n                name: og.name,\n                locked: allUsedOptionGroupIds.includes(og.id),\n                values: og.options.map(o => ({\n                    id: o.id,\n                    name: o.name,\n                    locked: allUsedOptionIds.includes(o.id),\n                })),\n            }));\n        });\n    }\n    setItemsPerPage(itemsPerPage) {\n        this.itemsPerPage = itemsPerPage;\n        this.currentPage = 1;\n    }\n    setPageNumber(page) {\n        this.currentPage = page;\n    }\n    onFormChanged(variantInfo) {\n        this.formValueChanged = true;\n        variantInfo.enabled = true;\n    }\n    canDeactivate() {\n        return !this.formValueChanged;\n    }\n    addOptionGroup() {\n        this.modalService\n            .fromComponent(CreateProductOptionGroupDialogComponent, {\n            locals: {\n                languageCode: this.languageCode,\n            },\n        })\n            .pipe(switchMap(result => {\n            if (result) {\n                return this.dataService.product.createProductOptionGroups(result).pipe(switchMap(({ createProductOptionGroup }) => this.dataService.product.addOptionGroupToProduct({\n                    optionGroupId: createProductOptionGroup.id,\n                    productId: this.product.id,\n                })));\n            }\n            else {\n                return EMPTY;\n            }\n        }))\n            .subscribe(result => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'ProductOptionGroup',\n            });\n            this.refresh$.next();\n            this.changeDetector.markForCheck();\n        });\n    }\n    removeOptionGroup(optionGroup) {\n        const id = optionGroup.id;\n        const usedByVariantsCount = this.product.variants.filter(v => v.options.map(o => o.groupId).includes(id)).length;\n        this.modalService\n            .dialog({\n            title: marker('catalog.confirm-delete-product-option-group'),\n            body: usedByVariantsCount ? marker('catalog.confirm-delete-product-option-group-body') : '',\n            translationVars: { name: optionGroup.name, count: usedByVariantsCount },\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(val => {\n            if (val) {\n                return this.dataService.product.removeOptionGroupFromProduct({\n                    optionGroupId: id,\n                    productId: this.product.id,\n                    force: true,\n                });\n            }\n            else {\n                return EMPTY;\n            }\n        }))\n            .subscribe(({ removeOptionGroupFromProduct }) => {\n            if (removeOptionGroupFromProduct.__typename === 'Product') {\n                this.notificationService.success(marker('common.notify-delete-success'), {\n                    entity: 'ProductOptionGroup',\n                });\n                this.refresh$.next();\n            }\n            else if (removeOptionGroupFromProduct.__typename === 'ProductOptionInUseError') {\n                this.notificationService.error(removeOptionGroupFromProduct.message ?? '');\n            }\n        });\n    }\n    addOption(index, optionName) {\n        const group = this.optionGroups[index];\n        if (group && group.id) {\n            this.dataService.product\n                .addOptionToGroup({\n                productOptionGroupId: group.id,\n                code: normalizeString(optionName, '-'),\n                translations: [{ name: optionName, languageCode: this.languageCode }],\n            })\n                .subscribe(({ createProductOption }) => {\n                this.notificationService.success(marker('common.notify-create-success'), {\n                    entity: 'ProductOption',\n                });\n                this.refresh$.next();\n            });\n        }\n    }\n    removeOption(index, { id, name }) {\n        const optionGroup = this.optionGroups[index];\n        if (optionGroup) {\n            this.modalService\n                .dialog({\n                title: marker('catalog.confirm-delete-product-option'),\n                translationVars: { name },\n                buttons: [\n                    { type: 'secondary', label: marker('common.cancel') },\n                    { type: 'danger', label: marker('common.delete'), returnValue: true },\n                ],\n            })\n                .pipe(switchMap(val => {\n                if (val) {\n                    return this.dataService.product.deleteProductOption(id);\n                }\n                else {\n                    return EMPTY;\n                }\n            }))\n                .subscribe(({ deleteProductOption }) => {\n                if (deleteProductOption.result === DeletionResult.DELETED) {\n                    this.notificationService.success(marker('common.notify-delete-success'), {\n                        entity: 'ProductOption',\n                    });\n                    optionGroup.values = optionGroup.values.filter(v => v.id !== id);\n                    this.refresh$.next();\n                }\n                else {\n                    this.notificationService.error(deleteProductOption.message ?? '');\n                }\n            });\n        }\n    }\n    setOptionToAddToVariant(variantId, optionGroupId, optionId) {\n        if (!this.optionsToAddToVariant[variantId]) {\n            this.optionsToAddToVariant[variantId] = {};\n        }\n        if (optionId) {\n            this.optionsToAddToVariant[variantId][optionGroupId] = optionId;\n        }\n        else {\n            delete this.optionsToAddToVariant[variantId][optionGroupId];\n        }\n    }\n    addOptionToVariant(variant) {\n        const optionIds = [\n            ...variant.options.map(o => o.id),\n            ...Object.values(this.optionsToAddToVariant[variant.id]),\n        ];\n        this.dataService.product\n            .updateProductVariants([\n            {\n                id: variant.id,\n                optionIds: unique(optionIds),\n            },\n        ])\n            .subscribe(({ updateProductVariants }) => {\n            this.refresh$.next();\n        });\n    }\n    deleteVariant(variant) {\n        this.modalService\n            .dialog({\n            title: marker('catalog.confirm-delete-product-variant'),\n            translationVars: { name: variant.name },\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(response => response\n            ? this.productDetailService.deleteProductVariant(variant.id, this.product.id)\n            : EMPTY))\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-delete-success'), {\n                entity: 'ProductVariant',\n            });\n            this.refresh$.next();\n        }, err => {\n            this.notificationService.error(marker('common.notify-delete-error'), {\n                entity: 'ProductVariant',\n            });\n        });\n    }\n    createNewVariant() {\n        this.modalService\n            .fromComponent(CreateProductVariantDialogComponent, {\n            locals: {\n                product: this.product,\n            },\n        })\n            .pipe(switchMap(result => {\n            if (result) {\n                return this.dataService.product.createProductVariants([result]);\n            }\n            else {\n                return EMPTY;\n            }\n        }))\n            .subscribe(result => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'ProductVariant',\n            });\n            this.refresh$.next();\n        });\n    }\n    getOption(variant, groupId) {\n        return variant.options.find(o => o.groupId === groupId);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantsEditorComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1.DataService }, { token: ProductDetailService }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ProductVariantsEditorComponent, selector: \"vdr-product-variants-editor\", ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-card>\\r\\n        <div *ngFor=\\\"let group of optionGroups; index as i\\\" class=\\\"option-groups\\\">\\r\\n            <vdr-form-field [label]=\\\"'catalog.option' | translate\\\">\\r\\n                <input clrInput [(ngModel)]=\\\"group.name\\\" name=\\\"name\\\" [readonly]=\\\"!group.isNew\\\" />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'catalog.option-values' | translate\\\" class=\\\"flex-spacer\\\">\\r\\n                <vdr-option-value-input\\r\\n                    #optionValueInputComponent\\r\\n                    [options]=\\\"group.values\\\"\\r\\n                    [groupName]=\\\"group.name\\\"\\r\\n                    [disabled]=\\\"group.name === ''\\\"\\r\\n                    (add)=\\\"addOption(i, $event.name)\\\"\\r\\n                    (remove)=\\\"removeOption(i, $event)\\\"\\r\\n                ></vdr-option-value-input>\\r\\n            </vdr-form-field>\\r\\n            <div>\\r\\n                <button class=\\\"button-small mt-4\\\" (click)=\\\"removeOptionGroup(group)\\\">\\r\\n                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"button mt-1\\\" (click)=\\\"addOptionGroup()\\\">\\r\\n            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n            {{ 'catalog.create-product-option-group' | translate }}\\r\\n        </button>\\r\\n    </vdr-card>\\r\\n    <vdr-card [paddingX]=\\\"false\\\">\\r\\n        <div class=\\\"mx-3\\\">\\r\\n            <button class=\\\"button\\\" (click)=\\\"createNewVariant()\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-product-variant' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"manage-product-variant-list\\\"\\r\\n            [items]=\\\"variants$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.name }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.sku }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column *ngFor=\\\"let optionGroup of optionGroups$ | async\\\" [heading]=\\\"optionGroup.name\\\" [id]=\\\"optionGroup.code\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngIf=\\\"getOption(variant, optionGroup.id) as option; else selectOption\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        >{{ option.name }}</vdr-chip\\r\\n                    >\\r\\n                    <ng-template #selectOption>\\r\\n                        <div class=\\\"flex center\\\">\\r\\n                            <ng-select\\r\\n                                [items]=\\\"optionGroup.options\\\"\\r\\n                                bindLabel=\\\"name\\\"\\r\\n                                bindValue=\\\"id\\\"\\r\\n                                appendTo=\\\"body\\\"\\r\\n                                (change)=\\\"setOptionToAddToVariant(variant.id, optionGroup.id, $event?.id)\\\"\\r\\n                            ></ng-select>\\r\\n                            <button\\r\\n                                class=\\\"button-small ml-1\\\"\\r\\n                                [class.primary]=\\\"!!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                                (click)=\\\"addOptionToVariant(variant)\\\"\\r\\n                                [disabled]=\\\"!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                            >\\r\\n                                <clr-icon shape=\\\"floppy\\\"></clr-icon>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.delete' | translate\\\" id=\\\"delete\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <button class=\\\"button-small\\\" (click)=\\\"deleteVariant(variant)\\\">\\r\\n                        <clr-icon shape=\\\"trash is-danger\\\"></clr-icon>\\r\\n                    </button>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </vdr-card>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".option-groups{display:flex;width:100%;gap:var(--space-unit)}.values{flex:1;margin:0 6px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: [\"groupName\", \"options\", \"disabled\"], outputs: [\"add\", \"remove\", \"edit\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantsEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-variants-editor', changeDetection: ChangeDetectionStrategy.Default, template: \"<vdr-page-block>\\r\\n    <vdr-card>\\r\\n        <div *ngFor=\\\"let group of optionGroups; index as i\\\" class=\\\"option-groups\\\">\\r\\n            <vdr-form-field [label]=\\\"'catalog.option' | translate\\\">\\r\\n                <input clrInput [(ngModel)]=\\\"group.name\\\" name=\\\"name\\\" [readonly]=\\\"!group.isNew\\\" />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'catalog.option-values' | translate\\\" class=\\\"flex-spacer\\\">\\r\\n                <vdr-option-value-input\\r\\n                    #optionValueInputComponent\\r\\n                    [options]=\\\"group.values\\\"\\r\\n                    [groupName]=\\\"group.name\\\"\\r\\n                    [disabled]=\\\"group.name === ''\\\"\\r\\n                    (add)=\\\"addOption(i, $event.name)\\\"\\r\\n                    (remove)=\\\"removeOption(i, $event)\\\"\\r\\n                ></vdr-option-value-input>\\r\\n            </vdr-form-field>\\r\\n            <div>\\r\\n                <button class=\\\"button-small mt-4\\\" (click)=\\\"removeOptionGroup(group)\\\">\\r\\n                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"button mt-1\\\" (click)=\\\"addOptionGroup()\\\">\\r\\n            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n            {{ 'catalog.create-product-option-group' | translate }}\\r\\n        </button>\\r\\n    </vdr-card>\\r\\n    <vdr-card [paddingX]=\\\"false\\\">\\r\\n        <div class=\\\"mx-3\\\">\\r\\n            <button class=\\\"button\\\" (click)=\\\"createNewVariant()\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-product-variant' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"manage-product-variant-list\\\"\\r\\n            [items]=\\\"variants$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.name }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.sku }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column *ngFor=\\\"let optionGroup of optionGroups$ | async\\\" [heading]=\\\"optionGroup.name\\\" [id]=\\\"optionGroup.code\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngIf=\\\"getOption(variant, optionGroup.id) as option; else selectOption\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        >{{ option.name }}</vdr-chip\\r\\n                    >\\r\\n                    <ng-template #selectOption>\\r\\n                        <div class=\\\"flex center\\\">\\r\\n                            <ng-select\\r\\n                                [items]=\\\"optionGroup.options\\\"\\r\\n                                bindLabel=\\\"name\\\"\\r\\n                                bindValue=\\\"id\\\"\\r\\n                                appendTo=\\\"body\\\"\\r\\n                                (change)=\\\"setOptionToAddToVariant(variant.id, optionGroup.id, $event?.id)\\\"\\r\\n                            ></ng-select>\\r\\n                            <button\\r\\n                                class=\\\"button-small ml-1\\\"\\r\\n                                [class.primary]=\\\"!!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                                (click)=\\\"addOptionToVariant(variant)\\\"\\r\\n                                [disabled]=\\\"!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                            >\\r\\n                                <clr-icon shape=\\\"floppy\\\"></clr-icon>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.delete' | translate\\\" id=\\\"delete\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <button class=\\\"button-small\\\" (click)=\\\"deleteVariant(variant)\\\">\\r\\n                        <clr-icon shape=\\\"trash is-danger\\\"></clr-icon>\\r\\n                    </button>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </vdr-card>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".option-groups{display:flex;width:100%;gap:var(--space-unit)}.values{flex:1;margin:0 6px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1$1.ActivatedRoute }, { type: i1.DataService }, { type: ProductDetailService }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: i0.ChangeDetectorRef }] });\n\nclass ProductVariantsResolver extends BaseEntityResolver {\n    constructor(router, dataService) {\n        super(router, {\n            __typename: 'Product',\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            name: '',\n            languageCode: '',\n            optionGroups: [],\n            variants: [],\n        }, id => dataService.product.getProductVariantsOptions(id).mapStream(data => data.product));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantsResolver, deps: [{ token: i1$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantsResolver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantsResolver, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i1$1.Router }, { type: i1.DataService }] });\n\nconst createRoutes = (pageService) => [\n    {\n        path: 'products',\n        component: PageComponent,\n        data: {\n            locationId: 'product-list',\n            breadcrumb: marker('breadcrumb.products'),\n        },\n        children: pageService.getPageTabRoutes('product-list'),\n    },\n    {\n        path: 'inventory',\n        redirectTo: 'products',\n    },\n    {\n        path: 'products/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'product-detail',\n            breadcrumb: { label: marker('breadcrumb.products'), link: ['../', 'products'] },\n        },\n        children: [\n            {\n                path: 'manage-variants',\n                component: ProductVariantsEditorComponent,\n                canDeactivate: [CanDeactivateDetailGuard],\n                data: {\n                    breadcrumb: ({ product }) => [\n                        {\n                            label: `${product.name}`,\n                            link: ['../'],\n                        },\n                        {\n                            label: marker('breadcrumb.manage-variants'),\n                            link: ['manage-variants'],\n                        },\n                    ],\n                },\n                resolve: {\n                    product: (route) => inject(DataService)\n                        .product.getProductVariantsOptions(route.parent?.params.id)\n                        .mapSingle(data => data.product),\n                },\n            },\n            ...pageService.getPageTabRoutes('product-detail'),\n        ],\n    },\n    {\n        path: 'products/:productId/variants/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'product-variant-detail',\n            breadcrumb: { label: marker('breadcrumb.products'), link: ['../', 'products'] },\n        },\n        children: pageService.getPageTabRoutes('product-variant-detail'),\n    },\n    {\n        path: 'products/:id/options',\n        component: ProductOptionsEditorComponent,\n        resolve: createResolveData(ProductVariantsResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: productOptionsEditorBreadcrumb,\n        },\n    },\n    {\n        path: 'facets',\n        component: PageComponent,\n        data: {\n            locationId: 'facet-list',\n            breadcrumb: marker('breadcrumb.facets'),\n        },\n        children: pageService.getPageTabRoutes('facet-list'),\n    },\n    {\n        path: 'facets/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'facet-detail',\n            breadcrumb: { label: marker('breadcrumb.facets'), link: ['../', 'facets'] },\n        },\n        children: pageService.getPageTabRoutes('facet-detail'),\n    },\n    {\n        path: 'collections',\n        component: PageComponent,\n        data: {\n            locationId: 'collection-list',\n            breadcrumb: marker('breadcrumb.collections'),\n        },\n        children: pageService.getPageTabRoutes('collection-list'),\n    },\n    {\n        path: 'collections/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'collection-detail',\n            breadcrumb: { label: marker('breadcrumb.collections'), link: ['../', 'collections'] },\n        },\n        children: pageService.getPageTabRoutes('collection-detail'),\n    },\n    {\n        path: 'assets',\n        component: PageComponent,\n        data: {\n            locationId: 'asset-list',\n            breadcrumb: marker('breadcrumb.assets'),\n        },\n        children: pageService.getPageTabRoutes('asset-list'),\n    },\n    {\n        path: 'assets/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'asset-detail',\n            breadcrumb: { label: marker('breadcrumb.assets'), link: ['../', 'assets'] },\n        },\n        children: pageService.getPageTabRoutes('asset-detail'),\n    },\n];\nfunction productOptionsEditorBreadcrumb(data, params) {\n    return data.entity.pipe(map((entity) => [\n        {\n            label: marker('breadcrumb.products'),\n            link: ['../', 'products'],\n        },\n        {\n            label: `${entity.name}`,\n            link: ['../', 'products', params.id],\n        },\n        {\n            label: marker('breadcrumb.product-options'),\n            link: ['options'],\n        },\n    ]));\n}\n\nclass ApplyFacetDialogComponent {\n    constructor(changeDetector) {\n        this.changeDetector = changeDetector;\n        this.selectedValues = [];\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.selector.focus(), 0);\n    }\n    selectValues() {\n        this.resolveWith(this.selectedValues);\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ApplyFacetDialogComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ApplyFacetDialogComponent, selector: \"vdr-apply-facet-dialog\", viewQueries: [{ propertyName: \"selector\", first: true, predicate: FacetValueSelectorComponent, descendants: true }], ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'catalog.add-facets' | translate }}</ng-template>\\r\\n\\r\\n<vdr-facet-value-selector\\r\\n    (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n></vdr-facet-value-selector>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"selectValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.add-facets' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i1.FacetValueSelectorComponent, selector: \"vdr-facet-value-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ApplyFacetDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-apply-facet-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'catalog.add-facets' | translate }}</ng-template>\\r\\n\\r\\n<vdr-facet-value-selector\\r\\n    (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n></vdr-facet-value-selector>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"selectValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.add-facets' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { selector: [{\n                type: ViewChild,\n                args: [FacetValueSelectorComponent]\n            }] } });\n\nconst ASSET_DETAIL_QUERY = gql `\r\n    query AssetDetailQuery($id: ID!) {\r\n        asset(id: $id) {\r\n            ...Asset\r\n            tags {\r\n                ...Tag\r\n            }\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${TAG_FRAGMENT}\r\n`;\nclass AssetDetailComponent extends TypedBaseDetailComponent {\n    constructor(notificationService, dataService, formBuilder) {\n        super();\n        this.notificationService = notificationService;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.customFields = this.getCustomFieldConfig('Asset');\n        this.detailForm = new FormGroup({\n            name: new FormControl(''),\n            tags: new FormControl([]),\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    onAssetChange(event) {\n        this.detailForm.get('name')?.setValue(event.name);\n        this.detailForm.get('tags')?.setValue(event.tags);\n        this.detailForm.markAsDirty();\n    }\n    save() {\n        this.dataService.product\n            .updateAsset({\n            id: this.id,\n            name: this.detailForm.value.name,\n            tags: this.detailForm.value.tags,\n            customFields: this.detailForm.value.customFields,\n        })\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Asset' });\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Asset',\n            });\n        });\n    }\n    setFormValues(entity, languageCode) {\n        this.detailForm.get('name')?.setValue(entity.name);\n        this.detailForm.get('tags')?.setValue(entity.tags.map(t => t.id));\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AssetDetailComponent, deps: [{ token: i1.NotificationService }, { token: i1.DataService }, { token: i2.UntypedFormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: AssetDetailComponent, selector: \"vdr-asset-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"asset-detail\\\" />\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateAsset']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"asset-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-block>\\r\\n    <vdr-asset-preview\\r\\n        [asset]=\\\"entity$ | async\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsForm]=\\\"detailForm.get('customFields')\\\"\\r\\n        (assetChange)=\\\"onAssetChange($event)\\\"\\r\\n    />\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}\\n\"], dependencies: [{ kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.AssetPreviewComponent, selector: \"vdr-asset-preview\", inputs: [\"asset\", \"assets\", \"editable\", \"customFields\", \"customFieldsForm\"], outputs: [\"assetChange\", \"editClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AssetDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-asset-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"asset-detail\\\" />\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateAsset']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"asset-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-block>\\r\\n    <vdr-asset-preview\\r\\n        [asset]=\\\"entity$ | async\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsForm]=\\\"detailForm.get('customFields')\\\"\\r\\n        (assetChange)=\\\"onAssetChange($event)\\\"\\r\\n    />\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.NotificationService }, { type: i1.DataService }, { type: i2.UntypedFormBuilder }] });\n\nclass AssetListComponent extends BaseListComponent {\n    constructor(notificationService, modalService, dataService, router, route) {\n        super(router, route);\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.dataService = dataService;\n        this.searchTerm$ = new BehaviorSubject(undefined);\n        this.filterByTags$ = new BehaviorSubject(undefined);\n        this.uploading = false;\n        super.setQueryFn((...args) => this.dataService.product.getAssetList(...args).refetchOnChannelChange(), data => data.assets, (skip, take) => {\n            const searchTerm = this.searchTerm$.value;\n            const tags = this.filterByTags$.value?.map(t => t.value);\n            return {\n                options: {\n                    skip,\n                    take,\n                    ...(searchTerm\n                        ? {\n                            filter: {\n                                name: { contains: searchTerm },\n                            },\n                        }\n                        : {}),\n                    sort: {\n                        createdAt: SortOrder.DESC,\n                    },\n                    tags,\n                    tagsOperator: LogicalOperator.AND,\n                },\n            };\n        }, { take: 25, skip: 0 });\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.paginationConfig$ = combineLatest(this.itemsPerPage$, this.currentPage$, this.totalItems$).pipe(map(([itemsPerPage, currentPage, totalItems]) => ({ itemsPerPage, currentPage, totalItems })));\n        this.searchTerm$.pipe(debounceTime(250), takeUntil(this.destroy$)).subscribe(() => this.refresh());\n        this.filterByTags$.pipe(takeUntil(this.destroy$)).subscribe(() => this.refresh());\n        this.allTags$ = this.dataService.product.getTagList().mapStream(data => data.tags.items);\n    }\n    filesSelected(files) {\n        if (files.length) {\n            this.uploading = true;\n            this.dataService.product\n                .createAssets(files)\n                .pipe(finalize(() => (this.uploading = false)))\n                .subscribe(({ createAssets }) => {\n                let successCount = 0;\n                for (const result of createAssets) {\n                    switch (result.__typename) {\n                        case 'Asset':\n                            successCount++;\n                            break;\n                        case 'MimeTypeError':\n                            this.notificationService.error(result.message);\n                            break;\n                    }\n                }\n                if (0 < successCount) {\n                    super.refresh();\n                    this.notificationService.success(marker('asset.notify-create-assets-success'), {\n                        count: successCount,\n                    });\n                }\n            });\n        }\n    }\n    deleteAssets(assets) {\n        this.showModalAndDelete(assets.map(a => a.id))\n            .pipe(switchMap(response => {\n            if (response.result === DeletionResult.DELETED) {\n                return [true];\n            }\n            else {\n                return this.showModalAndDelete(assets.map(a => a.id), response.message || '').pipe(map(r => r.result === DeletionResult.DELETED));\n            }\n        }))\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-delete-success'), {\n                entity: 'Assets',\n            });\n            this.refresh();\n        }, err => {\n            this.notificationService.error(marker('common.notify-delete-error'), {\n                entity: 'Assets',\n            });\n        });\n    }\n    showModalAndDelete(assetIds, message) {\n        return this.modalService\n            .dialog({\n            title: marker('catalog.confirm-delete-assets'),\n            translationVars: {\n                count: assetIds.length,\n            },\n            body: message,\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(res => (res ? this.dataService.product.deleteAssets(assetIds, !!message) : EMPTY)), map(res => res.deleteAssets));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AssetListComponent, deps: [{ token: i1.NotificationService }, { token: i1.ModalService }, { token: i1.DataService }, { token: i1$1.Router }, { token: i1$1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: AssetListComponent, selector: \"vdr-asset-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <div class=\\\"my-2\\\">\\r\\n        <vdr-asset-search-input\\r\\n            [tags]=\\\"allTags$ | async\\\"\\r\\n            (searchTermChange)=\\\"searchTerm$.next($event)\\\"\\r\\n            (tagsChange)=\\\"filterByTags$.next($event)\\\"\\r\\n        >\\r\\n            <vdr-asset-file-input\\r\\n                (selectFiles)=\\\"filesSelected($event)\\\"\\r\\n                [uploading]=\\\"uploading\\\"\\r\\n                dropZoneTarget=\\\".content-area\\\"\\r\\n            ></vdr-asset-file-input>\\r\\n        </vdr-asset-search-input>\\r\\n    </div>\\r\\n    <vdr-asset-gallery\\r\\n        [assets]=\\\"(items$ | async)! | paginate : (paginationConfig$ | async) || {}\\\"\\r\\n        [multiSelect]=\\\"true\\\"\\r\\n        [canDelete]=\\\"['DeleteCatalog', 'DeleteAsset'] | hasPermission\\\"\\r\\n        (deleteAssets)=\\\"deleteAssets($event)\\\"\\r\\n    ></vdr-asset-gallery>\\r\\n\\r\\n    <div class=\\\"paging-controls\\\">\\r\\n        <vdr-items-per-page-controls\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        ></vdr-items-per-page-controls>\\r\\n\\r\\n        <vdr-pagination-controls\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n        ></vdr-pagination-controls>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}vdr-asset-gallery{flex:1}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}.search-input{margin-top:6px;min-width:300px}\\n\"], dependencies: [{ kind: \"component\", type: i1.AssetSearchInputComponent, selector: \"vdr-asset-search-input\", inputs: [\"tags\"], outputs: [\"searchTermChange\", \"tagsChange\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"component\", type: i1.AssetFileInputComponent, selector: \"vdr-asset-file-input\", inputs: [\"dropZoneTarget\", \"uploading\"], outputs: [\"selectFiles\"] }, { kind: \"component\", type: i1.AssetGalleryComponent, selector: \"vdr-asset-gallery\", inputs: [\"assets\", \"multiSelect\", \"canDelete\"], outputs: [\"selectionChange\", \"deleteAssets\", \"editAssetClick\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AssetListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-asset-list', template: \"<vdr-page-block>\\r\\n    <div class=\\\"my-2\\\">\\r\\n        <vdr-asset-search-input\\r\\n            [tags]=\\\"allTags$ | async\\\"\\r\\n            (searchTermChange)=\\\"searchTerm$.next($event)\\\"\\r\\n            (tagsChange)=\\\"filterByTags$.next($event)\\\"\\r\\n        >\\r\\n            <vdr-asset-file-input\\r\\n                (selectFiles)=\\\"filesSelected($event)\\\"\\r\\n                [uploading]=\\\"uploading\\\"\\r\\n                dropZoneTarget=\\\".content-area\\\"\\r\\n            ></vdr-asset-file-input>\\r\\n        </vdr-asset-search-input>\\r\\n    </div>\\r\\n    <vdr-asset-gallery\\r\\n        [assets]=\\\"(items$ | async)! | paginate : (paginationConfig$ | async) || {}\\\"\\r\\n        [multiSelect]=\\\"true\\\"\\r\\n        [canDelete]=\\\"['DeleteCatalog', 'DeleteAsset'] | hasPermission\\\"\\r\\n        (deleteAssets)=\\\"deleteAssets($event)\\\"\\r\\n    ></vdr-asset-gallery>\\r\\n\\r\\n    <div class=\\\"paging-controls\\\">\\r\\n        <vdr-items-per-page-controls\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        ></vdr-items-per-page-controls>\\r\\n\\r\\n        <vdr-pagination-controls\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n        ></vdr-pagination-controls>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}vdr-asset-gallery{flex:1}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}.search-input{margin-top:6px;min-width:300px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.NotificationService }, { type: i1.ModalService }, { type: i1.DataService }, { type: i1$1.Router }, { type: i1$1.ActivatedRoute }] });\n\nclass AssignProductsToChannelDialogComponent {\n    get isProductVariantMode() {\n        return this.productVariantIds != null;\n    }\n    constructor(dataService, notificationService) {\n        this.dataService = dataService;\n        this.notificationService = notificationService;\n        this.priceFactorControl = new UntypedFormControl(1);\n        this.selectedChannelIdControl = new UntypedFormControl();\n    }\n    ngOnInit() {\n        const activeChannelId$ = this.dataService.client\n            .userStatus()\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\n        const allChannels$ = this.dataService.settings.getChannels().mapSingle(data => data.channels);\n        combineLatest(activeChannelId$, allChannels$).subscribe(([activeChannelId, channels]) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.currentChannel = channels.items.find(c => c.id === activeChannelId);\n            this.availableChannels = channels.items;\n        });\n        this.selectedChannelIdControl.valueChanges.subscribe(ids => {\n            this.selectChannel(ids);\n        });\n        this.variantsPreview$ = combineLatest(from(this.getTopVariants(10)), this.priceFactorControl.valueChanges.pipe(startWith(1))).pipe(map(([variants, factor]) => variants.map(v => ({\n            id: v.id,\n            name: v.name,\n            price: v.price,\n            pricePreview: v.price * +factor,\n        }))));\n    }\n    selectChannel(channelIds) {\n        this.selectedChannel = this.availableChannels.find(c => c.id === channelIds[0]);\n    }\n    assign() {\n        const selectedChannel = this.selectedChannel;\n        if (selectedChannel) {\n            if (!this.isProductVariantMode) {\n                this.dataService.product\n                    .assignProductsToChannel({\n                    channelId: selectedChannel.id,\n                    productIds: this.productIds,\n                    priceFactor: +this.priceFactorControl.value,\n                })\n                    .subscribe(() => {\n                    this.notificationService.success(marker('catalog.assign-product-to-channel-success'), {\n                        channel: selectedChannel.code,\n                        count: this.productIds.length,\n                    });\n                    this.resolveWith(true);\n                });\n            }\n            else if (this.productVariantIds) {\n                this.dataService.product\n                    .assignVariantsToChannel({\n                    channelId: selectedChannel.id,\n                    productVariantIds: this.productVariantIds,\n                    priceFactor: +this.priceFactorControl.value,\n                })\n                    .subscribe(() => {\n                    this.notificationService.success(marker('catalog.assign-variant-to-channel-success'), {\n                        channel: selectedChannel.code,\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        count: this.productVariantIds.length,\n                    });\n                    this.resolveWith(true);\n                });\n            }\n        }\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    async getTopVariants(take) {\n        return (await lastValueFrom(this.dataService.product.getProductVariants({\n            filterOperator: LogicalOperator.OR,\n            filter: {\n                productId: { in: this.productIds },\n                id: { in: this.productVariantIds },\n            },\n            take,\n        }).single$)).productVariants.items;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AssignProductsToChannelDialogComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: AssignProductsToChannelDialogComponent, selector: \"vdr-assign-products-to-channel-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    <ng-container *ngIf=\\\"isProductVariantMode; else productModeTitle\\\">{{\\r\\n        'catalog.assign-variants-to-channel' | translate\\r\\n    }}</ng-container>\\r\\n    <ng-template #productModeTitle>{{ 'catalog.assign-products-to-channel' | translate }}</ng-template>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'common.channel' | translate }}</label>\\r\\n        <vdr-channel-assignment-control\\r\\n            clrInput\\r\\n            [multiple]=\\\"false\\\"\\r\\n            [includeDefaultChannel]=\\\"false\\\"\\r\\n            [disableChannelIds]=\\\"currentChannelIds\\\"\\r\\n            [formControl]=\\\"selectedChannelIdControl\\\"\\r\\n        ></vdr-channel-assignment-control>\\r\\n    </clr-input-container>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'catalog.price-conversion-factor' | translate }}</label>\\r\\n        <input clrInput type=\\\"number\\\" min=\\\"0\\\" max=\\\"99999\\\" [formControl]=\\\"priceFactorControl\\\" />\\r\\n    </clr-input-container>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"channel-price-preview\\\">\\r\\n    <label class=\\\"clr-control-label\\\">{{ 'catalog.channel-price-preview' | translate }}</label>\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>{{ 'common.name' | translate }}</th>\\r\\n                <th>\\r\\n                    {{\\r\\n                        'catalog.price-in-channel'\\r\\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\\r\\n                    }}\\r\\n                </th>\\r\\n                <th>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n                        {{ 'catalog.price-in-channel' | translate: { channel: selectedChannel?.code } }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noSelection>\\r\\n                        {{ 'catalog.no-channel-selected' | translate }}\\r\\n                    </ng-template>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let row of variantsPreview$ | async\\\">\\r\\n                <td>{{ row.name }}</td>\\r\\n                <td>{{ row.price | localeCurrency: currentChannel?.defaultCurrencyCode }}</td>\\r\\n                <td>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noChannelSelected\\\">\\r\\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.defaultCurrencyCode }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noChannelSelected> - </ng-template>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"assign()\\\" [disabled]=\\\"!selectedChannel\\\" class=\\\"btn btn-primary\\\">\\r\\n        <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\\r\\n        </ng-template>\\r\\n        <ng-template #noSelection>\\r\\n            {{ 'catalog.no-channel-selected' | translate }}\\r\\n        </ng-template>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"vdr-channel-assignment-control{min-width:200px}.channel-price-preview{margin-top:24px}.channel-price-preview table.table{margin-top:6px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"component\", type: i3.ClrInputContainer, selector: \"clr-input-container\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.ChannelAssignmentControlComponent, selector: \"vdr-channel-assignment-control\", inputs: [\"multiple\", \"includeDefaultChannel\", \"disableChannelIds\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AssignProductsToChannelDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-assign-products-to-channel-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    <ng-container *ngIf=\\\"isProductVariantMode; else productModeTitle\\\">{{\\r\\n        'catalog.assign-variants-to-channel' | translate\\r\\n    }}</ng-container>\\r\\n    <ng-template #productModeTitle>{{ 'catalog.assign-products-to-channel' | translate }}</ng-template>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'common.channel' | translate }}</label>\\r\\n        <vdr-channel-assignment-control\\r\\n            clrInput\\r\\n            [multiple]=\\\"false\\\"\\r\\n            [includeDefaultChannel]=\\\"false\\\"\\r\\n            [disableChannelIds]=\\\"currentChannelIds\\\"\\r\\n            [formControl]=\\\"selectedChannelIdControl\\\"\\r\\n        ></vdr-channel-assignment-control>\\r\\n    </clr-input-container>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'catalog.price-conversion-factor' | translate }}</label>\\r\\n        <input clrInput type=\\\"number\\\" min=\\\"0\\\" max=\\\"99999\\\" [formControl]=\\\"priceFactorControl\\\" />\\r\\n    </clr-input-container>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"channel-price-preview\\\">\\r\\n    <label class=\\\"clr-control-label\\\">{{ 'catalog.channel-price-preview' | translate }}</label>\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>{{ 'common.name' | translate }}</th>\\r\\n                <th>\\r\\n                    {{\\r\\n                        'catalog.price-in-channel'\\r\\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\\r\\n                    }}\\r\\n                </th>\\r\\n                <th>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n                        {{ 'catalog.price-in-channel' | translate: { channel: selectedChannel?.code } }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noSelection>\\r\\n                        {{ 'catalog.no-channel-selected' | translate }}\\r\\n                    </ng-template>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let row of variantsPreview$ | async\\\">\\r\\n                <td>{{ row.name }}</td>\\r\\n                <td>{{ row.price | localeCurrency: currentChannel?.defaultCurrencyCode }}</td>\\r\\n                <td>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noChannelSelected\\\">\\r\\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.defaultCurrencyCode }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noChannelSelected> - </ng-template>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"assign()\\\" [disabled]=\\\"!selectedChannel\\\" class=\\\"btn btn-primary\\\">\\r\\n        <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\\r\\n        </ng-template>\\r\\n        <ng-template #noSelection>\\r\\n            {{ 'catalog.no-channel-selected' | translate }}\\r\\n        </ng-template>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"vdr-channel-assignment-control{min-width:200px}.channel-price-preview{margin-top:24px}.channel-price-preview table.table{margin-top:6px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.NotificationService }] });\n\nconst GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS = gql `\r\n    query GetProductsWithFacetValuesByIds($ids: [String!]!) {\r\n        products(options: { filter: { id: { in: $ids } } }) {\r\n            items {\r\n                id\r\n                name\r\n                facetValues {\r\n                    id\r\n                    name\r\n                    code\r\n                    facet {\r\n                        id\r\n                        name\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\nconst GET_VARIANTS_WITH_FACET_VALUES_BY_IDS = gql `\r\n    query GetVariantsWithFacetValuesByIds($ids: [String!]!) {\r\n        productVariants(options: { filter: { id: { in: $ids } } }) {\r\n            items {\r\n                id\r\n                name\r\n                sku\r\n                facetValues {\r\n                    id\r\n                    name\r\n                    code\r\n                    facet {\r\n                        id\r\n                        name\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\nconst UPDATE_PRODUCTS_BULK = gql `\r\n    mutation UpdateProductsBulk($input: [UpdateProductInput!]!) {\r\n        updateProducts(input: $input) {\r\n            id\r\n            name\r\n            facetValues {\r\n                id\r\n                name\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\nconst UPDATE_VARIANTS_BULK = gql `\r\n    mutation UpdateVariantsBulk($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            id\r\n            name\r\n            facetValues {\r\n                id\r\n                name\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\n\nclass BulkAddFacetValuesDialogComponent {\n    constructor(dataService, changeDetectorRef) {\n        this.dataService = dataService;\n        this.changeDetectorRef = changeDetectorRef;\n        /* provided by call to ModalService */\n        this.mode = 'product';\n        this.state = 'loading';\n        this.selectedValues = [];\n        this.items = [];\n        this.facetValuesRemoved = false;\n    }\n    ngOnInit() {\n        const fetchData$ = this.mode === 'product'\n            ? this.dataService\n                .query(GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS, {\n                ids: this.ids ?? [],\n            })\n                .mapSingle(({ products }) => products.items.map(p => ({ ...p, facetValues: [...p.facetValues] })))\n            : this.dataService\n                .query(GET_VARIANTS_WITH_FACET_VALUES_BY_IDS, {\n                ids: this.ids ?? [],\n            })\n                .mapSingle(({ productVariants }) => productVariants.items.map(p => ({ ...p, facetValues: [...p.facetValues] })));\n        this.subscription = fetchData$.subscribe({\n            next: items => {\n                this.items = items;\n                this.state = 'ready';\n                this.changeDetectorRef.markForCheck();\n            },\n        });\n    }\n    ngOnDestroy() {\n        this.subscription?.unsubscribe();\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    removeFacetValue(item, facetValueId) {\n        item.facetValues = item.facetValues.filter(fv => fv.id !== facetValueId);\n        this.facetValuesRemoved = true;\n    }\n    addFacetValues() {\n        const selectedFacetValueIds = this.selectedValues.map(sv => sv.id);\n        this.state = 'saving';\n        const save$ = this.mode === 'product'\n            ? this.dataService.mutate(UPDATE_PRODUCTS_BULK, {\n                input: this.items?.map(product => ({\n                    id: product.id,\n                    facetValueIds: unique([\n                        ...product.facetValues.map(fv => fv.id),\n                        ...selectedFacetValueIds,\n                    ]),\n                })),\n            })\n            : this.dataService.mutate(UPDATE_VARIANTS_BULK, {\n                input: this.items?.map(product => ({\n                    id: product.id,\n                    facetValueIds: unique([\n                        ...product.facetValues.map(fv => fv.id),\n                        ...selectedFacetValueIds,\n                    ]),\n                })),\n            });\n        return save$.subscribe(result => {\n            this.resolveWith(this.selectedValues);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: BulkAddFacetValuesDialogComponent, deps: [{ token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: BulkAddFacetValuesDialogComponent, selector: \"vdr-bulk-add-facet-values-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.edit-facet-values' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <div class=\\\"flex center\\\">\\r\\n        <div class=\\\"mr2\\\">\\r\\n            {{ 'catalog.add-facet-value' | translate }}\\r\\n        </div>\\r\\n        <vdr-facet-value-selector\\r\\n            (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n        ></vdr-facet-value-selector>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\" *ngIf=\\\"state !== 'loading'; else placeholder\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of items\\\">\\r\\n            <td class=\\\"left align-middle\\\">\\r\\n                <div>{{ item.name }}</div>\\r\\n                <div *ngIf=\\\"item.sku\\\" class=\\\"sku\\\">{{ item.sku }}</div>\\r\\n            </td>\\r\\n            <td class=\\\"left\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let facetValue of item.facetValues\\\"\\r\\n                    [facetValue]=\\\"facetValue\\\"\\r\\n                    (remove)=\\\"removeFacetValue(item, facetValue.id)\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #placeholder>\\r\\n    <div class=\\\"loading\\\">\\r\\n    <clr-spinner></clr-spinner>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"addFacetValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0 && facetValuesRemoved === false\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".loading{min-height:25vh;display:flex;justify-content:center;align-items:center}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrSpinner, selector: \"clr-spinner\", inputs: [\"clrInline\", \"clrInverse\", \"clrSmall\", \"clrMedium\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.FacetValueSelectorComponent, selector: \"vdr-facet-value-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: BulkAddFacetValuesDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-bulk-add-facet-values-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.edit-facet-values' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <div class=\\\"flex center\\\">\\r\\n        <div class=\\\"mr2\\\">\\r\\n            {{ 'catalog.add-facet-value' | translate }}\\r\\n        </div>\\r\\n        <vdr-facet-value-selector\\r\\n            (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n        ></vdr-facet-value-selector>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\" *ngIf=\\\"state !== 'loading'; else placeholder\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of items\\\">\\r\\n            <td class=\\\"left align-middle\\\">\\r\\n                <div>{{ item.name }}</div>\\r\\n                <div *ngIf=\\\"item.sku\\\" class=\\\"sku\\\">{{ item.sku }}</div>\\r\\n            </td>\\r\\n            <td class=\\\"left\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let facetValue of item.facetValues\\\"\\r\\n                    [facetValue]=\\\"facetValue\\\"\\r\\n                    (remove)=\\\"removeFacetValue(item, facetValue.id)\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #placeholder>\\r\\n    <div class=\\\"loading\\\">\\r\\n    <clr-spinner></clr-spinner>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"addFacetValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0 && facetValuesRemoved === false\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".loading{min-height:25vh;display:flex;justify-content:center;align-items:center}.sku{color:var(--color-text-300)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i0.ChangeDetectorRef }] });\n\nclass CollectionContentsComponent {\n    constructor(route, router, dataService) {\n        this.route = route;\n        this.router = router;\n        this.dataService = dataService;\n        this.previewUpdatedFilters = false;\n        this.filterTermControl = new UntypedFormControl('');\n        this.isLoading = false;\n        this.collectionIdChange$ = new BehaviorSubject('');\n        this.parentIdChange$ = new BehaviorSubject('');\n        this.filterChanges$ = new BehaviorSubject([]);\n        this.inheritFiltersChanges$ = new BehaviorSubject(true);\n        this.refresh$ = new BehaviorSubject(true);\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.contentsCurrentPage$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('contentsPage')), map(page => (!page ? 1 : +page)), startWith(1), distinctUntilChanged());\n        this.contentsItemsPerPage$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('contentsPerPage')), map(perPage => (!perPage ? 10 : +perPage)), startWith(10), distinctUntilChanged());\n        const filterTerm$ = this.filterTermControl.valueChanges.pipe(debounceTime(250), tap(() => this.setContentsPageNumber(1)), startWith(''));\n        const filterChanges$ = this.filterChanges$.asObservable().pipe(filter(() => this.previewUpdatedFilters), tap(() => this.setContentsPageNumber(1)), startWith([]));\n        const inheritFiltersChanges$ = this.inheritFiltersChanges$.asObservable().pipe(filter(() => this.inheritFilters != null), distinctUntilChanged(), tap(() => this.setContentsPageNumber(1)), startWith(true));\n        const fetchUpdate$ = combineLatest(this.collectionIdChange$, this.parentIdChange$, this.contentsCurrentPage$, this.contentsItemsPerPage$, filterTerm$, filterChanges$, inheritFiltersChanges$, this.refresh$);\n        const collection$ = fetchUpdate$.pipe(takeUntil(this.destroy$), tap(() => (this.isLoading = true)), debounceTime(50), switchMap(([id, parentId, currentPage, itemsPerPage, filterTerm, filters, inheritFilters]) => {\n            const take = itemsPerPage;\n            const skip = (currentPage - 1) * itemsPerPage;\n            if (filters.length && this.previewUpdatedFilters) {\n                const filterClause = filterTerm\n                    ? { name: { contains: filterTerm } }\n                    : undefined;\n                return this.dataService.collection\n                    .previewCollectionVariants({\n                    parentId,\n                    filters,\n                    inheritFilters,\n                }, {\n                    take,\n                    skip,\n                    filter: filterClause,\n                })\n                    .mapSingle(data => data.previewCollectionVariants)\n                    .pipe(catchError(() => of({ items: [], totalItems: 0 })));\n            }\n            else if (id) {\n                return this.dataService.collection\n                    .getCollectionContents(id, take, skip, filterTerm)\n                    .mapSingle(data => data.collection?.productVariants);\n            }\n            else {\n                return of(null);\n            }\n        }), tap(() => (this.isLoading = false)), finalize(() => (this.isLoading = false)));\n        this.contents$ = collection$.pipe(map(result => (result ? result.items : [])));\n        this.contentsTotalItems$ = collection$.pipe(map(result => (result ? result.totalItems : 0)));\n    }\n    ngOnChanges(changes) {\n        if ('collectionId' in changes) {\n            this.collectionIdChange$.next(changes.collectionId.currentValue);\n        }\n        if ('parentId' in changes) {\n            this.parentIdChange$.next(changes.parentId.currentValue);\n        }\n        if ('inheritFilters' in changes) {\n            this.inheritFiltersChanges$.next(changes.inheritFilters.currentValue);\n        }\n        if ('updatedFilters' in changes) {\n            if (this.updatedFilters) {\n                this.filterChanges$.next(this.updatedFilters);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setContentsPageNumber(page) {\n        this.setParam('contentsPage', page);\n    }\n    setContentsItemsPerPage(perPage) {\n        this.setParam('contentsPerPage', perPage);\n    }\n    refresh() {\n        this.refresh$.next(true);\n    }\n    setParam(key, value) {\n        this.router.navigate(['./'], {\n            relativeTo: this.route,\n            queryParams: {\n                [key]: value,\n            },\n            queryParamsHandling: 'merge',\n            replaceUrl: true,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionContentsComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: { collectionId: \"collectionId\", parentId: \"parentId\", inheritFilters: \"inheritFilters\", updatedFilters: \"updatedFilters\", previewUpdatedFilters: \"previewUpdatedFilters\" }, queries: [{ propertyName: \"headerTemplate\", first: true, predicate: TemplateRef, descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"progress loop\\\" [class.visible]=\\\"isLoading\\\"></div>\\r\\n    <div class=\\\"header-title-row\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"headerTemplate; context: { $implicit: contentsTotalItems$ | async }\\\"\\r\\n        ></ng-container>\\r\\n    </div>\\r\\n    <vdr-data-table-2\\r\\n        id=\\\"collection-contents\\\"\\r\\n        [class.loading]=\\\"isLoading\\\"\\r\\n        [items]=\\\"contents$ | async\\\"\\r\\n        [itemsPerPage]=\\\"contentsItemsPerPage$ | async\\\"\\r\\n        [totalItems]=\\\"contentsTotalItems$ | async\\\"\\r\\n        [currentPage]=\\\"contentsCurrentPage$ | async\\\"\\r\\n        (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n        (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n    >\\r\\n        <vdr-dt2-search\\r\\n            [searchTermControl]=\\\"filterTermControl\\\"\\r\\n            [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n        />\\r\\n        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.id }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.createdAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.updatedAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/catalog/products', variant.productId]\\\"\\r\\n                    ><span>{{ variant.name }}</span\\r\\n                    ><clr-icon shape=\\\"arrow right\\\"\\r\\n                /></a>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.sku }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n    </vdr-data-table-2>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}:host ::ng-deep table{margin-top:-1px}vdr-data-table{opacity:1;transition:opacity .3s}vdr-data-table.loading{opacity:.5}.table-wrapper{position:relative}.progress{position:absolute;top:0;left:0;overflow:hidden;height:6px;opacity:0;transition:opacity .1s}.progress.visible{opacity:1}.sku{color:var(--color-text-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionContentsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-contents', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"progress loop\\\" [class.visible]=\\\"isLoading\\\"></div>\\r\\n    <div class=\\\"header-title-row\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"headerTemplate; context: { $implicit: contentsTotalItems$ | async }\\\"\\r\\n        ></ng-container>\\r\\n    </div>\\r\\n    <vdr-data-table-2\\r\\n        id=\\\"collection-contents\\\"\\r\\n        [class.loading]=\\\"isLoading\\\"\\r\\n        [items]=\\\"contents$ | async\\\"\\r\\n        [itemsPerPage]=\\\"contentsItemsPerPage$ | async\\\"\\r\\n        [totalItems]=\\\"contentsTotalItems$ | async\\\"\\r\\n        [currentPage]=\\\"contentsCurrentPage$ | async\\\"\\r\\n        (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n        (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n    >\\r\\n        <vdr-dt2-search\\r\\n            [searchTermControl]=\\\"filterTermControl\\\"\\r\\n            [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n        />\\r\\n        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.id }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.createdAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.updatedAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/catalog/products', variant.productId]\\\"\\r\\n                    ><span>{{ variant.name }}</span\\r\\n                    ><clr-icon shape=\\\"arrow right\\\"\\r\\n                /></a>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.sku }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n    </vdr-data-table-2>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}:host ::ng-deep table{margin-top:-1px}vdr-data-table{opacity:1;transition:opacity .3s}vdr-data-table.loading{opacity:.5}.table-wrapper{position:relative}.progress{position:absolute;top:0;left:0;overflow:hidden;height:6px;opacity:0;transition:opacity .1s}.progress.visible{opacity:1}.sku{color:var(--color-text-200)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1$1.ActivatedRoute }, { type: i1$1.Router }, { type: i1.DataService }], propDecorators: { collectionId: [{\n                type: Input\n            }], parentId: [{\n                type: Input\n            }], inheritFilters: [{\n                type: Input\n            }], updatedFilters: [{\n                type: Input\n            }], previewUpdatedFilters: [{\n                type: Input\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: true }]\n            }] } });\n\nclass CollectionDataTableComponent extends DataTable2Component {\n    constructor(changeDetectorRef, dataService) {\n        super(changeDetectorRef, dataService);\n        this.changeDetectorRef = changeDetectorRef;\n        this.dataService = dataService;\n        this.changeOrder = new EventEmitter();\n        this.dragRefs = [];\n        this.absoluteIndex = {};\n        this.sortPredicate = (index, item) => {\n            const itemAtIndex = this.dropList.getSortedItems()[index];\n            return itemAtIndex?.data.collection.parentId === item.data.collection.parentId;\n        };\n    }\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n        if (changes.subCollections || changes.items) {\n            const allCollections = [];\n            for (const collection of this.items ?? []) {\n                allCollections.push(collection);\n                const subCollectionMatches = this.getSubcollections(collection);\n                allCollections.push(...subCollectionMatches.flat());\n            }\n            allCollections.forEach((collection, index) => (this.absoluteIndex[collection.id] = index));\n        }\n    }\n    ngAfterViewInit() {\n        this.collectionRowList.changes.subscribe((val) => {\n            this.dropList.getSortedItems().forEach(item => this.dropList.removeItem(item));\n            for (const ref of val.toArray()) {\n                ref.dropContainer = this.dropList;\n                ref._dragRef._withDropContainer(this.dropList._dropListRef);\n                this.dropList.addItem(ref);\n            }\n        });\n    }\n    getSubcollections(item) {\n        return this.subCollections?.filter(c => c.parentId === item.id) ?? [];\n    }\n    onDrop(event) {\n        const isTopLevel = event.item.data.collection.breadcrumbs.length === 2;\n        const pageIndexOffset = isTopLevel ? (this.currentPage - 1) * this.itemsPerPage : 0;\n        const parentId = event.item.data.collection.parentId;\n        const parentIndex = this.items.findIndex(i => i.id === parentId);\n        const adjustedIndex = pageIndexOffset + event.currentIndex - parentIndex - 1;\n        this.changeOrder.emit({\n            collectionId: event.item.data.collection.id,\n            index: adjustedIndex,\n            parentId: event.item.data.collection.parentId,\n        });\n        if (isTopLevel) {\n            this.items = [...this.items];\n            this.items.splice(event.previousIndex, 1);\n            this.items.splice(event.currentIndex, 0, event.item.data.collection);\n        }\n        else {\n            const parent = this.items.find(i => i.id === parentId);\n            if (parent) {\n                const subCollections = this.getSubcollections(parent);\n                const adjustedPreviousIndex = pageIndexOffset + event.previousIndex - parentIndex - 1;\n                subCollections.splice(adjustedPreviousIndex, 1);\n                subCollections.splice(event.currentIndex, 0, event.item.data.collection);\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionDataTableComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: { subCollections: \"subCollections\" }, outputs: { changeOrder: \"changeOrder\" }, viewQueries: [{ propertyName: \"dropList\", first: true, predicate: CdkDropList, descendants: true, static: true }, { propertyName: \"collectionRowList\", predicate: [\"collectionRow\"], descendants: true, read: CdkDrag }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<vdr-data-table-filter-presets\\r\\n    *ngIf=\\\"filters\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    [dataTableId]=\\\"id\\\"\\r\\n></vdr-data-table-filter-presets>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"bulk-actions\\\">\\r\\n        <ng-content select=\\\"vdr-bulk-action-menu\\\"></ng-content>\\r\\n    </div>\\r\\n    <table class=\\\"\\\" [class.no-select]=\\\"disableSelect\\\">\\r\\n        <thead [class.items-selected]=\\\"selectionManager?.selection.length\\\">\\r\\n            <tr class=\\\"heading-row\\\">\\r\\n                <th *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\">\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle-spacer\\\"></div>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            [checked]=\\\"selectionManager?.areAllCurrentItemsSelected()\\\"\\r\\n                            (change)=\\\"onToggleAllClick()\\\"\\r\\n                        />\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th\\r\\n                    *ngFor=\\\"let column of visibleSortedColumns; last as isLast\\\"\\r\\n                    [class.expand]=\\\"column.expand\\\"\\r\\n                >\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <vdr-ui-extension-point\\r\\n                            [locationId]=\\\"id\\\"\\r\\n                            [metadata]=\\\"column.id\\\"\\r\\n                            api=\\\"dataTable\\\"\\r\\n                            [topPx]=\\\"-6\\\"\\r\\n                            [leftPx]=\\\"-24\\\"\\r\\n                            display=\\\"block\\\"\\r\\n                        >\\r\\n                            <span>{{ column.heading }}</span>\\r\\n                        </vdr-ui-extension-point>\\r\\n                        <div *ngIf=\\\"column.sort as sort\\\" class=\\\"sort-toggle\\\">\\r\\n                            <button (click)=\\\"sort.toggleSortOrder()\\\" [class.active]=\\\"sort.sortOrder\\\">\\r\\n                                <clr-icon *ngIf=\\\"!sort.sortOrder\\\" shape=\\\"two-way-arrows left\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'ASC'\\\" shape=\\\"arrow up\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'DESC'\\\" shape=\\\"arrow down\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <div class=\\\"sort-label\\\" *ngIf=\\\"sort.sortOrder\\\">{{ sort.sortOrder }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <div class=\\\"column-picker\\\">\\r\\n                        <vdr-data-table-colum-picker\\r\\n                            [uiLanguage]=\\\"uiLanguage$ | async\\\"\\r\\n                            [columns]=\\\"sortedColumns\\\"\\r\\n                            (reorder)=\\\"onColumnReorder($event)\\\"\\r\\n                            (resetColumns)=\\\"onColumnsReset()\\\"\\r\\n                        ></vdr-data-table-colum-picker>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"searchComponent || customSearchTemplate || filters?.length\\\">\\r\\n                <th\\r\\n                    [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\"\\r\\n                    class=\\\"filter-row\\\"\\r\\n                    [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                >\\r\\n                    <button\\r\\n                        class=\\\"button-ghost toggle-search-filter-row\\\"\\r\\n                        [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                        (click)=\\\"toggleSearchFilterRow()\\\"\\r\\n                        [title]=\\\"'common.search-and-filter-list' | translate\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"search\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <div class=\\\"filter-row-wrapper\\\" [class.hidden]=\\\"!showSearchFilterRow\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"searchComponent?.template\\\"></ng-container>\\r\\n                        <ng-container *ngTemplateOutlet=\\\"customSearchTemplate\\\"></ng-container>\\r\\n                        <ng-container *ngIf=\\\"filters\\\">\\r\\n                            <div class=\\\"filters\\\">\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngFor=\\\"let activeFilter of filters.activeFilters\\\"\\r\\n                                    [filterWithValue]=\\\"activeFilter\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngIf=\\\"filters.length\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-add-filter-preset-button\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    [dataTableId]=\\\"id\\\"\\r\\n                                ></vdr-add-filter-preset-button>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody\\r\\n            cdkDropList\\r\\n            cdkDropListLockAxis=\\\"y\\\"\\r\\n            (cdkDropListDropped)=\\\"onDrop($event)\\\"\\r\\n            [cdkDropListSortPredicate]=\\\"sortPredicate\\\"\\r\\n        >\\r\\n            <ng-container\\r\\n                *ngFor=\\\"\\r\\n                let item of items\\r\\n                    | paginate\\r\\n                        : {\\r\\n                              itemsPerPage: itemsPerPage,\\r\\n                              currentPage: currentPage,\\r\\n                              totalItems: totalItems,\\r\\n                              id: id,\\r\\n                          };\\r\\n                index as i;\\r\\n                trackBy: trackByFn\\r\\n            \\\"\\r\\n            >\\r\\n                <ng-container\\r\\n                    [ngTemplateOutlet]=\\\"collectionRowTmp\\\"\\r\\n                    [ngTemplateOutletContext]=\\\"{ item: item, i: i, depth: 0 }\\\"\\r\\n                ></ng-container>\\r\\n            </ng-container>\\r\\n            <ng-container>\\r\\n                <tr *ngIf=\\\"!items?.length\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\">\\r\\n                        <vdr-empty-placeholder [emptyStateLabel]=\\\"emptyStateLabel\\\"></vdr-empty-placeholder>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"table-footer\\\">\\r\\n    <vdr-items-per-page-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        (itemsPerPageChange)=\\\"itemsPerPageChange.emit($event)\\\"\\r\\n    ></vdr-items-per-page-controls>\\r\\n    <div *ngIf=\\\"totalItems\\\" class=\\\"p5 total-items-count\\\">\\r\\n        {{ 'common.total-items' | translate : { currentStart, currentEnd, totalItems } }}\\r\\n    </div>\\r\\n\\r\\n    <vdr-pagination-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [id]=\\\"id\\\"\\r\\n        [currentPage]=\\\"currentPage\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChange)=\\\"pageChange.emit($event)\\\"\\r\\n    ></vdr-pagination-controls>\\r\\n</div>\\r\\n\\r\\n<ng-template #collectionRowTmp let-item=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n    <tr #collectionRow cdkDrag [cdkDragData]=\\\"{ depth: depth, collection: item }\\\" cdkDragBoundary=\\\"tbody\\\">\\r\\n        <td\\r\\n            *ngIf=\\\"selectionManager\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n            class=\\\"selection-col\\\"\\r\\n        >\\r\\n            <div class=\\\"flex\\\">\\r\\n                <div class=\\\"drag-handle\\\" cdkDragHandle [title]=\\\"'catalog.reorder-collection' | translate\\\">\\r\\n                    <clr-icon shape=\\\"drag-handle\\\"></clr-icon>\\r\\n                </div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager?.isSelected(item)\\\"\\r\\n                    (click)=\\\"onRowClick(item, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n        </td>\\r\\n        <td\\r\\n            *ngFor=\\\"let column of visibleSortedColumns\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n        >\\r\\n            <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                <ng-container\\r\\n                    *ngIf=\\\"customComponents.get(column.id) as componentConfig; else defaultComponent\\\"\\r\\n                >\\r\\n                    <ng-container\\r\\n                        *ngComponentOutlet=\\\"\\r\\n                            componentConfig.config.component;\\r\\n                            inputs: { rowItem: item };\\r\\n                            injector: componentConfig.injector\\r\\n                        \\\"\\r\\n                    ></ng-container>\\r\\n                </ng-container>\\r\\n                <ng-template #defaultComponent>\\r\\n                    <ng-container\\r\\n                        *ngTemplateOutlet=\\\"column.template; context: { item: item, depth: depth }\\\"\\r\\n                    ></ng-container>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"><!-- column select --></td>\\r\\n    </tr>\\r\\n    <ng-container *ngFor=\\\"let subCollection of getSubcollections(item)\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"collectionRowTmp; context: { item: subCollection, depth: depth + 1 }\\\"\\r\\n        ></ng-container>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;max-width:100%;position:relative;margin-bottom:calc(var(--space-unit) * 4);container-type:inline-size}th{border-bottom:1px solid var(--color-table-header-border);color:var(--color-weight-700);font-size:var(--font-size-xs);font-weight:600;text-transform:uppercase;position:relative;white-space:nowrap;background-color:transparent}th,td{padding:calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 1);color:var(--color-text-100)}tr td:first-of-type,tr th:first-of-type{text-align:center}@media screen and (min-width: 992px){tr td:first-of-type,tr th:first-of-type{padding-inline-start:var(--surface-margin-left);text-align:start}}th:last-of-type,td:last-of-type{border-inline-end:1px solid var(--color-table-header-border)}tr:first-of-type th:last-of-type{border-image:linear-gradient(0deg,var(--color-table-header-border),transparent) 1}tr:last-of-type td:last-of-type{border-image:linear-gradient(180deg,var(--color-table-header-border),transparent) 1}tbody td{border-bottom:1px solid var(--color-table-row-separator)}tbody tr:hover{background-color:var(--color-table-row-hover-bg)}.bulk-actions{margin-inline-start:calc(var(--space-unit) * 5);background-color:var(--color-surface-bg);z-index:10;display:flex;position:absolute;top:5px;height:40px}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 8.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 10.5)}}.table-wrapper{display:block;overflow-y:hidden;overflow-x:auto;position:relative;width:100%;max-width:var(--surface-width)}table{width:100%}table.no-select{-webkit-user-select:none;user-select:none}.column-picker{width:24px}.sort-toggle{display:flex;align-items:center;margin-inline-start:calc(var(--space-unit) * .5)}.sort-toggle button{border:0;border-radius:var(--border-radius-lg);color:var(--color-weight-500);padding:0 2px;cursor:pointer;background-color:transparent}.sort-toggle button.active{color:var(--color-primary-700)}.sort-toggle .sort-label{margin-inline-start:calc(var(--space-unit) * .5);font-size:10px;color:var(--color-primary-600);font-weight:400}.toggle-search-filter-row{position:absolute;top:-12px;left:4px}@media screen and (min-width: 1280px){.toggle-search-filter-row{left:8px}}.toggle-search-filter-row.active{background-color:var(--color-primary-700);color:var(--color-primary-100);border-color:var(--color-primary-700)}th.filter-row{position:relative;font-size:var(--font-size-base);font-weight:400;background-color:var(--color-weight-100);box-shadow:var(--data-table-filter-box-shadow);border-left-width:0;border-right-width:0;text-align:initial;padding:0}th.filter-row input{width:100%}th.filter-row.active{border-bottom:1px solid var(--color-table-header-border)}th.filter-row .filters{margin-top:calc(var(--space-unit) * 1);display:flex;flex-wrap:wrap;gap:calc(var(--space-unit) * .5)}.filter-row-wrapper{padding:calc(var(--space-unit) * 4);padding-inline-start:0;max-height:150px;transition:max-height .2s,padding .2s,opacity .2s}.filter-row-wrapper.hidden{max-height:0px;padding-top:0;padding-bottom:0;overflow:hidden;opacity:0}.cell-link{display:block;width:100%;height:100%}td.active{background-color:var(--color-table-row-active-bg)}.cell-content{display:flex;align-items:center;line-height:var(--font-size-sm);color:var(--color-weight-700)}.cell-content.left{justify-content:flex-start}.cell-content.center{justify-content:center}.cell-content.right{justify-content:flex-end}.selection-col{width:calc(var(--space-unit) * 8)}vdr-empty-placeholder{width:100%}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:var(--space-unit);margin-inline-start:var(--surface-margin-left);margin-inline-end:var(--space-unit)}.total-items-count{font-size:var(--font-size-xs)}@container (max-width: 500px){.total-items-count{display:none}}\\n\", \".bulk-actions{margin-inline-start:calc(var(--space-unit) * 6);background-color:var(--color-surface-bg)}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 9.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 11.5)}}.drag-handle{cursor:grab}.drag-handle-spacer{width:16px}.cdk-drop-list-dragging .cdk-drag{transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating{transition:transform .3s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{opacity:0}.cdk-drag-placeholder{background-color:var(--color-primary-100)!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgComponentOutlet, selector: \"[ngComponentOutlet]\", inputs: [\"ngComponentOutlet\", \"ngComponentOutletInputs\", \"ngComponentOutletInjector\", \"ngComponentOutletContent\", \"ngComponentOutletNgModule\", \"ngComponentOutletNgModuleFactory\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i4.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i4.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"directive\", type: i4.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.EmptyPlaceholderComponent, selector: \"vdr-empty-placeholder\", inputs: [\"emptyStateLabel\"] }, { kind: \"component\", type: i1.UiExtensionPointComponent, selector: \"vdr-ui-extension-point\", inputs: [\"locationId\", \"metadata\", \"topPx\", \"leftPx\", \"display\", \"api\"] }, { kind: \"component\", type: i1.DataTableFiltersComponent, selector: \"vdr-data-table-filters\", inputs: [\"filters\", \"filterWithValue\"] }, { kind: \"component\", type: i1.DataTableColumnPickerComponent, selector: \"vdr-data-table-colum-picker\", inputs: [\"columns\", \"uiLanguage\"], outputs: [\"reorder\", \"resetColumns\"] }, { kind: \"component\", type: i1.DataTableFilterPresetsComponent, selector: \"vdr-data-table-filter-presets\", inputs: [\"dataTableId\", \"filters\"] }, { kind: \"component\", type: i1.AddFilterPresetButtonComponent, selector: \"vdr-add-filter-preset-button\", inputs: [\"dataTableId\", \"filters\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionDataTableComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-data-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-data-table-filter-presets\\r\\n    *ngIf=\\\"filters\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    [dataTableId]=\\\"id\\\"\\r\\n></vdr-data-table-filter-presets>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"bulk-actions\\\">\\r\\n        <ng-content select=\\\"vdr-bulk-action-menu\\\"></ng-content>\\r\\n    </div>\\r\\n    <table class=\\\"\\\" [class.no-select]=\\\"disableSelect\\\">\\r\\n        <thead [class.items-selected]=\\\"selectionManager?.selection.length\\\">\\r\\n            <tr class=\\\"heading-row\\\">\\r\\n                <th *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\">\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle-spacer\\\"></div>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            [checked]=\\\"selectionManager?.areAllCurrentItemsSelected()\\\"\\r\\n                            (change)=\\\"onToggleAllClick()\\\"\\r\\n                        />\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th\\r\\n                    *ngFor=\\\"let column of visibleSortedColumns; last as isLast\\\"\\r\\n                    [class.expand]=\\\"column.expand\\\"\\r\\n                >\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <vdr-ui-extension-point\\r\\n                            [locationId]=\\\"id\\\"\\r\\n                            [metadata]=\\\"column.id\\\"\\r\\n                            api=\\\"dataTable\\\"\\r\\n                            [topPx]=\\\"-6\\\"\\r\\n                            [leftPx]=\\\"-24\\\"\\r\\n                            display=\\\"block\\\"\\r\\n                        >\\r\\n                            <span>{{ column.heading }}</span>\\r\\n                        </vdr-ui-extension-point>\\r\\n                        <div *ngIf=\\\"column.sort as sort\\\" class=\\\"sort-toggle\\\">\\r\\n                            <button (click)=\\\"sort.toggleSortOrder()\\\" [class.active]=\\\"sort.sortOrder\\\">\\r\\n                                <clr-icon *ngIf=\\\"!sort.sortOrder\\\" shape=\\\"two-way-arrows left\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'ASC'\\\" shape=\\\"arrow up\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'DESC'\\\" shape=\\\"arrow down\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <div class=\\\"sort-label\\\" *ngIf=\\\"sort.sortOrder\\\">{{ sort.sortOrder }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <div class=\\\"column-picker\\\">\\r\\n                        <vdr-data-table-colum-picker\\r\\n                            [uiLanguage]=\\\"uiLanguage$ | async\\\"\\r\\n                            [columns]=\\\"sortedColumns\\\"\\r\\n                            (reorder)=\\\"onColumnReorder($event)\\\"\\r\\n                            (resetColumns)=\\\"onColumnsReset()\\\"\\r\\n                        ></vdr-data-table-colum-picker>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"searchComponent || customSearchTemplate || filters?.length\\\">\\r\\n                <th\\r\\n                    [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\"\\r\\n                    class=\\\"filter-row\\\"\\r\\n                    [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                >\\r\\n                    <button\\r\\n                        class=\\\"button-ghost toggle-search-filter-row\\\"\\r\\n                        [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                        (click)=\\\"toggleSearchFilterRow()\\\"\\r\\n                        [title]=\\\"'common.search-and-filter-list' | translate\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"search\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <div class=\\\"filter-row-wrapper\\\" [class.hidden]=\\\"!showSearchFilterRow\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"searchComponent?.template\\\"></ng-container>\\r\\n                        <ng-container *ngTemplateOutlet=\\\"customSearchTemplate\\\"></ng-container>\\r\\n                        <ng-container *ngIf=\\\"filters\\\">\\r\\n                            <div class=\\\"filters\\\">\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngFor=\\\"let activeFilter of filters.activeFilters\\\"\\r\\n                                    [filterWithValue]=\\\"activeFilter\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngIf=\\\"filters.length\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-add-filter-preset-button\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    [dataTableId]=\\\"id\\\"\\r\\n                                ></vdr-add-filter-preset-button>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody\\r\\n            cdkDropList\\r\\n            cdkDropListLockAxis=\\\"y\\\"\\r\\n            (cdkDropListDropped)=\\\"onDrop($event)\\\"\\r\\n            [cdkDropListSortPredicate]=\\\"sortPredicate\\\"\\r\\n        >\\r\\n            <ng-container\\r\\n                *ngFor=\\\"\\r\\n                let item of items\\r\\n                    | paginate\\r\\n                        : {\\r\\n                              itemsPerPage: itemsPerPage,\\r\\n                              currentPage: currentPage,\\r\\n                              totalItems: totalItems,\\r\\n                              id: id,\\r\\n                          };\\r\\n                index as i;\\r\\n                trackBy: trackByFn\\r\\n            \\\"\\r\\n            >\\r\\n                <ng-container\\r\\n                    [ngTemplateOutlet]=\\\"collectionRowTmp\\\"\\r\\n                    [ngTemplateOutletContext]=\\\"{ item: item, i: i, depth: 0 }\\\"\\r\\n                ></ng-container>\\r\\n            </ng-container>\\r\\n            <ng-container>\\r\\n                <tr *ngIf=\\\"!items?.length\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\">\\r\\n                        <vdr-empty-placeholder [emptyStateLabel]=\\\"emptyStateLabel\\\"></vdr-empty-placeholder>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"table-footer\\\">\\r\\n    <vdr-items-per-page-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        (itemsPerPageChange)=\\\"itemsPerPageChange.emit($event)\\\"\\r\\n    ></vdr-items-per-page-controls>\\r\\n    <div *ngIf=\\\"totalItems\\\" class=\\\"p5 total-items-count\\\">\\r\\n        {{ 'common.total-items' | translate : { currentStart, currentEnd, totalItems } }}\\r\\n    </div>\\r\\n\\r\\n    <vdr-pagination-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [id]=\\\"id\\\"\\r\\n        [currentPage]=\\\"currentPage\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChange)=\\\"pageChange.emit($event)\\\"\\r\\n    ></vdr-pagination-controls>\\r\\n</div>\\r\\n\\r\\n<ng-template #collectionRowTmp let-item=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n    <tr #collectionRow cdkDrag [cdkDragData]=\\\"{ depth: depth, collection: item }\\\" cdkDragBoundary=\\\"tbody\\\">\\r\\n        <td\\r\\n            *ngIf=\\\"selectionManager\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n            class=\\\"selection-col\\\"\\r\\n        >\\r\\n            <div class=\\\"flex\\\">\\r\\n                <div class=\\\"drag-handle\\\" cdkDragHandle [title]=\\\"'catalog.reorder-collection' | translate\\\">\\r\\n                    <clr-icon shape=\\\"drag-handle\\\"></clr-icon>\\r\\n                </div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager?.isSelected(item)\\\"\\r\\n                    (click)=\\\"onRowClick(item, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n        </td>\\r\\n        <td\\r\\n            *ngFor=\\\"let column of visibleSortedColumns\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n        >\\r\\n            <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                <ng-container\\r\\n                    *ngIf=\\\"customComponents.get(column.id) as componentConfig; else defaultComponent\\\"\\r\\n                >\\r\\n                    <ng-container\\r\\n                        *ngComponentOutlet=\\\"\\r\\n                            componentConfig.config.component;\\r\\n                            inputs: { rowItem: item };\\r\\n                            injector: componentConfig.injector\\r\\n                        \\\"\\r\\n                    ></ng-container>\\r\\n                </ng-container>\\r\\n                <ng-template #defaultComponent>\\r\\n                    <ng-container\\r\\n                        *ngTemplateOutlet=\\\"column.template; context: { item: item, depth: depth }\\\"\\r\\n                    ></ng-container>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"><!-- column select --></td>\\r\\n    </tr>\\r\\n    <ng-container *ngFor=\\\"let subCollection of getSubcollections(item)\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"collectionRowTmp; context: { item: subCollection, depth: depth + 1 }\\\"\\r\\n        ></ng-container>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;max-width:100%;position:relative;margin-bottom:calc(var(--space-unit) * 4);container-type:inline-size}th{border-bottom:1px solid var(--color-table-header-border);color:var(--color-weight-700);font-size:var(--font-size-xs);font-weight:600;text-transform:uppercase;position:relative;white-space:nowrap;background-color:transparent}th,td{padding:calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 1);color:var(--color-text-100)}tr td:first-of-type,tr th:first-of-type{text-align:center}@media screen and (min-width: 992px){tr td:first-of-type,tr th:first-of-type{padding-inline-start:var(--surface-margin-left);text-align:start}}th:last-of-type,td:last-of-type{border-inline-end:1px solid var(--color-table-header-border)}tr:first-of-type th:last-of-type{border-image:linear-gradient(0deg,var(--color-table-header-border),transparent) 1}tr:last-of-type td:last-of-type{border-image:linear-gradient(180deg,var(--color-table-header-border),transparent) 1}tbody td{border-bottom:1px solid var(--color-table-row-separator)}tbody tr:hover{background-color:var(--color-table-row-hover-bg)}.bulk-actions{margin-inline-start:calc(var(--space-unit) * 5);background-color:var(--color-surface-bg);z-index:10;display:flex;position:absolute;top:5px;height:40px}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 8.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 10.5)}}.table-wrapper{display:block;overflow-y:hidden;overflow-x:auto;position:relative;width:100%;max-width:var(--surface-width)}table{width:100%}table.no-select{-webkit-user-select:none;user-select:none}.column-picker{width:24px}.sort-toggle{display:flex;align-items:center;margin-inline-start:calc(var(--space-unit) * .5)}.sort-toggle button{border:0;border-radius:var(--border-radius-lg);color:var(--color-weight-500);padding:0 2px;cursor:pointer;background-color:transparent}.sort-toggle button.active{color:var(--color-primary-700)}.sort-toggle .sort-label{margin-inline-start:calc(var(--space-unit) * .5);font-size:10px;color:var(--color-primary-600);font-weight:400}.toggle-search-filter-row{position:absolute;top:-12px;left:4px}@media screen and (min-width: 1280px){.toggle-search-filter-row{left:8px}}.toggle-search-filter-row.active{background-color:var(--color-primary-700);color:var(--color-primary-100);border-color:var(--color-primary-700)}th.filter-row{position:relative;font-size:var(--font-size-base);font-weight:400;background-color:var(--color-weight-100);box-shadow:var(--data-table-filter-box-shadow);border-left-width:0;border-right-width:0;text-align:initial;padding:0}th.filter-row input{width:100%}th.filter-row.active{border-bottom:1px solid var(--color-table-header-border)}th.filter-row .filters{margin-top:calc(var(--space-unit) * 1);display:flex;flex-wrap:wrap;gap:calc(var(--space-unit) * .5)}.filter-row-wrapper{padding:calc(var(--space-unit) * 4);padding-inline-start:0;max-height:150px;transition:max-height .2s,padding .2s,opacity .2s}.filter-row-wrapper.hidden{max-height:0px;padding-top:0;padding-bottom:0;overflow:hidden;opacity:0}.cell-link{display:block;width:100%;height:100%}td.active{background-color:var(--color-table-row-active-bg)}.cell-content{display:flex;align-items:center;line-height:var(--font-size-sm);color:var(--color-weight-700)}.cell-content.left{justify-content:flex-start}.cell-content.center{justify-content:center}.cell-content.right{justify-content:flex-end}.selection-col{width:calc(var(--space-unit) * 8)}vdr-empty-placeholder{width:100%}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:var(--space-unit);margin-inline-start:var(--surface-margin-left);margin-inline-end:var(--space-unit)}.total-items-count{font-size:var(--font-size-xs)}@container (max-width: 500px){.total-items-count{display:none}}\\n\", \".bulk-actions{margin-inline-start:calc(var(--space-unit) * 6);background-color:var(--color-surface-bg)}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 9.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 11.5)}}.drag-handle{cursor:grab}.drag-handle-spacer{width:16px}.cdk-drop-list-dragging .cdk-drag{transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating{transition:transform .3s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{opacity:0}.cdk-drag-placeholder{background-color:var(--color-primary-100)!important}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }], propDecorators: { subCollections: [{\n                type: Input\n            }], changeOrder: [{\n                type: Output\n            }], dropList: [{\n                type: ViewChild,\n                args: [CdkDropList, { static: true }]\n            }], collectionRowList: [{\n                type: ViewChildren,\n                args: ['collectionRow', { read: CdkDrag }]\n            }] } });\n\nconst COLLECTION_DETAIL_QUERY = gql `\r\n    query CollectionDetailQuery($id: ID!) {\r\n        collection(id: $id) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\nclass CollectionDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService, modalService, localStorageService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.localStorageService = localStorageService;\n        this.customFields = this.getCustomFieldConfig('Collection');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9._-]+$/)],\n            description: '',\n            visible: false,\n            inheritFilters: true,\n            filters: this.formBuilder.array([]),\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.assetChanges = {};\n        this.filters = [];\n        this.allFilters = [];\n        this.livePreview = false;\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateCollection];\n        this.filterRemoved$ = new Subject();\n        this.livePreview = this.localStorageService.get('livePreviewCollectionContents') ?? false;\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.collection.getCollectionFilters().single$.subscribe(res => {\n            this.allFilters = res.collectionFilters;\n        });\n        const filtersFormArray = this.detailForm.get('filters');\n        const inheritFiltersControl = this.detailForm.get('inheritFilters');\n        this.inheritFilters$ = inheritFiltersControl.valueChanges.pipe(distinctUntilChanged());\n        this.updatedFilters$ = merge(filtersFormArray.statusChanges, this.filterRemoved$).pipe(debounceTime(200), filter(() => filtersFormArray.touched), map(() => this.mapOperationsToInputs(this.filters, filtersFormArray.value).filter(_filter => {\n            // ensure all the arguments have valid values. E.g. a newly-added\n            // filter will not yet have valid values\n            for (const arg of _filter.arguments) {\n                if (arg.value === '') {\n                    return false;\n                }\n            }\n            return true;\n        })));\n        this.parentId$ = this.route.paramMap.pipe(map(pm => pm.get('parentId') || undefined), switchMap(parentId => {\n            if (parentId) {\n                return of(parentId);\n            }\n            else {\n                return this.entity$.pipe(map(collection => collection.parent?.id));\n            }\n        }));\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    getFilterDefinition(_filter) {\n        return this.allFilters.find(f => f.code === _filter.code);\n    }\n    assetsChanged() {\n        return !!Object.values(this.assetChanges).length;\n    }\n    /**\n     * If creating a new Collection, automatically generate the slug based on the collection name.\n     */\n    updateSlug(nameValue) {\n        const slugControl = this.detailForm.get(['slug']);\n        const currentTranslation = this.entity ? findTranslation(this.entity, this.languageCode) : undefined;\n        const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\n        if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\n            slugControl.setValue(normalizeString(`${nameValue}`, '-'));\n        }\n    }\n    addFilter(collectionFilter) {\n        const filtersArray = this.detailForm.get('filters');\n        const argsHash = collectionFilter.args.reduce((output, arg) => ({\n            ...output,\n            [arg.name]: getConfigArgValue(arg.value),\n        }), {});\n        filtersArray.push(this.formBuilder.control({\n            code: collectionFilter.code,\n            args: argsHash,\n        }));\n        this.filters.push({\n            code: collectionFilter.code,\n            args: collectionFilter.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\n        });\n    }\n    removeFilter(index) {\n        const filtersArray = this.detailForm.get('filters');\n        if (index !== -1) {\n            filtersArray.removeAt(index);\n            filtersArray.markAsDirty();\n            filtersArray.markAsTouched();\n            this.filters.splice(index, 1);\n            this.filterRemoved$.next();\n        }\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const input = this.getUpdatedCollection({\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            languageCode: this.languageCode,\n            name: '',\n            slug: '',\n            isPrivate: false,\n            breadcrumbs: [],\n            description: '',\n            featuredAsset: null,\n            assets: [],\n            translations: [],\n            inheritFilters: true,\n            filters: [],\n            parent: {},\n            children: null,\n        }, this.detailForm, this.languageCode);\n        const parentId = this.route.snapshot.paramMap.get('parentId');\n        if (parentId) {\n            input.parentId = parentId;\n        }\n        this.dataService.collection.createCollection(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Collection',\n            });\n            this.assetChanges = {};\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createCollection.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Collection',\n            });\n        });\n    }\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([category, languageCode]) => {\n            const input = this.getUpdatedCollection(category, this.detailForm, languageCode);\n            return this.dataService.collection.updateCollection(input);\n        }))\n            .subscribe(() => {\n            this.assetChanges = {};\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Collection',\n            });\n            this.contentsComponent.refresh();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Collection',\n            });\n        });\n    }\n    canDeactivate() {\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\n    }\n    toggleLivePreview() {\n        this.livePreview = !this.livePreview;\n        this.localStorageService.set('livePreviewCollectionContents', this.livePreview);\n    }\n    trackByFn(index, item) {\n        return JSON.stringify(item);\n    }\n    /**\n     * Sets the values of the form on changes to the category or current language.\n     */\n    setFormValues(entity, languageCode) {\n        const currentTranslation = findTranslation(entity, languageCode);\n        this.detailForm.patchValue({\n            name: currentTranslation ? currentTranslation.name : '',\n            slug: currentTranslation ? currentTranslation.slug : '',\n            description: currentTranslation ? currentTranslation.description : '',\n            visible: !entity.isPrivate,\n            inheritFilters: entity.inheritFilters,\n        });\n        const formArray = this.detailForm.get('filters');\n        if (formArray.length !== entity.filters.length) {\n            formArray.clear();\n            this.filters = [];\n            entity.filters.forEach(f => this.addFilter(f));\n        }\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity, currentTranslation);\n        }\n    }\n    /**\n     * Given a category and the value of the form, this method creates an updated copy of the category which\n     * can then be persisted to the API.\n     */\n    getUpdatedCollection(category, form, languageCode) {\n        const updatedCategory = createUpdatedTranslatable({\n            translatable: category,\n            updatedFields: form.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: category.name || '',\n                slug: category.slug || '',\n                description: category.description || '',\n            },\n        });\n        return {\n            ...updatedCategory,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            isPrivate: !form.value.visible,\n            filters: this.mapOperationsToInputs(this.filters, this.detailForm.value.filters),\n        };\n    }\n    /**\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\n     */\n    mapOperationsToInputs(operations, formValueOperations) {\n        return operations.map((o, i) => ({\n            code: o.code,\n            arguments: Object.entries(formValueOperations[i].args).map(([name, value], j) => ({\n                name,\n                value: encodeConfigArgValue(value),\n            })),\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: i1.LocalStorageService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CollectionDetailComponent, selector: \"vdr-collection-detail\", viewQueries: [{ propertyName: \"contentsComponent\", first: true, predicate: [\"collectionContents\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"collection-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block *ngIf=\\\"entity$ | async as entity\\\"\\r\\n            ><nav role=\\\"navigation\\\">\\r\\n                <ul class=\\\"collection-breadcrumbs\\\">\\r\\n                    <li *ngFor=\\\"let breadcrumb of entity.breadcrumbs; let isFirst = first; let isLast = last\\\">\\r\\n                        <a [routerLink]=\\\"['/catalog/collections']\\\" *ngIf=\\\"isFirst\\\">{{\\r\\n                            'catalog.root-collection' | translate\\r\\n                        }}</a>\\r\\n                        <a\\r\\n                            [routerLink]=\\\"['/catalog/collections', breadcrumb.id]\\\"\\r\\n                            *ngIf=\\\"!isFirst && !isLast\\\"\\r\\n                            >{{ breadcrumb.name | translate }}</a\\r\\n                        >\\r\\n                        <ng-container *ngIf=\\\"isLast\\\">{{ breadcrumb.name | translate }}</ng-container>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nav>\\r\\n        </vdr-page-block>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: ('catalog.slug-pattern-error' | translate) }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Collection\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"collection-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermission\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.filters' | translate\\\">\\r\\n                <vdr-form-field [label]=\\\"'catalog.filter-inheritance' | translate\\\" for=\\\"inheritFilters\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"inheritFilters\\\"\\r\\n                            id=\\\"inheritFilters\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.inheritFilters; else noInherit\\\">{{\\r\\n                                'catalog.inherit-filters-from-parent' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #noInherit>{{\\r\\n                                'catalog.do-not-inherit-filters' | translate\\r\\n                            }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n                <div formArrayName=\\\"filters\\\">\\r\\n                    <ng-container *ngFor=\\\"let filter of filters; index as i; trackBy: trackByFn\\\">\\r\\n                        <vdr-configurable-input\\r\\n                            (remove)=\\\"removeFilter(i)\\\"\\r\\n                            [position]=\\\"i\\\"\\r\\n                            [operation]=\\\"filter\\\"\\r\\n                            [operationDefinition]=\\\"getFilterDefinition(filter)\\\"\\r\\n                            [formControlName]=\\\"i\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-configurable-input>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div *vdrIfPermissions=\\\"updatePermission\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            <span>{{ 'marketing.add-condition' | translate }}</span>\\r\\n                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let filter of allFilters\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"addFilter(filter)\\\"\\r\\n                            >\\r\\n                                {{ filter.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'common.contents' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-collection-contents\\r\\n                    [collectionId]=\\\"id\\\"\\r\\n                    [parentId]=\\\"parentId$ | async\\\"\\r\\n                    [updatedFilters]=\\\"updatedFilters$ | async\\\"\\r\\n                    [inheritFilters]=\\\"inheritFilters$ | async\\\"\\r\\n                    [previewUpdatedFilters]=\\\"livePreview\\\"\\r\\n                    #collectionContents\\r\\n                >\\r\\n                    <ng-template let-count>\\r\\n                        <div class=\\\"ml-3\\\">\\r\\n                            <div class=\\\"contents-title\\\">\\r\\n                                {{ 'catalog.collection-contents' | translate }} ({{\\r\\n                                    'common.results-count' | translate : { count: count }\\r\\n                                }})\\r\\n                            </div>\\r\\n                            <clr-checkbox-wrapper [class.disabled]=\\\"detailForm.get('filters')?.pristine\\\">\\r\\n                                <input\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    clrCheckbox\\r\\n                                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                                    [disabled]=\\\"detailForm.get('filters')?.pristine\\\"\\r\\n                                    [ngModel]=\\\"livePreview\\\"\\r\\n                                    (ngModelChange)=\\\"toggleLivePreview()\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.live-preview-contents' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-collection-contents>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";.visible-toggle{margin-top:-3px!important}clr-checkbox-wrapper{transition:opacity .3s}clr-checkbox-wrapper.disabled{opacity:.5}.collection-breadcrumbs{list-style-type:none;background-color:var(--color-component-bg-200);padding:2px 6px;margin-bottom:6px;border-radius:var(--clr-global-borderradius)}.collection-breadcrumbs li{font-size:.65rem;display:inline-block;margin-inline-end:10px}.collection-breadcrumbs li:last-child{font-weight:600}.collection-breadcrumbs li:not(:last-child):after{content:\\\"\\\\203a\\\";top:0;color:var(--color-grey-400);margin-inline-start:10px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\", \"hideDescription\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: [\"collectionId\", \"parentId\", \"inheritFilters\", \"updatedFilters\", \"previewUpdatedFilters\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"collection-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block *ngIf=\\\"entity$ | async as entity\\\"\\r\\n            ><nav role=\\\"navigation\\\">\\r\\n                <ul class=\\\"collection-breadcrumbs\\\">\\r\\n                    <li *ngFor=\\\"let breadcrumb of entity.breadcrumbs; let isFirst = first; let isLast = last\\\">\\r\\n                        <a [routerLink]=\\\"['/catalog/collections']\\\" *ngIf=\\\"isFirst\\\">{{\\r\\n                            'catalog.root-collection' | translate\\r\\n                        }}</a>\\r\\n                        <a\\r\\n                            [routerLink]=\\\"['/catalog/collections', breadcrumb.id]\\\"\\r\\n                            *ngIf=\\\"!isFirst && !isLast\\\"\\r\\n                            >{{ breadcrumb.name | translate }}</a\\r\\n                        >\\r\\n                        <ng-container *ngIf=\\\"isLast\\\">{{ breadcrumb.name | translate }}</ng-container>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nav>\\r\\n        </vdr-page-block>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: ('catalog.slug-pattern-error' | translate) }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Collection\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"collection-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermission\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.filters' | translate\\\">\\r\\n                <vdr-form-field [label]=\\\"'catalog.filter-inheritance' | translate\\\" for=\\\"inheritFilters\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"inheritFilters\\\"\\r\\n                            id=\\\"inheritFilters\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.inheritFilters; else noInherit\\\">{{\\r\\n                                'catalog.inherit-filters-from-parent' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #noInherit>{{\\r\\n                                'catalog.do-not-inherit-filters' | translate\\r\\n                            }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n                <div formArrayName=\\\"filters\\\">\\r\\n                    <ng-container *ngFor=\\\"let filter of filters; index as i; trackBy: trackByFn\\\">\\r\\n                        <vdr-configurable-input\\r\\n                            (remove)=\\\"removeFilter(i)\\\"\\r\\n                            [position]=\\\"i\\\"\\r\\n                            [operation]=\\\"filter\\\"\\r\\n                            [operationDefinition]=\\\"getFilterDefinition(filter)\\\"\\r\\n                            [formControlName]=\\\"i\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-configurable-input>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div *vdrIfPermissions=\\\"updatePermission\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            <span>{{ 'marketing.add-condition' | translate }}</span>\\r\\n                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let filter of allFilters\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"addFilter(filter)\\\"\\r\\n                            >\\r\\n                                {{ filter.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'common.contents' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-collection-contents\\r\\n                    [collectionId]=\\\"id\\\"\\r\\n                    [parentId]=\\\"parentId$ | async\\\"\\r\\n                    [updatedFilters]=\\\"updatedFilters$ | async\\\"\\r\\n                    [inheritFilters]=\\\"inheritFilters$ | async\\\"\\r\\n                    [previewUpdatedFilters]=\\\"livePreview\\\"\\r\\n                    #collectionContents\\r\\n                >\\r\\n                    <ng-template let-count>\\r\\n                        <div class=\\\"ml-3\\\">\\r\\n                            <div class=\\\"contents-title\\\">\\r\\n                                {{ 'catalog.collection-contents' | translate }} ({{\\r\\n                                    'common.results-count' | translate : { count: count }\\r\\n                                }})\\r\\n                            </div>\\r\\n                            <clr-checkbox-wrapper [class.disabled]=\\\"detailForm.get('filters')?.pristine\\\">\\r\\n                                <input\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    clrCheckbox\\r\\n                                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                                    [disabled]=\\\"detailForm.get('filters')?.pristine\\\"\\r\\n                                    [ngModel]=\\\"livePreview\\\"\\r\\n                                    (ngModelChange)=\\\"toggleLivePreview()\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.live-preview-contents' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-collection-contents>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";.visible-toggle{margin-top:-3px!important}clr-checkbox-wrapper{transition:opacity .3s}clr-checkbox-wrapper.disabled{opacity:.5}.collection-breadcrumbs{list-style-type:none;background-color:var(--color-component-bg-200);padding:2px 6px;margin-bottom:6px;border-radius:var(--clr-global-borderradius)}.collection-breadcrumbs li{font-size:.65rem;display:inline-block;margin-inline-end:10px}.collection-breadcrumbs li:last-child{font-weight:600}.collection-breadcrumbs li:not(:last-child):after{content:\\\"\\\\203a\\\";top:0;color:var(--color-grey-400);margin-inline-start:10px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: i1.LocalStorageService }], propDecorators: { contentsComponent: [{\n                type: ViewChild,\n                args: ['collectionContents']\n            }] } });\n\n/**\n * Removes the root collection and self breadcrumb from the collection breadcrumb list.\n */\nclass CollectionBreadcrumbPipe {\n    transform(value) {\n        return value?.breadcrumbs.slice(1, -1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionBreadcrumbPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionBreadcrumbPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'collectionBreadcrumb',\n                }]\n        }] });\n\nclass MoveCollectionsDialogComponent {\n    constructor(dataService, i18nService) {\n        this.dataService = dataService;\n        this.i18nService = i18nService;\n        this.searchTermControl = new FormControl('');\n        this.currentPage$ = new BehaviorSubject(1);\n        this.itemsPerPage$ = new BehaviorSubject(10);\n        this.expandedIds$ = new Subject();\n        this.expandedIds = [];\n    }\n    ngOnInit() {\n        const getCollectionsResult = this.dataService.collection.getCollections();\n        const searchTerm$ = this.searchTermControl.valueChanges.pipe(debounceTime(250), distinctUntilChanged(), startWith(''));\n        const currentPage$ = this.currentPage$.pipe(distinctUntilChanged());\n        const itemsPerPage$ = this.itemsPerPage$.pipe(distinctUntilChanged());\n        combineLatest(searchTerm$, currentPage$, itemsPerPage$).subscribe(([searchTerm, currentPage, itemsPerPage]) => {\n            const topLevelOnly = searchTerm === '';\n            getCollectionsResult.ref.refetch({\n                options: {\n                    skip: (currentPage - 1) * itemsPerPage,\n                    take: itemsPerPage,\n                    filter: {\n                        name: { contains: searchTerm },\n                    },\n                    topLevelOnly,\n                },\n            });\n        });\n        const rootCollectionId$ = this.dataService.collection\n            .getCollections({\n            take: 1,\n            topLevelOnly: true,\n        })\n            .mapSingle(data => data.collections.items[0].parentId);\n        this.items$ = combineLatest(getCollectionsResult.mapStream(({ collections }) => collections), rootCollectionId$).pipe(map(([collections, rootCollectionId]) => [\n            ...(rootCollectionId\n                ? [\n                    {\n                        id: rootCollectionId,\n                        name: this.i18nService.translate('catalog.root-collection'),\n                        slug: '',\n                        parentId: '__',\n                        position: 0,\n                        featuredAsset: null,\n                        children: [],\n                        breadcrumbs: [],\n                        isPrivate: false,\n                        createdAt: '',\n                        updatedAt: '',\n                    },\n                ]\n                : []),\n            ...collections.items,\n        ]));\n        this.totalItems$ = getCollectionsResult.mapStream(data => data.collections.totalItems);\n        this.subCollections$ = this.expandedIds$.pipe(tap(val => (this.expandedIds = val)), switchMap(ids => {\n            if (ids.length) {\n                return this.dataService.collection\n                    .getCollections({\n                    take: 999,\n                    filter: {\n                        parentId: { in: ids },\n                    },\n                })\n                    .mapStream(data => data.collections.items);\n            }\n            else {\n                return of([]);\n            }\n        }));\n    }\n    toggleExpanded(collection) {\n        let expandedIds = this.expandedIds;\n        if (!expandedIds.includes(collection.id)) {\n            expandedIds.push(collection.id);\n        }\n        else {\n            expandedIds = expandedIds.filter(id => id !== collection.id);\n        }\n        this.expandedIds$.next(expandedIds);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: MoveCollectionsDialogComponent, deps: [{ token: i1.DataService }, { token: i1.I18nService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: MoveCollectionsDialogComponent, selector: \"vdr-move-collections-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.move-collections' | translate }}\\r\\n</ng-template>\\r\\n<vdr-collection-data-table\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"move-collection-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [subCollections]=\\\"subCollections$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    (pageChange)=\\\"currentPage$.next($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage$.next($event)\\\"\\r\\n>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n            <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n            <clr-icon\\r\\n                class=\\\"child-arrow\\\"\\r\\n                [class.transparent]=\\\"depth === 0\\\"\\r\\n                shape=\\\"child-arrow\\\"\\r\\n                *ngIf=\\\"!collection.children?.length && collection.parentId !== '__'\\\"\\r\\n            ></clr-icon>\\r\\n            <button\\r\\n                class=\\\"icon-button folder-button\\\"\\r\\n                *ngIf=\\\"collection.children?.length\\\"\\r\\n                (click)=\\\"toggleExpanded(collection)\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"icon-button folder-button\\\" *ngIf=\\\"collection.parentId === '__'\\\" disabled>\\r\\n                <clr-icon shape=\\\"folder\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"button-ghost\\\" (click)=\\\"resolveWith(collection)\\\">\\r\\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            <div class=\\\"breadcrumb\\\">\\r\\n                <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                    <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                        <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                            <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-collection-data-table>\\r\\n\", styles: [\"\", \":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: [\"subCollections\"], outputs: [\"changeOrder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: MoveCollectionsDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-move-collections-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.move-collections' | translate }}\\r\\n</ng-template>\\r\\n<vdr-collection-data-table\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"move-collection-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [subCollections]=\\\"subCollections$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    (pageChange)=\\\"currentPage$.next($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage$.next($event)\\\"\\r\\n>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n            <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n            <clr-icon\\r\\n                class=\\\"child-arrow\\\"\\r\\n                [class.transparent]=\\\"depth === 0\\\"\\r\\n                shape=\\\"child-arrow\\\"\\r\\n                *ngIf=\\\"!collection.children?.length && collection.parentId !== '__'\\\"\\r\\n            ></clr-icon>\\r\\n            <button\\r\\n                class=\\\"icon-button folder-button\\\"\\r\\n                *ngIf=\\\"collection.children?.length\\\"\\r\\n                (click)=\\\"toggleExpanded(collection)\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"icon-button folder-button\\\" *ngIf=\\\"collection.parentId === '__'\\\" disabled>\\r\\n                <clr-icon shape=\\\"folder\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"button-ghost\\\" (click)=\\\"resolveWith(collection)\\\">\\r\\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            <div class=\\\"breadcrumb\\\">\\r\\n                <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                    <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                        <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                            <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-collection-data-table>\\r\\n\", styles: [\":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.I18nService }] });\n\nconst deleteCollectionsBulkAction = createBulkDeleteAction({\n    location: 'collection-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCollection) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.collection.deleteCollections(ids).pipe(map(res => res.deleteCollections)),\n});\nconst moveCollectionsBulkAction = {\n    location: 'collection-list',\n    label: marker('catalog.move-collections'),\n    icon: 'drag-handle',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateCollection),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        modalService\n            .fromComponent(MoveCollectionsDialogComponent, {\n            size: 'xl',\n            closable: true,\n        })\n            .pipe(switchMap(result => {\n            if (result) {\n                const inputs = selection.map(c => ({\n                    collectionId: c.id,\n                    parentId: result.id,\n                    index: 0,\n                }));\n                return dataService.collection.moveCollection(inputs);\n            }\n            else {\n                return EMPTY;\n            }\n        }))\n            .subscribe(result => {\n            notificationService.success(marker('catalog.move-collections-success'), {\n                count: selection.length,\n            });\n            clearSelection();\n            hostComponent.refresh();\n        });\n    },\n};\nconst assignCollectionsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'collection-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateCollection),\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, collectionIds, channelIds) => channelIds.map(channelId => dataService.collection\n        .assignCollectionsToChannel({\n        collectionIds,\n        channelId,\n    })\n        .pipe(map(res => res.assignCollectionsToChannel))),\n});\nconst removeCollectionsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'collection-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\n        userPermissions.includes(Permission.DeleteCollection),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, collectionIds, channelId) => dataService.collection\n        .removeCollectionsFromChannel({\n        channelId: channelId,\n        collectionIds,\n    })\n        .pipe(map(res => res.removeCollectionsFromChannel)),\n});\nconst duplicateCollectionsBulkAction = {\n    location: 'collection-list',\n    label: marker('common.duplicate'),\n    icon: 'copy',\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent((DuplicateEntityDialogComponent), {\n            locals: {\n                entities: selection,\n                entityName: 'Collection',\n                title: marker('catalog.duplicate-collections'),\n                getEntityName: entity => entity.name,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n                hostComponent.refresh();\n            }\n        });\n    },\n};\n\nclass CollectionListComponent extends TypedBaseListComponent {\n    constructor(dataService, notificationService) {\n        super();\n        this.dataService = dataService;\n        this.notificationService = notificationService;\n        this.expandedIds = [];\n        this.dataTableListId = 'collection-list';\n        this.customFields = this.getCustomFieldConfig('Collection');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'slug',\n            label: marker('common.slug'),\n            type: { kind: 'text' },\n            filterField: 'slug',\n        })\n            .addFilter({\n            name: 'visibility',\n            type: { kind: 'boolean' },\n            label: marker('common.visibility'),\n            toFilterInput: value => ({\n                isPrivate: { eq: !value },\n            }),\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('position', 'ASC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'slug' })\n            .addSort({ name: 'position' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetCollectionListDocument,\n            getItems: data => data.collections,\n            setVariables: (skip, _take) => {\n                const topLevelOnly = this.searchTermControl.value === '' && this.filters.activeFilters.length === 0\n                    ? true\n                    : undefined;\n                return {\n                    options: {\n                        skip,\n                        take: _take,\n                        filter: {\n                            name: { contains: this.searchTermControl.value },\n                            ...this.filters.createFilterInput(),\n                        },\n                        topLevelOnly,\n                        sort: this.sorts.createSortInput(),\n                    },\n                };\n            },\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.activeCollectionId$ = this.route.paramMap.pipe(map(pm => pm.get('contents')), distinctUntilChanged());\n        const expandedIds$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('expanded')), distinctUntilChanged(), map(ids => (ids ? ids.split(',') : [])));\n        expandedIds$.pipe(takeUntil(this.destroy$)).subscribe(ids => {\n            this.expandedIds = ids;\n        });\n        this.subCollections$ = combineLatest(expandedIds$, this.refresh$).pipe(switchMap(([ids]) => {\n            if (ids.length) {\n                return this.dataService.collection\n                    .getCollections({\n                    take: 999,\n                    filter: {\n                        parentId: { in: ids },\n                    },\n                })\n                    .mapStream(data => data.collections.items);\n            }\n            else {\n                return of([]);\n            }\n        }));\n        this.activeCollectionTitle$ = combineLatest(this.activeCollectionId$, this.items$, this.subCollections$).pipe(map(([id, collections, subCollections]) => {\n            if (id) {\n                const match = [...collections, ...subCollections].find(c => c.id === id);\n                return match ? match.name : '';\n            }\n            return '';\n        }));\n        this.activeCollectionIndex$ = combineLatest(this.activeCollectionId$, this.items$, this.subCollections$).pipe(map(([id, collections, subCollections]) => {\n            if (id) {\n                const allCollections = [];\n                for (const collection of collections) {\n                    allCollections.push(collection);\n                    const subCollectionMatches = subCollections.filter(c => c.parentId && c.parentId === collection.id);\n                    allCollections.push(...subCollectionMatches);\n                }\n                return allCollections.findIndex(c => c.id === id);\n            }\n            return -1;\n        }));\n    }\n    onRearrange(event) {\n        this.dataService.collection.moveCollection([event]).subscribe({\n            next: () => {\n                this.notificationService.success(marker('common.notify-saved-changes'));\n                this.refresh();\n            },\n            error: err => {\n                this.notificationService.error(marker('common.notify-save-changes-error'));\n            },\n        });\n    }\n    closeContents() {\n        const params = { ...this.route.snapshot.params };\n        delete params.contents;\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\n    }\n    setLanguage(code) {\n        this.dataService.client.setContentLanguage(code).subscribe();\n    }\n    toggleExpanded(collection) {\n        let expandedIds = this.expandedIds;\n        if (!expandedIds.includes(collection.id)) {\n            expandedIds.push(collection.id);\n        }\n        else {\n            expandedIds = expandedIds.filter(id => id !== collection.id);\n        }\n        this.router.navigate(['./'], {\n            queryParams: {\n                expanded: expandedIds.filter(id => !!id).join(','),\n            },\n            queryParamsHandling: 'merge',\n            relativeTo: this.route,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionListComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CollectionListComponent, selector: \"vdr-collection-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-collection' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"collection-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeCollectionId$ | async\\\" (closeClicked)=\\\"closeContents()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-collection-data-table\\r\\n            class=\\\"mt-2\\\"\\r\\n            [id]=\\\"dataTableListId\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [subCollections]=\\\"subCollections$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeCollectionIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (changeOrder)=\\\"onRearrange($event)\\\"\\r\\n            (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"collection-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.position' | translate\\\" id=\\\"position\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('position')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.position }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n                    <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n                    <clr-icon\\r\\n                        class=\\\"child-arrow\\\"\\r\\n                        [class.transparent]=\\\"depth === 0\\\"\\r\\n                        shape=\\\"child-arrow\\\"\\r\\n                        *ngIf=\\\"!collection.children?.length\\\"\\r\\n                    ></clr-icon>\\r\\n                    <button\\r\\n                        class=\\\"icon-button folder-button\\\"\\r\\n                        *ngIf=\\\"collection.children?.length\\\"\\r\\n                        (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                        <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', collection.id]\\\"\\r\\n                        ><span>{{ collection.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <div class=\\\"breadcrumb\\\">\\r\\n                        <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                            <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                                <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                                    <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.slug }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <vdr-chip *ngIf=\\\"collection.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                        'common.private' | translate\\r\\n                        }}</vdr-chip>\\r\\n                    <vdr-chip *ngIf=\\\"!collection.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                        'common.public' | translate\\r\\n                        }}</vdr-chip>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                        [queryParams]=\\\"{ contentsPage: 1 }\\\"\\r\\n                        queryParamsHandling=\\\"merge\\\"\\r\\n                    >\\r\\n                        <span>{{ 'common.view-contents' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sorts]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-collection-data-table>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"activeCollectionTitle$ | async\\\">\\r\\n        <ng-container *ngIf=\\\"activeCollectionId$ | async as activeGroup\\\">\\r\\n            <vdr-collection-contents [collectionId]=\\\"activeCollectionId$ | async\\\"></vdr-collection-contents>\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\"\", \":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.SplitViewComponent, selector: \"vdr-split-view\", inputs: [\"rightPanelOpen\"], outputs: [\"closeClicked\"] }, { kind: \"directive\", type: i1.SplitViewLeftDirective, selector: \"[vdrSplitViewLeft]\" }, { kind: \"directive\", type: i1.SplitViewRightDirective, selector: \"[vdrSplitViewRight]\", inputs: [\"splitViewTitle\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: [\"collectionId\", \"parentId\", \"inheritFilters\", \"updatedFilters\", \"previewUpdatedFilters\"] }, { kind: \"component\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: [\"subCollections\"], outputs: [\"changeOrder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-collection' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"collection-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeCollectionId$ | async\\\" (closeClicked)=\\\"closeContents()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-collection-data-table\\r\\n            class=\\\"mt-2\\\"\\r\\n            [id]=\\\"dataTableListId\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [subCollections]=\\\"subCollections$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeCollectionIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (changeOrder)=\\\"onRearrange($event)\\\"\\r\\n            (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"collection-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.position' | translate\\\" id=\\\"position\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('position')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.position }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n                    <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n                    <clr-icon\\r\\n                        class=\\\"child-arrow\\\"\\r\\n                        [class.transparent]=\\\"depth === 0\\\"\\r\\n                        shape=\\\"child-arrow\\\"\\r\\n                        *ngIf=\\\"!collection.children?.length\\\"\\r\\n                    ></clr-icon>\\r\\n                    <button\\r\\n                        class=\\\"icon-button folder-button\\\"\\r\\n                        *ngIf=\\\"collection.children?.length\\\"\\r\\n                        (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                        <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', collection.id]\\\"\\r\\n                        ><span>{{ collection.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <div class=\\\"breadcrumb\\\">\\r\\n                        <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                            <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                                <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                                    <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.slug }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <vdr-chip *ngIf=\\\"collection.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                        'common.private' | translate\\r\\n                        }}</vdr-chip>\\r\\n                    <vdr-chip *ngIf=\\\"!collection.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                        'common.public' | translate\\r\\n                        }}</vdr-chip>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                        [queryParams]=\\\"{ contentsPage: 1 }\\\"\\r\\n                        queryParamsHandling=\\\"merge\\\"\\r\\n                    >\\r\\n                        <span>{{ 'common.view-contents' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sorts]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-collection-data-table>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"activeCollectionTitle$ | async\\\">\\r\\n        <ng-container *ngIf=\\\"activeCollectionId$ | async as activeGroup\\\">\\r\\n            <vdr-collection-contents [collectionId]=\\\"activeCollectionId$ | async\\\"></vdr-collection-contents>\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.NotificationService }] });\n\n/**\n * Facilitates communication between the CollectionTreeComponent and child CollectionTreeNodeComponents\n * without introducing a cyclic dependency.\n */\nclass CollectionTreeService {\n    constructor() {\n        this.allMoveListItems = [];\n        this._rearrange$ = new Subject();\n        this._delete$ = new Subject();\n        this.rearrange$ = this._rearrange$.asObservable();\n        this.delete$ = this._delete$.asObservable();\n    }\n    ngOnDestroy() {\n        this._rearrange$.complete();\n        this._delete$.complete();\n    }\n    setCollectionTree(tree) {\n        this.collectionTree = tree;\n    }\n    resetMoveList() {\n        this.allMoveListItems = [];\n    }\n    getMoveListItems(collection) {\n        if (this.allMoveListItems.length === 0) {\n            this.allMoveListItems = this.calculateAllMoveListItems();\n        }\n        return this.allMoveListItems.filter(item => item.id !== collection.id &&\n            !item.ancestorIdPath.has(collection.id) &&\n            item.id !== collection.parent?.id);\n    }\n    onDrop(event) {\n        const item = event.item.data;\n        const newParent = event.container.data;\n        const newParentId = newParent.id;\n        if (newParentId == null) {\n            throw new Error(`Could not determine the ID of the root Collection`);\n        }\n        this._rearrange$.next({\n            collectionId: item.id,\n            parentId: newParentId,\n            index: event.currentIndex,\n        });\n    }\n    onMove(event) {\n        this._rearrange$.next(event);\n    }\n    onDelete(id) {\n        this._delete$.next(id);\n    }\n    calculateAllMoveListItems() {\n        const visit = (node, parentPath, ancestorIdPath, output) => {\n            const path = parentPath.concat(node.name);\n            output.push({ path: path.slice(1).join(' / ') || 'root', id: node.id, ancestorIdPath });\n            node.children.forEach(child => visit(child, path, new Set([...ancestorIdPath, node.id]), output));\n            return output;\n        };\n        return visit(this.collectionTree, [], new Set(), []);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionTreeService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionTreeService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionTreeService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\n\nclass CollectionTreeNodeComponent {\n    constructor(parent, dataService, collectionTreeService, router, route, changeDetectorRef) {\n        this.parent = parent;\n        this.dataService = dataService;\n        this.collectionTreeService = collectionTreeService;\n        this.router = router;\n        this.route = route;\n        this.changeDetectorRef = changeDetectorRef;\n        this.depth = 0;\n        this.expandAll = false;\n        this.moveListItems = [];\n        if (parent) {\n            this.depth = parent.depth + 1;\n        }\n    }\n    ngOnInit() {\n        this.parentName = this.collectionTree.name || '<root>';\n        const permissions$ = this.dataService.client\n            .userStatus()\n            .mapStream(data => data.userStatus.permissions)\n            .pipe(shareReplay(1));\n        this.hasUpdatePermission$ = permissions$.pipe(map(perms => perms.includes(Permission.UpdateCatalog) || perms.includes(Permission.UpdateCollection)));\n        this.hasDeletePermission$ = permissions$.pipe(map(perms => perms.includes(Permission.DeleteCatalog) || perms.includes(Permission.DeleteCollection)));\n        this.subscription = this.selectionManager?.selectionChanges$.subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n    ngOnChanges(changes) {\n        const expandAllChange = changes['expandAll'];\n        if (expandAllChange) {\n            if (expandAllChange.previousValue === true && expandAllChange.currentValue === false) {\n                this.collectionTree.children.forEach(c => (c.expanded = false));\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.subscription?.unsubscribe();\n    }\n    trackByFn(index, item) {\n        return item.id;\n    }\n    toggleExpanded(collection) {\n        collection.expanded = !collection.expanded;\n        let expandedIds = this.route.snapshot.queryParamMap.get('expanded')?.split(',') ?? [];\n        if (collection.expanded) {\n            expandedIds.push(collection.id);\n        }\n        else {\n            expandedIds = expandedIds.filter(id => id !== collection.id);\n        }\n        this.router.navigate(['./'], {\n            queryParams: {\n                expanded: expandedIds.filter(id => !!id).join(','),\n            },\n            queryParamsHandling: 'merge',\n            relativeTo: this.route,\n        });\n    }\n    getMoveListItems(collection) {\n        this.moveListItems = this.collectionTreeService.getMoveListItems(collection);\n    }\n    move(collection, parentId) {\n        this.collectionTreeService.onMove({\n            index: 0,\n            parentId,\n            collectionId: collection.id,\n        });\n    }\n    moveUp(collection, currentIndex) {\n        if (!collection.parent) {\n            return;\n        }\n        this.collectionTreeService.onMove({\n            index: currentIndex - 1,\n            parentId: collection.parent.id,\n            collectionId: collection.id,\n        });\n    }\n    moveDown(collection, currentIndex) {\n        if (!collection.parent) {\n            return;\n        }\n        this.collectionTreeService.onMove({\n            index: currentIndex + 1,\n            parentId: collection.parent.id,\n            collectionId: collection.id,\n        });\n    }\n    drop(event) {\n        moveItemInArray(this.collectionTree.children, event.previousIndex, event.currentIndex);\n        this.collectionTreeService.onDrop(event);\n    }\n    delete(id) {\n        this.collectionTreeService.onDelete(id);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionTreeNodeComponent, deps: [{ token: CollectionTreeNodeComponent, optional: true, skipSelf: true }, { token: i1.DataService }, { token: CollectionTreeService }, { token: i1$1.Router }, { token: i1$1.ActivatedRoute }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: { collectionTree: \"collectionTree\", activeCollectionId: \"activeCollectionId\", expandAll: \"expandAll\", selectionManager: \"selectionManager\" }, usesOnChanges: true, ngImport: i0, template: \"<div\\r\\n    cdkDropList\\r\\n    class=\\\"tree-node\\\"\\r\\n    #dropList\\r\\n    [cdkDropListData]=\\\"collectionTree\\\"\\r\\n    [cdkDropListDisabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n    (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        class=\\\"collection\\\"\\r\\n        [class.private]=\\\"collection.isPrivate\\\"\\r\\n        *ngFor=\\\"let collection of collectionTree.children; index as i; trackBy: trackByFn\\\"\\r\\n        cdkDrag\\r\\n        [cdkDragData]=\\\"collection\\\"\\r\\n    >\\r\\n        <div\\r\\n            class=\\\"collection-detail\\\"\\r\\n            [ngClass]=\\\"'depth-' + depth\\\"\\r\\n            [class.active]=\\\"collection.id === activeCollectionId\\\"\\r\\n        >\\r\\n            <div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager.isSelected(collection)\\\"\\r\\n                    (click)=\\\"selectionManager.toggleSelection(collection, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n            <div class=\\\"name\\\">\\r\\n                <button\\r\\n                    class=\\\"icon-button folder-button\\\"\\r\\n                    [disabled]=\\\"expandAll\\\"\\r\\n                    *ngIf=\\\"collection.children?.length; else folderSpacer\\\"\\r\\n                    (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!collection.expanded && !expandAll\\\"></clr-icon>\\r\\n                    <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"collection.expanded || expandAll\\\"></clr-icon>\\r\\n                </button>\\r\\n                <ng-template #folderSpacer>\\r\\n                    <div class=\\\"folder-button-spacer\\\"></div>\\r\\n                </ng-template>\\r\\n                {{ collection.name }}\\r\\n            </div>\\r\\n            <div class=\\\"flex-spacer\\\"></div>\\r\\n            <vdr-chip *ngIf=\\\"collection.isPrivate\\\">{{ 'catalog.private' | translate }}</vdr-chip>\\r\\n            <a\\r\\n                class=\\\"btn btn-link btn-sm\\\"\\r\\n                [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                queryParamsHandling=\\\"preserve\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"view-list\\\"></clr-icon>\\r\\n                {{ 'catalog.view-contents' | translate }}\\r\\n            </a>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" [routerLink]=\\\"['/catalog/collections/', collection.id]\\\">\\r\\n                <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                {{ 'common.edit' | translate }}\\r\\n            </a>\\r\\n            <div class=\\\"drag-handle\\\" cdkDragHandle *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateCollection']\\\">\\r\\n                <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n            </div>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger (click)=\\\"getMoveListItems(collection)\\\">\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <a\\r\\n                        class=\\\"dropdown-item\\\"\\r\\n                        [routerLink]=\\\"['./', 'create', { parentId: collection.id }]\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.create-new-collection' | translate }}\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"i === 0 || !(hasUpdatePermission$ | async)\\\"\\r\\n                        (click)=\\\"moveUp(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret up\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-up' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"\\r\\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\\r\\n                        \\\"\\r\\n                        (click)=\\\"moveDown(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-down' | translate }}\\r\\n                    </button>\\r\\n                    <h4 class=\\\"dropdown-header\\\">{{ 'catalog.move-to' | translate }}</h4>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        *ngFor=\\\"let item of moveListItems\\\"\\r\\n                        (click)=\\\"move(collection, item.id)\\\"\\r\\n                        [disabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <div class=\\\"move-to-item\\\">\\r\\n                            <div class=\\\"move-icon\\\">\\r\\n                                <clr-icon shape=\\\"child-arrow\\\"></clr-icon>\\r\\n                            </div>\\r\\n                            <div class=\\\"path\\\">\\r\\n                                {{ item.path }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        class=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"delete(collection.id)\\\"\\r\\n                        [disabled]=\\\"!(hasDeletePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                        {{ 'common.delete' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n        <vdr-collection-tree-node\\r\\n            *ngIf=\\\"collection.expanded || expandAll\\\"\\r\\n            [expandAll]=\\\"expandAll\\\"\\r\\n            [collectionTree]=\\\"collection\\\"\\r\\n            [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n            [selectionManager]=\\\"selectionManager\\\"\\r\\n        ></vdr-collection-tree-node>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.collection{background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);font-size:.65rem;transition:transform .25s cubic-bezier(0,0,.2,1);margin-bottom:2px;border-inline-start:2px solid transparent;transition:border-left-color .2s}.collection.private{background-color:var(--color-component-bg-200)}.collection .collection-detail{padding:6px 12px;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-component-border-100)}.collection .collection-detail.active{background-color:var(--clr-global-selection-color)}.collection .collection-detail.depth-1{padding-inline-start:36px}.collection .collection-detail.depth-2{padding-inline-start:60px}.collection .collection-detail.depth-3{padding-inline-start:84px}.collection .collection-detail.depth-4{padding-inline-start:108px}.collection .collection-detail .folder-button-spacer{display:inline-block;width:28px}.tree-node{display:block;background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);overflow:hidden}.tree-node.cdk-drop-list-dragging>.collection{border-left-color:var(--color-primary-300)}.drag-placeholder{min-height:120px;background-color:var(--color-component-bg-300);transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-list.cdk-drop-list-dragging .tree-node:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.move-to-item{display:flex;white-space:normal;align-items:baseline}.move-to-item .move-icon{flex:none;margin-inline-end:3px}.move-to-item .path{line-height:18px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i4.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i4.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"directive\", type: i4.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: [\"collectionTree\", \"activeCollectionId\", \"expandAll\", \"selectionManager\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionTreeNodeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-tree-node', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\r\\n    cdkDropList\\r\\n    class=\\\"tree-node\\\"\\r\\n    #dropList\\r\\n    [cdkDropListData]=\\\"collectionTree\\\"\\r\\n    [cdkDropListDisabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n    (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        class=\\\"collection\\\"\\r\\n        [class.private]=\\\"collection.isPrivate\\\"\\r\\n        *ngFor=\\\"let collection of collectionTree.children; index as i; trackBy: trackByFn\\\"\\r\\n        cdkDrag\\r\\n        [cdkDragData]=\\\"collection\\\"\\r\\n    >\\r\\n        <div\\r\\n            class=\\\"collection-detail\\\"\\r\\n            [ngClass]=\\\"'depth-' + depth\\\"\\r\\n            [class.active]=\\\"collection.id === activeCollectionId\\\"\\r\\n        >\\r\\n            <div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager.isSelected(collection)\\\"\\r\\n                    (click)=\\\"selectionManager.toggleSelection(collection, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n            <div class=\\\"name\\\">\\r\\n                <button\\r\\n                    class=\\\"icon-button folder-button\\\"\\r\\n                    [disabled]=\\\"expandAll\\\"\\r\\n                    *ngIf=\\\"collection.children?.length; else folderSpacer\\\"\\r\\n                    (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!collection.expanded && !expandAll\\\"></clr-icon>\\r\\n                    <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"collection.expanded || expandAll\\\"></clr-icon>\\r\\n                </button>\\r\\n                <ng-template #folderSpacer>\\r\\n                    <div class=\\\"folder-button-spacer\\\"></div>\\r\\n                </ng-template>\\r\\n                {{ collection.name }}\\r\\n            </div>\\r\\n            <div class=\\\"flex-spacer\\\"></div>\\r\\n            <vdr-chip *ngIf=\\\"collection.isPrivate\\\">{{ 'catalog.private' | translate }}</vdr-chip>\\r\\n            <a\\r\\n                class=\\\"btn btn-link btn-sm\\\"\\r\\n                [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                queryParamsHandling=\\\"preserve\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"view-list\\\"></clr-icon>\\r\\n                {{ 'catalog.view-contents' | translate }}\\r\\n            </a>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" [routerLink]=\\\"['/catalog/collections/', collection.id]\\\">\\r\\n                <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                {{ 'common.edit' | translate }}\\r\\n            </a>\\r\\n            <div class=\\\"drag-handle\\\" cdkDragHandle *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateCollection']\\\">\\r\\n                <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n            </div>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger (click)=\\\"getMoveListItems(collection)\\\">\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <a\\r\\n                        class=\\\"dropdown-item\\\"\\r\\n                        [routerLink]=\\\"['./', 'create', { parentId: collection.id }]\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.create-new-collection' | translate }}\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"i === 0 || !(hasUpdatePermission$ | async)\\\"\\r\\n                        (click)=\\\"moveUp(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret up\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-up' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"\\r\\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\\r\\n                        \\\"\\r\\n                        (click)=\\\"moveDown(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-down' | translate }}\\r\\n                    </button>\\r\\n                    <h4 class=\\\"dropdown-header\\\">{{ 'catalog.move-to' | translate }}</h4>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        *ngFor=\\\"let item of moveListItems\\\"\\r\\n                        (click)=\\\"move(collection, item.id)\\\"\\r\\n                        [disabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <div class=\\\"move-to-item\\\">\\r\\n                            <div class=\\\"move-icon\\\">\\r\\n                                <clr-icon shape=\\\"child-arrow\\\"></clr-icon>\\r\\n                            </div>\\r\\n                            <div class=\\\"path\\\">\\r\\n                                {{ item.path }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        class=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"delete(collection.id)\\\"\\r\\n                        [disabled]=\\\"!(hasDeletePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                        {{ 'common.delete' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n        <vdr-collection-tree-node\\r\\n            *ngIf=\\\"collection.expanded || expandAll\\\"\\r\\n            [expandAll]=\\\"expandAll\\\"\\r\\n            [collectionTree]=\\\"collection\\\"\\r\\n            [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n            [selectionManager]=\\\"selectionManager\\\"\\r\\n        ></vdr-collection-tree-node>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.collection{background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);font-size:.65rem;transition:transform .25s cubic-bezier(0,0,.2,1);margin-bottom:2px;border-inline-start:2px solid transparent;transition:border-left-color .2s}.collection.private{background-color:var(--color-component-bg-200)}.collection .collection-detail{padding:6px 12px;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-component-border-100)}.collection .collection-detail.active{background-color:var(--clr-global-selection-color)}.collection .collection-detail.depth-1{padding-inline-start:36px}.collection .collection-detail.depth-2{padding-inline-start:60px}.collection .collection-detail.depth-3{padding-inline-start:84px}.collection .collection-detail.depth-4{padding-inline-start:108px}.collection .collection-detail .folder-button-spacer{display:inline-block;width:28px}.tree-node{display:block;background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);overflow:hidden}.tree-node.cdk-drop-list-dragging>.collection{border-left-color:var(--color-primary-300)}.drag-placeholder{min-height:120px;background-color:var(--color-component-bg-300);transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-list.cdk-drop-list-dragging .tree-node:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.move-to-item{display:flex;white-space:normal;align-items:baseline}.move-to-item .move-icon{flex:none;margin-inline-end:3px}.move-to-item .path{line-height:18px}\\n\"] }]\n        }], ctorParameters: () => [{ type: CollectionTreeNodeComponent, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Optional\n                }] }, { type: i1.DataService }, { type: CollectionTreeService }, { type: i1$1.Router }, { type: i1$1.ActivatedRoute }, { type: i0.ChangeDetectorRef }], propDecorators: { collectionTree: [{\n                type: Input\n            }], activeCollectionId: [{\n                type: Input\n            }], expandAll: [{\n                type: Input\n            }], selectionManager: [{\n                type: Input\n            }] } });\n\n/**\n * Builds a tree from an array of nodes which have a parent.\n * Based on https://stackoverflow.com/a/31247960/772859, modified to preserve ordering.\n */\nfunction arrayToTree(nodes, currentState, expandedIds = []) {\n    const topLevelNodes = [];\n    const mappedArr = {};\n    const currentStateMap = treeToMap(currentState);\n    // First map the nodes of the array to an object -> create a hash table.\n    for (const node of nodes) {\n        mappedArr[node.id] = { ...node, children: [] };\n    }\n    for (const id of nodes.map(n => n.id)) {\n        if (mappedArr.hasOwnProperty(id)) {\n            const mappedElem = mappedArr[id];\n            mappedElem.expanded = currentStateMap.get(id)?.expanded ?? expandedIds.includes(id);\n            const parent = mappedElem.parent;\n            if (!parent) {\n                continue;\n            }\n            // If the element is not at the root level, add it to its parent array of children.\n            const parentIsRoot = !mappedArr[parent.id];\n            if (!parentIsRoot) {\n                if (mappedArr[parent.id]) {\n                    mappedArr[parent.id].children.push(mappedElem);\n                }\n                else {\n                    mappedArr[parent.id] = { children: [mappedElem] };\n                }\n            }\n            else {\n                topLevelNodes.push(mappedElem);\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const rootId = topLevelNodes.length ? topLevelNodes[0].parent.id : undefined;\n    return { id: rootId, children: topLevelNodes };\n}\n/**\n * Converts an existing tree (as generated by the arrayToTree function) into a flat\n * Map. This is used to persist certain states (e.g. `expanded`) when re-building the\n * tree.\n */\nfunction treeToMap(tree) {\n    const nodeMap = new Map();\n    function visit(node) {\n        nodeMap.set(node.id, node);\n        node.children.forEach(visit);\n    }\n    if (tree) {\n        visit(tree);\n    }\n    return nodeMap;\n}\n\nclass CollectionTreeComponent {\n    constructor(collectionTreeService) {\n        this.collectionTreeService = collectionTreeService;\n        this.expandAll = false;\n        this.expandedIds = [];\n        this.rearrange = new EventEmitter();\n        this.deleteCollection = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if ('collections' in changes && this.collections) {\n            this.collectionTree = arrayToTree(this.collections, this.collectionTree, this.expandedIds);\n            this.collectionTreeService.setCollectionTree(this.collectionTree);\n            this.collectionTreeService.resetMoveList();\n        }\n    }\n    ngOnInit() {\n        this.collectionTreeService.rearrange$.subscribe(event => this.rearrange.emit(event));\n        this.collectionTreeService.delete$.subscribe(id => this.deleteCollection.emit(id));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionTreeComponent, deps: [{ token: CollectionTreeService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CollectionTreeComponent, selector: \"vdr-collection-tree\", inputs: { collections: \"collections\", activeCollectionId: \"activeCollectionId\", expandAll: \"expandAll\", expandedIds: \"expandedIds\", selectionManager: \"selectionManager\" }, outputs: { rearrange: \"rearrange\", deleteCollection: \"deleteCollection\" }, providers: [CollectionTreeService], usesOnChanges: true, ngImport: i0, template: \"<vdr-collection-tree-node\\r\\n    *ngIf=\\\"collectionTree\\\"\\r\\n    cdkDropListGroup\\r\\n    [expandAll]=\\\"expandAll\\\"\\r\\n    [collectionTree]=\\\"collectionTree\\\"\\r\\n    [selectionManager]=\\\"selectionManager\\\"\\r\\n    [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n></vdr-collection-tree-node>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: [\"cdkDropListGroupDisabled\"], exportAs: [\"cdkDropListGroup\"] }, { kind: \"component\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: [\"collectionTree\", \"activeCollectionId\", \"expandAll\", \"selectionManager\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CollectionTreeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-tree', changeDetection: ChangeDetectionStrategy.OnPush, providers: [CollectionTreeService], template: \"<vdr-collection-tree-node\\r\\n    *ngIf=\\\"collectionTree\\\"\\r\\n    cdkDropListGroup\\r\\n    [expandAll]=\\\"expandAll\\\"\\r\\n    [collectionTree]=\\\"collectionTree\\\"\\r\\n    [selectionManager]=\\\"selectionManager\\\"\\r\\n    [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n></vdr-collection-tree-node>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: CollectionTreeService }], propDecorators: { collections: [{\n                type: Input\n            }], activeCollectionId: [{\n                type: Input\n            }], expandAll: [{\n                type: Input\n            }], expandedIds: [{\n                type: Input\n            }], selectionManager: [{\n                type: Input\n            }], rearrange: [{\n                type: Output\n            }], deleteCollection: [{\n                type: Output\n            }] } });\n\nclass ConfirmVariantDeletionDialogComponent {\n    constructor() {\n        this.variants = [];\n    }\n    confirm() {\n        this.resolveWith(true);\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ConfirmVariantDeletionDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ConfirmVariantDeletionDialogComponent, selector: \"vdr-confirm-variant-deletion-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.confirm-deletion-of-unused-variants-title' | translate }}\\r\\n</ng-template>\\r\\n{{ 'catalog.confirm-deletion-of-unused-variants-body' | translate }}\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let variant of variants\\\">{{ variant.name }} ({{ variant.sku }})</li>\\r\\n</ul>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ConfirmVariantDeletionDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-confirm-variant-deletion-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.confirm-deletion-of-unused-variants-title' | translate }}\\r\\n</ng-template>\\r\\n{{ 'catalog.confirm-deletion-of-unused-variants-body' | translate }}\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let variant of variants\\\">{{ variant.name }} ({{ variant.sku }})</li>\\r\\n</ul>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }] });\n\nclass CreateFacetValueDialogComponent {\n    constructor(formBuilder) {\n        this.formBuilder = formBuilder;\n        this.form = this.formBuilder.group({\n            name: ['', Validators.required],\n            code: ['', Validators.required],\n        });\n    }\n    updateCode() {\n        const nameControl = this.form.get('name');\n        const codeControl = this.form.get('code');\n        if (nameControl && codeControl && codeControl.pristine) {\n            codeControl.setValue(normalizeString(`${nameControl.value}`, '-'));\n        }\n    }\n    confirm() {\n        const { name, code } = this.form.value;\n        if (!name || !code) {\n            return;\n        }\n        this.resolveWith({\n            facetId: this.facetId,\n            code,\n            translations: [{ languageCode: this.languageCode, name }],\n        });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CreateFacetValueDialogComponent, deps: [{ token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CreateFacetValueDialogComponent, selector: \"vdr-create-facet-value-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-facet-value' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CreateFacetValueDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-create-facet-value-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-facet-value' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i2.FormBuilder }] });\n\nconst FACET_DETAIL_QUERY = gql `\r\n    query GetFacetDetail($id: ID!, $facetValueListOptions: FacetValueListOptions) {\r\n        facet(id: $id) {\r\n            ...FacetWithValueList\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUE_LIST_FRAGMENT}\r\n`;\nclass FacetDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService, modalService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.customFields = this.getCustomFieldConfig('Facet');\n        this.customValueFields = this.getCustomFieldConfig('FacetValue');\n        this.detailForm = this.formBuilder.group({\n            facet: this.formBuilder.group({\n                code: ['', Validators.required],\n                name: '',\n                visible: true,\n                customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n            }),\n            values: this.formBuilder.record({}),\n        });\n        this.currentPage = 1;\n        this.itemsPerPage = 10;\n        this.totalItems = 0;\n        this.filterControl = new FormControl('');\n        this.values$ = new BehaviorSubject([]);\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateFacet];\n    }\n    ngOnInit() {\n        this.init();\n        this.filterControl.valueChanges\n            .pipe(debounceTime(200), takeUntil(this.destroy$))\n            .subscribe(filterTerm => {\n            this.currentPage = 1;\n            this.fetchFacetValues(this.currentPage, this.itemsPerPage, filterTerm);\n        });\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    updateCode(currentCode, nameValue) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['facet', 'code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n    updateValueCode(currentCode, nameValue, valueId) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['values', valueId, 'code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n    customValueFieldIsSet(index, name) {\n        return !!this.detailForm.get(['values', index, 'customFields', name]);\n    }\n    addFacetValue() {\n        this.modalService\n            .fromComponent(CreateFacetValueDialogComponent, {\n            locals: {\n                languageCode: this.languageCode,\n                facetId: this.id,\n            },\n        })\n            .pipe(switchMap(result => {\n            if (!result) {\n                return EMPTY;\n            }\n            else {\n                return this.dataService.facet.createFacetValues([result]);\n            }\n        }))\n            .subscribe(result => {\n            if (result.createFacetValues) {\n                this.notificationService.success(marker('common.notify-create-success'), {\n                    entity: 'FacetValue',\n                });\n                this.currentPage = 1;\n                this.fetchFacetValues(this.currentPage, this.itemsPerPage);\n            }\n        });\n    }\n    create() {\n        const facetForm = this.detailForm.get('facet');\n        if (!facetForm || !facetForm.dirty) {\n            return;\n        }\n        const newFacet = this.getUpdatedFacet({\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            isPrivate: false,\n            languageCode: this.languageCode,\n            name: '',\n            code: '',\n            translations: [],\n        }, facetForm, this.languageCode);\n        this.dataService.facet.createFacet(newFacet).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), { entity: 'Facet' });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createFacet.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Facet',\n            });\n        });\n    }\n    save() {\n        const valuesFormRecord = this.detailForm.get('values');\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([facet, languageCode]) => {\n            const facetForm = this.detailForm.get('facet');\n            const updateOperations = [];\n            if (facetForm && facetForm.dirty) {\n                const updatedFacetInput = this.getUpdatedFacet(facet, facetForm, languageCode);\n                if (updatedFacetInput) {\n                    updateOperations.push(this.dataService.facet.updateFacet(updatedFacetInput));\n                }\n            }\n            if (valuesFormRecord && valuesFormRecord.dirty) {\n                const updatedValues = this.getUpdatedFacetValues(valuesFormRecord, languageCode);\n                if (updatedValues.length) {\n                    updateOperations.push(this.dataService.facet.updateFacetValues(updatedValues));\n                }\n            }\n            return forkJoin(updateOperations);\n        }))\n            .subscribe(() => {\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Facet' });\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Facet',\n            });\n        });\n    }\n    deleteFacetValue(facetValueId) {\n        this.showModalAndDelete(facetValueId)\n            .pipe(switchMap(response => {\n            if (response.result === DeletionResult.DELETED) {\n                return [true];\n            }\n            else {\n                return this.showModalAndDelete(facetValueId, response.message || '').pipe(map(r => r.result === DeletionResult.DELETED));\n            }\n        }), switchMap(deleted => deleted\n            ? this.dataService.query(GetFacetDetailDocument, {\n                id: this.id,\n            }).single$\n            : []))\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-delete-success'), {\n                entity: 'FacetValue',\n            });\n            this.fetchFacetValues(this.currentPage, this.itemsPerPage, this.filterControl.value);\n        }, err => {\n            this.notificationService.error(marker('common.notify-delete-error'), {\n                entity: 'FacetValue',\n            });\n        });\n    }\n    showModalAndDelete(facetValueId, message) {\n        return this.modalService\n            .dialog({\n            title: marker('catalog.confirm-delete-facet-value'),\n            body: message,\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(result => result ? this.dataService.facet.deleteFacetValues([facetValueId], !!message) : EMPTY), map(result => result.deleteFacetValues[0]));\n    }\n    setCurrentPage(newPage) {\n        this.currentPage = newPage;\n        this.fetchFacetValues(this.currentPage, this.itemsPerPage, this.filterControl.value);\n    }\n    setItemsPerPage(itemsPerPage) {\n        this.itemsPerPage = itemsPerPage;\n        this.fetchFacetValues(this.currentPage, this.itemsPerPage, this.filterControl.value);\n    }\n    fetchFacetValues(currentPage, itemsPerPage, filterTerm) {\n        this.dataService\n            .query(FACET_DETAIL_QUERY, {\n            id: this.id,\n            facetValueListOptions: {\n                take: itemsPerPage,\n                skip: (currentPage - 1) * itemsPerPage,\n                sort: {\n                    createdAt: SortOrder$1.DESC,\n                },\n                ...(filterTerm ? { filter: { name: { contains: filterTerm } } } : {}),\n            },\n        })\n            .single$.subscribe(({ facet }) => {\n            if (facet) {\n                this.values$.next([...facet.valueList.items]);\n                this.totalItems = facet.valueList.totalItems;\n                this.setFacetValueFormValues(facet, this.languageCode);\n            }\n        });\n    }\n    /**\n     * Sets the values of the form on changes to the facet or current language.\n     */\n    setFormValues(facet, languageCode) {\n        const currentTranslation = findTranslation(facet, languageCode);\n        this.detailForm.patchValue({\n            facet: {\n                code: facet.code,\n                visible: !facet.isPrivate,\n                name: currentTranslation?.name ?? '',\n            },\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['facet', 'customFields']), facet, currentTranslation);\n        }\n        this.values$.next([...facet.valueList.items]);\n        this.totalItems = facet.valueList.totalItems;\n        this.setFacetValueFormValues(facet, languageCode);\n    }\n    setFacetValueFormValues(facet, languageCode) {\n        const currentValuesFormGroup = this.detailForm.get('values');\n        facet.valueList.items.forEach(value => {\n            const valueTranslation = findTranslation(value, languageCode);\n            const group = {\n                id: value.id,\n                code: value.code,\n                name: valueTranslation ? valueTranslation.name : '',\n            };\n            let valueControl = currentValuesFormGroup.get(value.id);\n            if (!valueControl) {\n                valueControl = this.formBuilder.group(group);\n                currentValuesFormGroup.addControl(value.id, valueControl);\n            }\n            else {\n                valueControl.patchValue(group);\n            }\n            if (this.customValueFields.length) {\n                let customValueFieldsGroup = valueControl.get(['customFields']);\n                if (!customValueFieldsGroup) {\n                    customValueFieldsGroup = new UntypedFormGroup({});\n                    valueControl.addControl('customFields', customValueFieldsGroup);\n                }\n                if (customValueFieldsGroup) {\n                    for (const fieldDef of this.customValueFields) {\n                        const key = fieldDef.name;\n                        const fieldValue = fieldDef.type === 'localeString'\n                            ? valueTranslation?.customFields?.[key]\n                            : value.customFields[key];\n                        const control = customValueFieldsGroup.get(key);\n                        if (control) {\n                            control.setValue(fieldValue);\n                        }\n                        else {\n                            customValueFieldsGroup.addControl(key, new UntypedFormControl(fieldValue));\n                        }\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Given a facet and the value of the detailForm, this method creates an updated copy of the facet which\n     * can then be persisted to the API.\n     */\n    getUpdatedFacet(facet, facetFormGroup, languageCode) {\n        const input = createUpdatedTranslatable({\n            translatable: facet,\n            updatedFields: facetFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: facet.name || '',\n            },\n        });\n        input.isPrivate = !facetFormGroup.value.visible;\n        return input;\n    }\n    /**\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\n     * which can be persisted to the API via an updateFacetValues mutation.\n     */\n    getUpdatedFacetValues(valuesFormGroup, languageCode) {\n        const dirtyValueValues = Object.values(valuesFormGroup.controls)\n            .filter(c => c.dirty)\n            .map(c => c.value);\n        return dirtyValueValues\n            .map((value, i) => createUpdatedTranslatable({\n            translatable: value,\n            updatedFields: value,\n            customFieldConfig: this.customValueFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: '',\n            },\n        }))\n            .filter(notNullOrUndefined);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FacetDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }, { token: i1.ModalService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: FacetDetailComponent, selector: \"vdr-facet-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"facet-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar formGroupName=\\\"facet\\\">\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.facet?.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card formGroupName=\\\"facet\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Facet\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('facet.customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"facet-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card\\r\\n                *ngIf=\\\"!(isNew$ | async)\\\"\\r\\n                [title]=\\\"'catalog.facet-values' | translate\\\"\\r\\n                [paddingX]=\\\"false\\\"\\r\\n            >\\r\\n                <ng-template vdrCardControls>\\r\\n                    <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"mr-3\\\"\\r\\n                        [formControl]=\\\"filterControl\\\"\\r\\n                        [placeholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n                    />\\r\\n                </ng-template>\\r\\n                <ng-container *ngIf=\\\"values$ | async as filteredValues\\\">\\r\\n                    <table class=\\\"facet-values-list table\\\" formArrayName=\\\"values\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th></th>\\r\\n                                <th>{{ 'common.name' | translate }}</th>\\r\\n                                <th>{{ 'common.code' | translate }}</th>\\r\\n                                <ng-container *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <th>{{ 'common.custom-fields' | translate }}</th>\\r\\n                                </ng-container>\\r\\n                                <th></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr\\r\\n                                class=\\\"facet-value\\\"\\r\\n                                *ngFor=\\\"\\r\\n                                    let value of filteredValues\\r\\n                                        | paginate\\r\\n                                            : {\\r\\n                                                  currentPage: currentPage,\\r\\n                                                  itemsPerPage: itemsPerPage,\\r\\n                                                  totalItems: totalItems,\\r\\n                                              };\\r\\n                                    let i = index\\r\\n                                \\\"\\r\\n                                [formGroup]=\\\"detailForm.get(['values', value.id])\\\"\\r\\n                            >\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-entity-info [entity]=\\\"value\\\"></vdr-entity-info>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input\\r\\n                                        type=\\\"text\\\"\\r\\n                                        formControlName=\\\"name\\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                        (input)=\\\"updateValueCode(value.code, $event.target.value, value.id)\\\"\\r\\n                                    />\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"code\\\" />\\r\\n                                </td>\\r\\n                                <td class=\\\"\\\" *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <vdr-tabbed-custom-fields\\r\\n                                        entityName=\\\"FacetValue\\\"\\r\\n                                        [customFields]=\\\"customValueFields\\\"\\r\\n                                        [compact]=\\\"true\\\"\\r\\n                                        [customFieldsFormGroup]=\\\"\\r\\n                                            detailForm.get(['values', value.id, 'customFields'])\\r\\n                                        \\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                    ></vdr-tabbed-custom-fields>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-dropdown>\\r\\n                                        <button type=\\\"button\\\" class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                                        </button>\\r\\n                                        <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                            <button\\r\\n                                                type=\\\"button\\\"\\r\\n                                                class=\\\"delete-button\\\"\\r\\n                                                (click)=\\\"deleteFacetValue(value.id)\\\"\\r\\n                                                [disabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                                vdrDropdownItem\\r\\n                                            >\\r\\n                                                <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                                {{ 'common.delete' | translate }}\\r\\n                                            </button>\\r\\n                                        </vdr-dropdown-menu>\\r\\n                                    </vdr-dropdown>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <div class=\\\"pagination-wrapper\\\">\\r\\n                        <vdr-items-per-page-controls\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n                        ></vdr-items-per-page-controls>\\r\\n                        <vdr-pagination-controls\\r\\n                            [currentPage]=\\\"currentPage\\\"\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            [totalItems]=\\\"totalItems\\\"\\r\\n                            (pageChange)=\\\"setCurrentPage($event)\\\"\\r\\n                        ></vdr-pagination-controls>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"button m-3\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n                        (click)=\\\"addFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"add\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facet-value' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".visible-toggle{margin-top:-3px!important}tr.facet-value td{vertical-align:middle}.pagination-wrapper{display:flex;justify-content:space-between;padding:var(--card-padding)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.EntityInfoComponent, selector: \"vdr-entity-info\", inputs: [\"small\", \"entity\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"directive\", type: i1.CardControlsDirective, selector: \"[vdrCardControls]\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FacetDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-facet-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"facet-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar formGroupName=\\\"facet\\\">\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.facet?.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card formGroupName=\\\"facet\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Facet\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('facet.customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"facet-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card\\r\\n                *ngIf=\\\"!(isNew$ | async)\\\"\\r\\n                [title]=\\\"'catalog.facet-values' | translate\\\"\\r\\n                [paddingX]=\\\"false\\\"\\r\\n            >\\r\\n                <ng-template vdrCardControls>\\r\\n                    <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"mr-3\\\"\\r\\n                        [formControl]=\\\"filterControl\\\"\\r\\n                        [placeholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n                    />\\r\\n                </ng-template>\\r\\n                <ng-container *ngIf=\\\"values$ | async as filteredValues\\\">\\r\\n                    <table class=\\\"facet-values-list table\\\" formArrayName=\\\"values\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th></th>\\r\\n                                <th>{{ 'common.name' | translate }}</th>\\r\\n                                <th>{{ 'common.code' | translate }}</th>\\r\\n                                <ng-container *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <th>{{ 'common.custom-fields' | translate }}</th>\\r\\n                                </ng-container>\\r\\n                                <th></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr\\r\\n                                class=\\\"facet-value\\\"\\r\\n                                *ngFor=\\\"\\r\\n                                    let value of filteredValues\\r\\n                                        | paginate\\r\\n                                            : {\\r\\n                                                  currentPage: currentPage,\\r\\n                                                  itemsPerPage: itemsPerPage,\\r\\n                                                  totalItems: totalItems,\\r\\n                                              };\\r\\n                                    let i = index\\r\\n                                \\\"\\r\\n                                [formGroup]=\\\"detailForm.get(['values', value.id])\\\"\\r\\n                            >\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-entity-info [entity]=\\\"value\\\"></vdr-entity-info>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input\\r\\n                                        type=\\\"text\\\"\\r\\n                                        formControlName=\\\"name\\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                        (input)=\\\"updateValueCode(value.code, $event.target.value, value.id)\\\"\\r\\n                                    />\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"code\\\" />\\r\\n                                </td>\\r\\n                                <td class=\\\"\\\" *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <vdr-tabbed-custom-fields\\r\\n                                        entityName=\\\"FacetValue\\\"\\r\\n                                        [customFields]=\\\"customValueFields\\\"\\r\\n                                        [compact]=\\\"true\\\"\\r\\n                                        [customFieldsFormGroup]=\\\"\\r\\n                                            detailForm.get(['values', value.id, 'customFields'])\\r\\n                                        \\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                    ></vdr-tabbed-custom-fields>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-dropdown>\\r\\n                                        <button type=\\\"button\\\" class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                                        </button>\\r\\n                                        <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                            <button\\r\\n                                                type=\\\"button\\\"\\r\\n                                                class=\\\"delete-button\\\"\\r\\n                                                (click)=\\\"deleteFacetValue(value.id)\\\"\\r\\n                                                [disabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                                vdrDropdownItem\\r\\n                                            >\\r\\n                                                <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                                {{ 'common.delete' | translate }}\\r\\n                                            </button>\\r\\n                                        </vdr-dropdown-menu>\\r\\n                                    </vdr-dropdown>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <div class=\\\"pagination-wrapper\\\">\\r\\n                        <vdr-items-per-page-controls\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n                        ></vdr-items-per-page-controls>\\r\\n                        <vdr-pagination-controls\\r\\n                            [currentPage]=\\\"currentPage\\\"\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            [totalItems]=\\\"totalItems\\\"\\r\\n                            (pageChange)=\\\"setCurrentPage($event)\\\"\\r\\n                        ></vdr-pagination-controls>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"button m-3\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n                        (click)=\\\"addFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"add\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facet-value' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".visible-toggle{margin-top:-3px!important}tr.facet-value td{vertical-align:middle}.pagination-wrapper{display:flex;justify-content:space-between;padding:var(--card-padding)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }, { type: i1.ModalService }] });\n\nconst deleteFacetsBulkAction = createBulkDeleteAction({\n    location: 'facet-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteFacet) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    getItemName: item => item.name,\n    shouldRetryItem: (response, item) => !!response.message,\n    bulkDelete: (dataService, ids, retrying) => dataService.facet.deleteFacets(ids, retrying).pipe(map(res => res.deleteFacets)),\n});\nconst assignFacetsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'facet-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateFacet),\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, facetIds, channelIds) => channelIds.map(channelId => dataService.facet\n        .assignFacetsToChannel({\n        facetIds,\n        channelId,\n    })\n        .pipe(map(res => res.assignFacetsToChannel))),\n});\nconst removeFacetsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'facet-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\n        userPermissions.includes(Permission.DeleteFacet),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, facetIds, channelId, retrying) => dataService.facet\n        .removeFacetsFromChannel({\n        channelId: channelId,\n        facetIds,\n        force: retrying,\n    })\n        .pipe(map(res => res.removeFacetsFromChannel)),\n    isErrorResult: result => (result.__typename === 'FacetInUseError' ? result.message : undefined),\n});\nconst removeFacetsFromChannelBulkAction2 = {\n    location: 'facet-list',\n    label: marker('catalog.remove-from-channel'),\n    getTranslationVars: ({ injector }) => getChannelCodeFromUserStatus(injector.get(DataService)),\n    icon: 'layers',\n    iconClass: 'is-warning',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateFacet) ||\n        userPermissions.includes(Permission.UpdateCatalog),\n    isVisible: ({ injector }) => currentChannelIsNotDefault(injector.get(DataService)),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        const activeChannelId$ = dataService.client\n            .userStatus()\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\n        function showModalAndDelete(facetIds, message) {\n            return modalService\n                .dialog({\n                title: marker('catalog.remove-from-channel'),\n                translationVars: {\n                    count: selection.length,\n                },\n                size: message ? 'lg' : 'md',\n                body: message,\n                buttons: [\n                    { type: 'secondary', label: marker('common.cancel') },\n                    {\n                        type: 'danger',\n                        label: message ? marker('common.force-remove') : marker('common.remove'),\n                        returnValue: true,\n                    },\n                ],\n            })\n                .pipe(switchMap(res => res\n                ? activeChannelId$.pipe(switchMap(activeChannelId => activeChannelId\n                    ? dataService.facet.removeFacetsFromChannel({\n                        channelId: activeChannelId,\n                        facetIds,\n                        force: !!message,\n                    })\n                    : EMPTY), map(res2 => res2.removeFacetsFromChannel))\n                : EMPTY));\n        }\n        showModalAndDelete(unique(selection.map(f => f.id)))\n            .pipe(switchMap(result => {\n            let removedCount = selection.length;\n            const errors = [];\n            const errorIds = [];\n            let i = 0;\n            for (const item of result) {\n                if (item.__typename === 'FacetInUseError') {\n                    errors.push(item.message);\n                    errorIds.push(selection[i]?.id);\n                    removedCount--;\n                }\n                i++;\n            }\n            if (0 < errorIds.length) {\n                return showModalAndDelete(errorIds, errors.join('\\n')).pipe(map(result2 => {\n                    const notRemovedCount = result2.filter(r => r.__typename === 'FacetInUseError').length;\n                    return selection.length - notRemovedCount;\n                }));\n            }\n            else {\n                return of(removedCount);\n            }\n        }), switchMap(removedCount => removedCount\n            ? getChannelCodeFromUserStatus(dataService).then(({ channelCode }) => ({\n                channelCode,\n                removedCount,\n            }))\n            : EMPTY))\n            .subscribe(({ removedCount, channelCode }) => {\n            if (removedCount) {\n                hostComponent.refresh();\n                clearSelection();\n                notificationService.success(marker('catalog.notify-remove-facets-from-channel-success'), {\n                    count: removedCount,\n                    channelCode,\n                });\n            }\n        });\n    },\n};\nconst duplicateFacetsBulkAction = {\n    location: 'facet-list',\n    label: marker('common.duplicate'),\n    icon: 'copy',\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent((DuplicateEntityDialogComponent), {\n            locals: {\n                entities: selection,\n                entityName: 'Facet',\n                title: marker('catalog.duplicate-facets'),\n                getEntityName: entity => entity.name,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n                hostComponent.refresh();\n            }\n        });\n    },\n};\n\nconst FACET_LIST_QUERY = gql `\n    query GetFacetList($options: FacetListOptions, $facetValueListOptions: FacetValueListOptions) {\n        facets(options: $options) {\n            items {\n                ...FacetWithValueList\n            }\n            totalItems\n        }\n    }\n    ${FACET_WITH_VALUE_LIST_FRAGMENT}\n`;\nclass FacetListComponent extends TypedBaseListComponent {\n    constructor(dataService) {\n        super();\n        this.dataService = dataService;\n        this.initialLimit = 3;\n        this.displayLimit = {};\n        this.dataTableListId = 'facet-list';\n        this.customFields = this.getCustomFieldConfig('Facet');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'visibility',\n            type: { kind: 'boolean' },\n            label: marker('common.visibility'),\n            toFilterInput: value => ({\n                isPrivate: { eq: !value },\n            }),\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'id' })\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'code' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetFacetListDocument,\n            getItems: data => data.facets,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n                facetValueListOptions: {\n                    take: 100,\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    toggleDisplayLimit(facet) {\n        if (this.displayLimit[facet.id] === facet.valueList.items.length) {\n            this.displayLimit[facet.id] = this.initialLimit;\n        }\n        else {\n            this.displayLimit[facet.id] = facet.valueList.items.length;\n        }\n    }\n    setLanguage(code) {\n        this.dataService.client.setContentLanguage(code).subscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FacetListComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: FacetListComponent, selector: \"vdr-facet-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-facet' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"facet-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"facet-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', facet.id]\\\"\\r\\n                ><span>{{ facet.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"facet.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.private' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!facet.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                'common.public' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.values' | translate\\\" id=\\\"values\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <div class=\\\"facet-values-list\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let value of facet.valueList.items | slice : 0 : displayLimit[facet.id] || 3\\\"\\r\\n                    [facetValue]=\\\"value\\\"\\r\\n                    [removable]=\\\"false\\\"\\r\\n                    [displayFacetName]=\\\"false\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n                <vdr-chip *ngIf=\\\"displayLimit[facet.id] < facet.valueList.totalItems && (displayLimit[facet.id] || 0) === facet.valueList.items.length\\\">\\r\\n                    ... + {{ facet.valueList.totalItems - facet.valueList.items.length }}\\r\\n                </vdr-chip>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    *ngIf=\\\"facet.valueList.items.length > initialLimit\\\"\\r\\n                    (click)=\\\"toggleDisplayLimit(facet)\\\"\\r\\n                >\\r\\n                    <ng-container *ngIf=\\\"(displayLimit[facet.id] || 0) < facet.valueList.items.length; else collapse\\\">\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ facet.valueList.totalItems - initialLimit }}\\r\\n                    </ng-container>\\r\\n                    <ng-template #collapse>\\r\\n                        <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                    </ng-template>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".facet-values-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i3$1.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FacetListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-facet-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-facet' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"facet-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"facet-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', facet.id]\\\"\\r\\n                ><span>{{ facet.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"facet.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.private' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!facet.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                'common.public' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.values' | translate\\\" id=\\\"values\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <div class=\\\"facet-values-list\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let value of facet.valueList.items | slice : 0 : displayLimit[facet.id] || 3\\\"\\r\\n                    [facetValue]=\\\"value\\\"\\r\\n                    [removable]=\\\"false\\\"\\r\\n                    [displayFacetName]=\\\"false\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n                <vdr-chip *ngIf=\\\"displayLimit[facet.id] < facet.valueList.totalItems && (displayLimit[facet.id] || 0) === facet.valueList.items.length\\\">\\r\\n                    ... + {{ facet.valueList.totalItems - facet.valueList.items.length }}\\r\\n                </vdr-chip>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    *ngIf=\\\"facet.valueList.items.length > initialLimit\\\"\\r\\n                    (click)=\\\"toggleDisplayLimit(facet)\\\"\\r\\n                >\\r\\n                    <ng-container *ngIf=\\\"(displayLimit[facet.id] || 0) < facet.valueList.items.length; else collapse\\\">\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ facet.valueList.totalItems - initialLimit }}\\r\\n                    </ng-container>\\r\\n                    <ng-template #collapse>\\r\\n                        <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                    </ng-template>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".facet-values-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\nconst DEFAULT_VARIANT_CODE = '__DEFAULT_VARIANT__';\nclass GenerateProductVariantsComponent {\n    constructor(dataService, formBuilder) {\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.variantsChange = new EventEmitter();\n        this.optionGroups = [];\n        this.variantFormValues = {};\n        this.selectedStockLocationId = null;\n    }\n    ngOnInit() {\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\n            this.currencyCode = data.activeChannel.defaultCurrencyCode;\n        });\n        this.stockLocations$ = this.dataService\n            .query(GetStockLocationListDocument, {\n            options: {\n                take: 999,\n            },\n        })\n            .refetchOnChannelChange()\n            .mapStream(({ stockLocations }) => stockLocations.items)\n            .pipe(tap(items => {\n            if (items.length) {\n                this.selectedStockLocationId = items[0].id;\n                this.onFormChange();\n            }\n        }));\n        this.generateVariants();\n    }\n    addOption() {\n        this.optionGroups.push({ name: '', values: [] });\n        const index = this.optionGroups.length - 1;\n        setTimeout(() => {\n            const input = this.groupNameInputs.get(index)?.nativeElement;\n            input?.focus();\n        });\n    }\n    removeOption(name) {\n        this.optionGroups = this.optionGroups.filter(g => g.name !== name);\n        this.generateVariants();\n    }\n    generateVariants() {\n        const totalValuesCount = this.optionGroups.reduce((sum, group) => sum + group.values.length, 0);\n        const groups = totalValuesCount\n            ? this.optionGroups.map(g => g.values.map(v => v.name))\n            : [[DEFAULT_VARIANT_CODE]];\n        this.variants = generateAllCombinations(groups).map(values => ({ id: values.join('|'), values }));\n        this.variants.forEach((variant, index) => {\n            if (!this.variantFormValues[variant.id]) {\n                const formGroup = this.formBuilder.nonNullable.group({\n                    optionValues: [variant.values],\n                    enabled: true,\n                    price: this.copyFromDefault(variant.id, 'price', 0),\n                    sku: this.copyFromDefault(variant.id, 'sku', ''),\n                    stock: this.copyFromDefault(variant.id, 'stock', 0),\n                });\n                formGroup.valueChanges.subscribe(() => this.onFormChange());\n                if (index === 0) {\n                    formGroup.get('price')?.valueChanges.subscribe(value => {\n                        this.copyValuesToPristine('price', formGroup.get('price'));\n                    });\n                    formGroup.get('sku')?.valueChanges.subscribe(value => {\n                        this.copyValuesToPristine('sku', formGroup.get('sku'));\n                    });\n                    formGroup.get('stock')?.valueChanges.subscribe(value => {\n                        this.copyValuesToPristine('stock', formGroup.get('stock'));\n                    });\n                }\n                this.variantFormValues[variant.id] = formGroup;\n            }\n        });\n        this.onFormChange();\n    }\n    trackByFn(index, variant) {\n        return variant.values.join('|');\n    }\n    handleEnter(event, optionValueInputComponent) {\n        event.preventDefault();\n        event.stopPropagation();\n        optionValueInputComponent.focus();\n    }\n    copyValuesToPristine(field, formControl) {\n        if (!formControl) {\n            return;\n        }\n        Object.values(this.variantFormValues).forEach(formGroup => {\n            const correspondingFormControl = formGroup.get(field);\n            if (correspondingFormControl && correspondingFormControl.pristine) {\n                correspondingFormControl.setValue(formControl.value, { emitEvent: false });\n            }\n        });\n    }\n    onFormChange() {\n        const variantsToCreate = this.variants\n            .map(v => this.variantFormValues[v.id].value)\n            .filter(v => v.enabled);\n        this.variantsChange.emit({\n            groups: this.optionGroups.map(og => ({ name: og.name, values: og.values.map(v => v.name) })),\n            variants: variantsToCreate,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            stockLocationId: this.selectedStockLocationId,\n        });\n    }\n    copyFromDefault(variantId, prop, value) {\n        return variantId !== DEFAULT_VARIANT_CODE\n            ? this.variantFormValues[DEFAULT_VARIANT_CODE].get(prop)?.value\n            : value;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: GenerateProductVariantsComponent, deps: [{ token: i1.DataService }, { token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: GenerateProductVariantsComponent, selector: \"vdr-generate-product-variants\", outputs: { variantsChange: \"variantsChange\" }, viewQueries: [{ propertyName: \"groupNameInputs\", predicate: [\"optionGroupName\"], descendants: true, read: ElementRef }], ngImport: i0, template: \"<div *ngFor=\\\"let group of optionGroups\\\" class=\\\"option-groups\\\">\\r\\n    <div class=\\\"name\\\">\\r\\n        <label>{{ 'catalog.option' | translate }}</label>\\r\\n        <input\\r\\n            #optionGroupName\\r\\n            placeholder=\\\"e.g. Size\\\"\\r\\n            clrInput\\r\\n            [(ngModel)]=\\\"group.name\\\"\\r\\n            name=\\\"name\\\"\\r\\n            required\\r\\n            (keydown.enter)=\\\"handleEnter($event, optionValueInputComponent)\\\"\\r\\n        />\\r\\n    </div>\\r\\n    <div class=\\\"values\\\">\\r\\n        <label>{{ 'catalog.option-values' | translate }}</label>\\r\\n        <vdr-option-value-input\\r\\n            #optionValueInputComponent\\r\\n            [(ngModel)]=\\\"group.values\\\"\\r\\n            (ngModelChange)=\\\"generateVariants()\\\"\\r\\n            (edit)=\\\"generateVariants()\\\"\\r\\n            [groupName]=\\\"group.name\\\"\\r\\n            [disabled]=\\\"group.name === ''\\\"\\r\\n        ></vdr-option-value-input>\\r\\n    </div>\\r\\n    <div class=\\\"remove-group\\\">\\r\\n        <button\\r\\n            class=\\\"button-small mt-2\\\"\\r\\n            [title]=\\\"'catalog.remove-option' | translate\\\"\\r\\n            (click)=\\\"removeOption(group.name)\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<button class=\\\"button mb-2\\\" (click)=\\\"addOption()\\\">\\r\\n    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n    {{ 'catalog.add-option' | translate }}\\r\\n</button>\\r\\n\\r\\n<ng-container *ngIf=\\\"stockLocations$ | async as stockLocations\\\">\\r\\n    <clr-alert *ngIf=\\\"stockLocations.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n        <clr-alert-item>\\r\\n            <span class=\\\"alert-text\\\">\\r\\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\\r\\n            </span>\\r\\n        </clr-alert-item>\\r\\n    </clr-alert>\\r\\n\\r\\n    <div class=\\\"form-grid mb-2\\\">\\r\\n        <vdr-form-field *ngIf=\\\"stockLocations.length\\\" [label]=\\\"'catalog.add-stock-to-location' | translate\\\">\\r\\n            <select [(ngModel)]=\\\"selectedStockLocationId\\\">\\r\\n                <option *ngFor=\\\"let location of stockLocations\\\" [value]=\\\"location.id\\\">\\r\\n                    {{ location.name }}\\r\\n                </option>\\r\\n            </select>\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"variants-preview\\\" *ngIf=\\\"0 < stockLocations.length\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'common.create' | translate }}</th>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'catalog.variant' | translate }}</th>\\r\\n                    <th>{{ 'catalog.sku' | translate }}</th>\\r\\n                    <th>{{ 'catalog.price' | translate }}</th>\\r\\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let variant of variants; trackBy: trackByFn\\\"\\r\\n                [class.disabled]=\\\"!variantFormValues[variant.id].value.enabled === false\\\"\\r\\n                [formGroup]=\\\"variantFormValues[variant.id]\\\"\\r\\n            >\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"enabled\\\" clrCheckbox />\\r\\n                </td>\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    {{ variant.values.join(' ') }}\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"sku\\\" [placeholder]=\\\"'catalog.sku' | translate\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <vdr-currency-input\\r\\n                            formControlName=\\\"price\\\"\\r\\n                            [currencyCode]=\\\"currencyCode\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"number\\\" formControlName=\\\"stock\\\" min=\\\"0\\\" step=\\\"1\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\", styles: [\":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertLightweight\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: [\"groupName\", \"options\", \"disabled\"], outputs: [\"add\", \"remove\", \"edit\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: GenerateProductVariantsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-generate-product-variants', template: \"<div *ngFor=\\\"let group of optionGroups\\\" class=\\\"option-groups\\\">\\r\\n    <div class=\\\"name\\\">\\r\\n        <label>{{ 'catalog.option' | translate }}</label>\\r\\n        <input\\r\\n            #optionGroupName\\r\\n            placeholder=\\\"e.g. Size\\\"\\r\\n            clrInput\\r\\n            [(ngModel)]=\\\"group.name\\\"\\r\\n            name=\\\"name\\\"\\r\\n            required\\r\\n            (keydown.enter)=\\\"handleEnter($event, optionValueInputComponent)\\\"\\r\\n        />\\r\\n    </div>\\r\\n    <div class=\\\"values\\\">\\r\\n        <label>{{ 'catalog.option-values' | translate }}</label>\\r\\n        <vdr-option-value-input\\r\\n            #optionValueInputComponent\\r\\n            [(ngModel)]=\\\"group.values\\\"\\r\\n            (ngModelChange)=\\\"generateVariants()\\\"\\r\\n            (edit)=\\\"generateVariants()\\\"\\r\\n            [groupName]=\\\"group.name\\\"\\r\\n            [disabled]=\\\"group.name === ''\\\"\\r\\n        ></vdr-option-value-input>\\r\\n    </div>\\r\\n    <div class=\\\"remove-group\\\">\\r\\n        <button\\r\\n            class=\\\"button-small mt-2\\\"\\r\\n            [title]=\\\"'catalog.remove-option' | translate\\\"\\r\\n            (click)=\\\"removeOption(group.name)\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<button class=\\\"button mb-2\\\" (click)=\\\"addOption()\\\">\\r\\n    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n    {{ 'catalog.add-option' | translate }}\\r\\n</button>\\r\\n\\r\\n<ng-container *ngIf=\\\"stockLocations$ | async as stockLocations\\\">\\r\\n    <clr-alert *ngIf=\\\"stockLocations.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n        <clr-alert-item>\\r\\n            <span class=\\\"alert-text\\\">\\r\\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\\r\\n            </span>\\r\\n        </clr-alert-item>\\r\\n    </clr-alert>\\r\\n\\r\\n    <div class=\\\"form-grid mb-2\\\">\\r\\n        <vdr-form-field *ngIf=\\\"stockLocations.length\\\" [label]=\\\"'catalog.add-stock-to-location' | translate\\\">\\r\\n            <select [(ngModel)]=\\\"selectedStockLocationId\\\">\\r\\n                <option *ngFor=\\\"let location of stockLocations\\\" [value]=\\\"location.id\\\">\\r\\n                    {{ location.name }}\\r\\n                </option>\\r\\n            </select>\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"variants-preview\\\" *ngIf=\\\"0 < stockLocations.length\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'common.create' | translate }}</th>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'catalog.variant' | translate }}</th>\\r\\n                    <th>{{ 'catalog.sku' | translate }}</th>\\r\\n                    <th>{{ 'catalog.price' | translate }}</th>\\r\\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let variant of variants; trackBy: trackByFn\\\"\\r\\n                [class.disabled]=\\\"!variantFormValues[variant.id].value.enabled === false\\\"\\r\\n                [formGroup]=\\\"variantFormValues[variant.id]\\\"\\r\\n            >\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"enabled\\\" clrCheckbox />\\r\\n                </td>\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    {{ variant.values.join(' ') }}\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"sku\\\" [placeholder]=\\\"'catalog.sku' | translate\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <vdr-currency-input\\r\\n                            formControlName=\\\"price\\\"\\r\\n                            [currencyCode]=\\\"currencyCode\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"number\\\" formControlName=\\\"stock\\\" min=\\\"0\\\" step=\\\"1\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\", styles: [\":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i2.FormBuilder }], propDecorators: { variantsChange: [{\n                type: Output\n            }], groupNameInputs: [{\n                type: ViewChildren,\n                args: ['optionGroupName', { read: ElementRef }]\n            }] } });\n\nclass ProductVariantListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.hideLanguageSelect = false;\n        this.customFields = this.getCustomFieldConfig('ProductVariant');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilters([\n            {\n                name: 'name',\n                type: { kind: 'text' },\n                label: marker('common.name'),\n                filterField: 'name',\n            },\n            {\n                name: 'enabled',\n                type: { kind: 'boolean' },\n                label: marker('common.enabled'),\n                filterField: 'enabled',\n            },\n            {\n                name: 'sku',\n                type: { kind: 'text' },\n                label: marker('catalog.sku'),\n                filterField: 'sku',\n            },\n            {\n                name: 'price',\n                type: { kind: 'number', inputType: 'currency' },\n                label: marker('common.price'),\n                filterField: 'price',\n            },\n            {\n                name: 'priceWithTax',\n                type: { kind: 'number', inputType: 'currency' },\n                label: marker('common.price-with-tax'),\n                filterField: 'priceWithTax',\n            },\n        ])\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .addSorts([\n            { name: 'id' },\n            { name: 'createdAt' },\n            { name: 'updatedAt' },\n            { name: 'name' },\n            { name: 'sku' },\n            { name: 'price' },\n            { name: 'priceWithTax' },\n        ])\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        this.configure({\n            document: ProductVariantListQueryDocument,\n            getItems: data => data.productVariants,\n            setVariables: (skip, take) => {\n                const searchTerm = this.searchTermControl.value;\n                const filterParam = { _and: [] };\n                const filterInput = this.filters.createFilterInput();\n                if (Object.keys(filterInput).length) {\n                    filterParam._and?.push(filterInput);\n                }\n                if (searchTerm) {\n                    filterParam._and?.push({\n                        _or: [\n                            {\n                                name: { contains: searchTerm },\n                            },\n                            {\n                                sku: { contains: searchTerm },\n                            },\n                        ],\n                    });\n                }\n                if (this.productId) {\n                    filterParam._and?.push({\n                        productId: {\n                            eq: this.productId,\n                        },\n                    });\n                }\n                return {\n                    options: {\n                        skip,\n                        take,\n                        filter: filterParam,\n                        sort: this.sorts.createSortInput(),\n                    },\n                };\n            },\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ProductVariantListComponent, selector: \"vdr-product-variant-list\", inputs: { productId: \"productId\", hideLanguageSelect: \"hideLanguageSelect\", dataTableId: \"dataTableId\" }, usesInheritance: true, ngImport: i0, template: \"<vdr-page-block *ngIf=\\\"!hideLanguageSelect\\\">\\r\\n    <vdr-language-selector\\r\\n        [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n        [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n    ></vdr-language-selector>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableId || 'product-variant-list'\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-variant-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'settings.search-by-product-name-or-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"variant.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <a\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['/catalog/products', variant.productId, 'variants', variant.id]\\\"\\r\\n                ><span>{{ variant.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [sort]=\\\"sorts.get('sku')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.sku }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"variant.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!variant.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('price')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [sort]=\\\"sorts.get('priceWithTax')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.stock-on-hand' | translate\\\" id=\\\"stock-on-hand\\\" [hiddenByDefault]=\\\"false\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let stockLevel of variant.stockLevels\\\" [title]=\\\"stockLevel.stockLocation?.name\\\">\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div>\\r\\n                        {{ stockLevel.stockOnHand\\r\\n                        }}<span class=\\\"ml-1\\\" *ngIf=\\\"stockLevel.stockAllocated\\\"\\r\\n                            >({{ stockLevel.stockAllocated }} allocated)</span\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n            </vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-variant-list', template: \"<vdr-page-block *ngIf=\\\"!hideLanguageSelect\\\">\\r\\n    <vdr-language-selector\\r\\n        [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n        [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n    ></vdr-language-selector>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableId || 'product-variant-list'\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-variant-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'settings.search-by-product-name-or-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"variant.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <a\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['/catalog/products', variant.productId, 'variants', variant.id]\\\"\\r\\n                ><span>{{ variant.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [sort]=\\\"sorts.get('sku')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.sku }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"variant.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!variant.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('price')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [sort]=\\\"sorts.get('priceWithTax')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.stock-on-hand' | translate\\\" id=\\\"stock-on-hand\\\" [hiddenByDefault]=\\\"false\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let stockLevel of variant.stockLevels\\\" [title]=\\\"stockLevel.stockLocation?.name\\\">\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div>\\r\\n                        {{ stockLevel.stockOnHand\\r\\n                        }}<span class=\\\"ml-1\\\" *ngIf=\\\"stockLevel.stockAllocated\\\"\\r\\n                            >({{ stockLevel.stockAllocated }} allocated)</span\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n            </vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { productId: [{\n                type: Input\n            }], hideLanguageSelect: [{\n                type: Input\n            }], dataTableId: [{\n                type: Input\n            }] } });\n\nconst GET_PRODUCT_DETAIL = gql `\r\n    query GetProductDetail($id: ID!) {\r\n        product(id: $id) {\r\n            ...ProductDetail\r\n        }\r\n    }\r\n    ${PRODUCT_DETAIL_FRAGMENT}\r\n`;\nclass ProductDetailComponent extends TypedBaseDetailComponent {\n    constructor(productDetailService, formBuilder, modalService, notificationService, dataService, changeDetector) {\n        super();\n        this.productDetailService = productDetailService;\n        this.formBuilder = formBuilder;\n        this.modalService = modalService;\n        this.notificationService = notificationService;\n        this.dataService = dataService;\n        this.changeDetector = changeDetector;\n        this.customFields = this.getCustomFieldConfig('Product');\n        this.detailForm = this.formBuilder.group({\n            enabled: true,\n            name: ['', Validators.required],\n            autoUpdateVariantNames: true,\n            slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9._-]+$/)],\n            description: '',\n            facetValueIds: [[]],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.assetChanges = {};\n        this.createVariantsConfig = { groups: [], variants: [], stockLocationId: '' };\n        this.updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\n    }\n    ngOnInit() {\n        this.init();\n        const productFacetValues$ = this.isNew$.pipe(switchMap(isNew => {\n            return isNew ? of([]) : this.entity$.pipe(map(product => product.facetValues));\n        }));\n        const productGroup = this.detailForm;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const formFacetValueIdChanges$ = productGroup.get('facetValueIds').valueChanges.pipe(distinctUntilChanged(), switchMap(ids => this.dataService.facet\n            .getFacetValues({ filter: { id: { in: ids } } })\n            .mapSingle(({ facetValues }) => facetValues.items)), shareReplay(1));\n        this.facetValues$ = concat(productFacetValues$.pipe(take(1)), productFacetValues$.pipe(switchMap(() => formFacetValueIdChanges$)));\n        this.productChannels$ = this.entity$.pipe(map(p => p.channels));\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    isDefaultChannel(channelCode) {\n        return channelCode === DEFAULT_CHANNEL_CODE;\n    }\n    assignToChannel() {\n        this.productChannels$\n            .pipe(take(1), switchMap(channels => this.modalService.fromComponent(AssignProductsToChannelDialogComponent, {\n            size: 'lg',\n            locals: {\n                productIds: [this.id],\n                currentChannelIds: channels.map(c => c.id),\n            },\n        })))\n            .subscribe();\n    }\n    removeFromChannel(channelId) {\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\n            .pipe(switchMap(({ channelCode }) => this.modalService.dialog({\n            title: marker('catalog.remove-product-from-channel'),\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                {\n                    type: 'danger',\n                    label: marker('catalog.remove-from-channel'),\n                    translationVars: { channelCode },\n                    returnValue: true,\n                },\n            ],\n        })), switchMap(response => response\n            ? this.dataService.product.removeProductsFromChannel({\n                channelId,\n                productIds: [this.id],\n            })\n            : EMPTY))\n            .subscribe(() => {\n            this.notificationService.success(marker('catalog.notify-remove-product-from-channel-success'));\n        }, err => {\n            this.notificationService.error(marker('catalog.notify-remove-product-from-channel-error'));\n        });\n    }\n    assignVariantToChannel(variant) {\n        return this.modalService\n            .fromComponent(AssignProductsToChannelDialogComponent, {\n            size: 'lg',\n            locals: {\n                productIds: [this.id],\n                productVariantIds: [variant.id],\n                currentChannelIds: variant.channels.map(c => c.id),\n            },\n        })\n            .subscribe();\n    }\n    removeVariantFromChannel({ channelId, variant }) {\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\n            .pipe(switchMap(({ channelCode }) => this.modalService.dialog({\n            title: marker('catalog.remove-product-variant-from-channel'),\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                {\n                    type: 'danger',\n                    label: marker('catalog.remove-from-channel'),\n                    translationVars: { channelCode },\n                    returnValue: true,\n                },\n            ],\n        })), switchMap(response => response\n            ? this.dataService.product.removeVariantsFromChannel({\n                channelId,\n                productVariantIds: [variant.id],\n            })\n            : EMPTY))\n            .subscribe(() => {\n            this.notificationService.success(marker('catalog.notify-remove-variant-from-channel-success'));\n        }, err => {\n            this.notificationService.error(marker('catalog.notify-remove-variant-from-channel-error'));\n        });\n    }\n    assetsChanged() {\n        return !!Object.values(this.assetChanges).length;\n    }\n    /**\n     * If creating a new product, automatically generate the slug based on the product name.\n     */\n    updateSlug(nameValue) {\n        const slugControl = this.detailForm.get('slug');\n        const currentTranslation = this.entity ? findTranslation(this.entity, this.languageCode) : undefined;\n        const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\n        if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\n            slugControl.setValue(normalizeString(`${nameValue}`, '-'));\n        }\n    }\n    selectProductFacetValue() {\n        this.displayFacetValueModal().subscribe(facetValueIds => {\n            if (facetValueIds) {\n                const productGroup = this.detailForm;\n                const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\n                productGroup.patchValue({\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\n                });\n                productGroup.markAsDirty();\n                this.changeDetector.markForCheck();\n            }\n        });\n    }\n    removeProductFacetValue(facetValueId) {\n        const productGroup = this.detailForm;\n        const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\n        productGroup.patchValue({\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\n        });\n        productGroup.markAsDirty();\n    }\n    displayFacetValueModal() {\n        return this.modalService\n            .fromComponent(ApplyFacetDialogComponent, {\n            size: 'md',\n            closable: true,\n        })\n            .pipe(map(facetValues => facetValues && facetValues.map(v => v.id)));\n    }\n    create() {\n        const productGroup = this.detailForm;\n        if (!productGroup.dirty) {\n            return;\n        }\n        const newProduct = this.getUpdatedProduct({\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            enabled: true,\n            languageCode: this.languageCode,\n            name: '',\n            slug: '',\n            featuredAsset: null,\n            assets: [],\n            description: '',\n            translations: [],\n            optionGroups: [],\n            facetValues: [],\n            channels: [],\n        }, productGroup, this.languageCode);\n        this.productDetailService\n            .createProductWithVariants(newProduct, this.createVariantsConfig, this.languageCode)\n            .subscribe(({ createProductVariants, productId }) => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Product',\n            });\n            this.assetChanges = {};\n            this.detailForm.markAsPristine();\n            this.router.navigate(['../', productId], { relativeTo: this.route });\n        }, err => {\n            // eslint-disable-next-line no-console\n            console.error(err);\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Product',\n            });\n        });\n    }\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([product, languageCode]) => {\n            const productGroup = this.detailForm;\n            let productInput;\n            let variantsInput;\n            if (productGroup.dirty || this.assetsChanged()) {\n                productInput = this.getUpdatedProduct(product, productGroup, languageCode);\n            }\n            return this.productDetailService.updateProduct({\n                product,\n                languageCode,\n                autoUpdate: this.detailForm.get(['autoUpdateVariantNames'])?.value ?? false,\n                productInput,\n                variantsInput,\n            });\n        }))\n            .subscribe(result => {\n            this.updateSlugAfterSave(result);\n            this.detailForm.markAsPristine();\n            this.assetChanges = {};\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Product',\n            });\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Product',\n            });\n        });\n    }\n    canDeactivate() {\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\n    }\n    /**\n     * Sets the values of the form on changes to the product or current language.\n     */\n    setFormValues(product, languageCode) {\n        const currentTranslation = findTranslation(product, languageCode);\n        this.detailForm.patchValue({\n            enabled: product.enabled,\n            name: currentTranslation ? currentTranslation.name : '',\n            slug: currentTranslation ? currentTranslation.slug : '',\n            description: currentTranslation ? currentTranslation.description : '',\n            facetValueIds: product.facetValues.map(fv => fv.id),\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), product, currentTranslation);\n        }\n    }\n    /**\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\n     * can then be persisted to the API.\n     */\n    getUpdatedProduct(product, productFormGroup, languageCode) {\n        const updatedProduct = createUpdatedTranslatable({\n            translatable: product,\n            updatedFields: productFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: product.name || '',\n                slug: product.slug || '',\n                description: product.description || '',\n            },\n        });\n        return {\n            ...updatedProduct,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            facetValueIds: productFormGroup.value.facetValueIds,\n        };\n    }\n    /**\n     * The server may alter the slug value in order to normalize and ensure uniqueness upon saving.\n     */\n    updateSlugAfterSave(results) {\n        const firstResult = results[0];\n        const slugControl = this.detailForm.get(['product', 'slug']);\n        function isUpdateMutation(input) {\n            return input.hasOwnProperty('updateProduct');\n        }\n        if (slugControl && isUpdateMutation(firstResult)) {\n            slugControl.setValue(firstResult.updateProduct.slug, { emitEvent: false });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductDetailComponent, deps: [{ token: ProductDetailService }, { token: i2.FormBuilder }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ProductDetailComponent, selector: \"vdr-product-detail2\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-flex-row\\\"></div>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine || createVariantsConfig.variants.length === 0\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"product-detail\\\"></vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n                <vdr-card *vdrIfMultichannel [title]=\\\"'common.channels' | translate\\\">\\r\\n                    <vdr-form-item *vdrIfDefaultChannelActive>\\r\\n                        <div class=\\\"flex channel-assignment\\\">\\r\\n                            <div class=\\\"mb-2\\\">\\r\\n                                <ng-container *ngFor=\\\"let channel of productChannels$ | async\\\">\\r\\n                                    <vdr-chip\\r\\n                                        *ngIf=\\\"!isDefaultChannel(channel.code)\\\"\\r\\n                                        icon=\\\"times-circle\\\"\\r\\n                                        (iconClick)=\\\"removeFromChannel(channel.id)\\\"\\r\\n                                    >\\r\\n                                        <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                                        {{ channel.code | channelCodeToLabel }}\\r\\n                                    </vdr-chip>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                            <button class=\\\"button-small\\\" (click)=\\\"assignToChannel()\\\">\\r\\n                                <clr-icon shape=\\\"layers\\\"></clr-icon>\\r\\n                                {{ 'common.assign-to-channel' | translate }}\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </vdr-form-item>\\r\\n                </vdr-card>\\r\\n            </ng-container>\\r\\n            <vdr-card *ngIf=\\\"entity?.optionGroups.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let optionGroup of entity?.optionGroups | sort : 'id'\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        {{ optionGroup.name }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a [routerLink]=\\\"['options']\\\" class=\\\"button-small mt-2\\\" *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeProductFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectProductFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <div>\\r\\n                        <vdr-form-field [label]=\\\"'catalog.product-name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                id=\\\"name\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                                (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <div *ngIf=\\\"(isNew$ | async) === false && detailForm.get(['name'])?.dirty\\\">\\r\\n                            <clr-checkbox-wrapper>\\r\\n                                <input\\r\\n                                    clrCheckbox\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    id=\\\"auto-update\\\"\\r\\n                                    formControlName=\\\"autoUpdateVariantNames\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Product\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'catalog.product-variants' | translate\\\" [paddingX]=\\\"isNew$ | async\\\">\\r\\n                <div *ngIf=\\\"isNew$ | async; else variantList\\\">\\r\\n                    <vdr-generate-product-variants\\r\\n                        (variantsChange)=\\\"createVariantsConfig = $event\\\"\\r\\n                    ></vdr-generate-product-variants>\\r\\n                </div>\\r\\n                <ng-template #variantList>\\r\\n                    <vdr-product-variant-list\\r\\n                        [productId]=\\\"this.id\\\"\\r\\n                        dataTableId=\\\"product-detail-variants-list\\\"\\r\\n                        [hideLanguageSelect]=\\\"true\\\"\\r\\n                    ></vdr-product-variant-list>\\r\\n                </ng-template>\\r\\n                <div class=\\\"mx-3\\\" *ngIf=\\\"(isNew$ | async) === false\\\">\\r\\n                    <a class=\\\"button\\\" [routerLink]=\\\"['manage-variants']\\\">\\r\\n                        <clr-icon shape=\\\"add-text\\\"></clr-icon>\\r\\n                        {{ 'catalog.manage-variants' | translate }}</a\\r\\n                    >\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\":host ::ng-deep trix-toolbar{top:24px}.facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-action-bar clr-toggle-wrapper{margin-top:12px}.variant-filter{flex:1;display:flex}.variant-filter input{flex:1;max-width:initial;border-radius:3px 0 0 3px!important}.variant-filter .icon-button{border:1px solid var(--color-component-border-300);background-color:var(--color-component-bg-100);border-radius:0 3px 3px 0;border-inline-start:none}.group-name{padding-inline-end:6px}.view-mode{display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.view-mode{flex-direction:row}}.edit-variants-btn{margin-top:0}.channel-assignment{flex-wrap:wrap;min-height:24px}.pagination-row{display:flex;align-items:baseline;justify-content:space-between}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"directive\", type: i1.IfMultichannelDirective, selector: \"[vdrIfMultichannel]\", inputs: [\"vdrIfMultichannelElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.ChannelBadgeComponent, selector: \"vdr-channel-badge\", inputs: [\"channelCode\"] }, { kind: \"directive\", type: i1.IfDefaultChannelActiveDirective, selector: \"[vdrIfDefaultChannelActive]\", inputs: [\"vdrIfMultichannelElse\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: GenerateProductVariantsComponent, selector: \"vdr-generate-product-variants\", outputs: [\"variantsChange\"] }, { kind: \"component\", type: ProductVariantListComponent, selector: \"vdr-product-variant-list\", inputs: [\"productId\", \"hideLanguageSelect\", \"dataTableId\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-detail2', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-flex-row\\\"></div>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine || createVariantsConfig.variants.length === 0\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"product-detail\\\"></vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n                <vdr-card *vdrIfMultichannel [title]=\\\"'common.channels' | translate\\\">\\r\\n                    <vdr-form-item *vdrIfDefaultChannelActive>\\r\\n                        <div class=\\\"flex channel-assignment\\\">\\r\\n                            <div class=\\\"mb-2\\\">\\r\\n                                <ng-container *ngFor=\\\"let channel of productChannels$ | async\\\">\\r\\n                                    <vdr-chip\\r\\n                                        *ngIf=\\\"!isDefaultChannel(channel.code)\\\"\\r\\n                                        icon=\\\"times-circle\\\"\\r\\n                                        (iconClick)=\\\"removeFromChannel(channel.id)\\\"\\r\\n                                    >\\r\\n                                        <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                                        {{ channel.code | channelCodeToLabel }}\\r\\n                                    </vdr-chip>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                            <button class=\\\"button-small\\\" (click)=\\\"assignToChannel()\\\">\\r\\n                                <clr-icon shape=\\\"layers\\\"></clr-icon>\\r\\n                                {{ 'common.assign-to-channel' | translate }}\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </vdr-form-item>\\r\\n                </vdr-card>\\r\\n            </ng-container>\\r\\n            <vdr-card *ngIf=\\\"entity?.optionGroups.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let optionGroup of entity?.optionGroups | sort : 'id'\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        {{ optionGroup.name }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a [routerLink]=\\\"['options']\\\" class=\\\"button-small mt-2\\\" *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeProductFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectProductFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <div>\\r\\n                        <vdr-form-field [label]=\\\"'catalog.product-name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                id=\\\"name\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                                (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <div *ngIf=\\\"(isNew$ | async) === false && detailForm.get(['name'])?.dirty\\\">\\r\\n                            <clr-checkbox-wrapper>\\r\\n                                <input\\r\\n                                    clrCheckbox\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    id=\\\"auto-update\\\"\\r\\n                                    formControlName=\\\"autoUpdateVariantNames\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Product\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'catalog.product-variants' | translate\\\" [paddingX]=\\\"isNew$ | async\\\">\\r\\n                <div *ngIf=\\\"isNew$ | async; else variantList\\\">\\r\\n                    <vdr-generate-product-variants\\r\\n                        (variantsChange)=\\\"createVariantsConfig = $event\\\"\\r\\n                    ></vdr-generate-product-variants>\\r\\n                </div>\\r\\n                <ng-template #variantList>\\r\\n                    <vdr-product-variant-list\\r\\n                        [productId]=\\\"this.id\\\"\\r\\n                        dataTableId=\\\"product-detail-variants-list\\\"\\r\\n                        [hideLanguageSelect]=\\\"true\\\"\\r\\n                    ></vdr-product-variant-list>\\r\\n                </ng-template>\\r\\n                <div class=\\\"mx-3\\\" *ngIf=\\\"(isNew$ | async) === false\\\">\\r\\n                    <a class=\\\"button\\\" [routerLink]=\\\"['manage-variants']\\\">\\r\\n                        <clr-icon shape=\\\"add-text\\\"></clr-icon>\\r\\n                        {{ 'catalog.manage-variants' | translate }}</a\\r\\n                    >\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\":host ::ng-deep trix-toolbar{top:24px}.facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-action-bar clr-toggle-wrapper{margin-top:12px}.variant-filter{flex:1;display:flex}.variant-filter input{flex:1;max-width:initial;border-radius:3px 0 0 3px!important}.variant-filter .icon-button{border:1px solid var(--color-component-border-300);background-color:var(--color-component-bg-100);border-radius:0 3px 3px 0;border-inline-start:none}.group-name{padding-inline-end:6px}.view-mode{display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.view-mode{flex-direction:row}}.edit-variants-btn{margin-top:0}.channel-assignment{flex-wrap:wrap;min-height:24px}.pagination-row{display:flex;align-items:baseline;justify-content:space-between}\\n\"] }]\n        }], ctorParameters: () => [{ type: ProductDetailService }, { type: i2.FormBuilder }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.DataService }, { type: i0.ChangeDetectorRef }] });\n\nconst deleteProductsBulkAction = {\n    location: 'product-list',\n    label: marker('common.delete'),\n    icon: 'trash',\n    iconClass: 'is-danger',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteProduct) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        modalService\n            .dialog({\n            title: marker('catalog.confirm-bulk-delete-products'),\n            translationVars: {\n                count: selection.length,\n            },\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(response => response ? dataService.product.deleteProducts(unique(selection.map(p => p.id))) : EMPTY))\n            .subscribe(result => {\n            let deleted = 0;\n            const errors = [];\n            for (const item of result.deleteProducts) {\n                if (item.result === DeletionResult.DELETED) {\n                    deleted++;\n                }\n                else if (item.message) {\n                    errors.push(item.message);\n                }\n            }\n            if (0 < deleted) {\n                notificationService.success(marker('catalog.notify-bulk-delete-products-success'), {\n                    count: deleted,\n                });\n            }\n            if (0 < errors.length) {\n                notificationService.error(errors.join('\\n'));\n            }\n            hostComponent.refresh();\n            clearSelection();\n        });\n    },\n};\nconst assignProductsToChannelBulkAction = {\n    location: 'product-list',\n    label: marker('common.assign-to-channel'),\n    icon: 'layers',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\n    onClick: ({ injector, selection, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent(AssignProductsToChannelDialogComponent, {\n            size: 'lg',\n            locals: {\n                productIds: unique(selection.map(p => p.id)),\n                currentChannelIds: [],\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n            }\n        });\n    },\n};\nconst removeProductsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'product-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, productIds, channelId) => dataService.product\n        .removeProductsFromChannel({\n        channelId: channelId,\n        productIds,\n    })\n        .pipe(map(res => res.removeProductsFromChannel)),\n});\nconst assignFacetValuesToProductsBulkAction = {\n    location: 'product-list',\n    label: marker('catalog.edit-facet-values'),\n    icon: 'tag',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const notificationService = injector.get(NotificationService);\n        const mode = 'product';\n        const ids = unique(selection.map(p => p.id));\n        return modalService\n            .fromComponent(BulkAddFacetValuesDialogComponent, {\n            size: 'xl',\n            locals: {\n                mode,\n                ids,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                notificationService.success(marker('common.notify-bulk-update-success'), {\n                    count: selection.length,\n                    entity: mode === 'product' ? 'Products' : 'ProductVariants',\n                });\n                clearSelection();\n            }\n        });\n    },\n};\nconst duplicateProductsBulkAction = {\n    location: 'product-list',\n    label: marker('common.duplicate'),\n    icon: 'copy',\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent((DuplicateEntityDialogComponent), {\n            locals: {\n                entities: selection,\n                entityName: 'Product',\n                title: marker('catalog.duplicate-products'),\n                getEntityName: entity => entity.name,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n                hostComponent.refresh();\n            }\n        });\n    },\n};\n\nclass ProductListComponent extends TypedBaseListComponent {\n    constructor(dataService, modalService, notificationService, jobQueueService) {\n        super();\n        this.dataService = dataService;\n        this.modalService = modalService;\n        this.notificationService = notificationService;\n        this.jobQueueService = jobQueueService;\n        this.pendingSearchIndexUpdates = 0;\n        this.dataTableListId = 'product-list';\n        this.pageLocationId = 'product-list';\n        this.customFields = this.getCustomFieldConfig('Product');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilters([\n            {\n                name: 'enabled',\n                type: { kind: 'boolean' },\n                label: marker('common.enabled'),\n                filterField: 'enabled',\n            },\n            {\n                name: 'slug',\n                type: { kind: 'text' },\n                label: marker('common.slug'),\n                filterField: 'slug',\n            },\n        ])\n            .addFilter({\n            name: 'facetValues',\n            type: {\n                kind: 'custom',\n                component: FacetValueFormInputComponent,\n                serializeValue: value => value.map(v => v.id).join(','),\n                deserializeValue: value => value.split(',').map(id => ({ id })),\n                getLabel: value => {\n                    if (value.length === 0) {\n                        return '';\n                    }\n                    if (value[0].name) {\n                        return value.map(v => v.name).join(', ');\n                    }\n                    else {\n                        return lastValueFrom(this.dataService.facet\n                            .getFacetValues({ filter: { id: { in: value.map(v => v.id) } } })\n                            .mapSingle(({ facetValues }) => facetValues.items.map(fv => fv.name).join(', ')));\n                    }\n                },\n            },\n            label: marker('catalog.facet-values'),\n            toFilterInput: (value) => ({\n                facetValueId: {\n                    in: value.map(v => v.id),\n                },\n            }),\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSorts([\n            { name: 'id' },\n            { name: 'createdAt' },\n            { name: 'updatedAt' },\n            { name: 'name' },\n            { name: 'slug' },\n        ])\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        this.configure({\n            document: ProductListQueryDocument,\n            getItems: data => data.products,\n            setVariables: (skip, take) => {\n                const searchTerm = this.searchTermControl.value;\n                let filterInput = this.filters.createFilterInput();\n                if (searchTerm) {\n                    filterInput = {\n                        name: {\n                            contains: searchTerm,\n                        },\n                        sku: {\n                            contains: searchTerm,\n                        },\n                    };\n                }\n                return {\n                    options: {\n                        skip,\n                        take,\n                        filter: {\n                            ...(filterInput ?? {}),\n                        },\n                        filterOperator: searchTerm ? LogicalOperator.OR : LogicalOperator.AND,\n                        sort: this.sorts.createSortInput(),\n                    },\n                };\n            },\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\n        });\n    }\n    rebuildSearchIndex() {\n        this.dataService.product.reindex().subscribe(({ reindex }) => {\n            this.notificationService.info(marker('catalog.reindexing'));\n            this.jobQueueService.addJob(reindex.id, job => {\n                if (job.state === JobState.COMPLETED) {\n                    const time = new Intl.NumberFormat().format(job.duration || 0);\n                    this.notificationService.success(marker('catalog.reindex-successful'), {\n                        count: job.result.indexedItemCount,\n                        time,\n                    });\n                    this.refresh();\n                }\n                else {\n                    this.notificationService.error(marker('catalog.reindex-error'));\n                }\n            });\n        });\n    }\n    deleteProduct(productId) {\n        this.modalService\n            .dialog({\n            title: marker('catalog.confirm-delete-product'),\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(response => (response ? this.dataService.product.deleteProduct(productId) : EMPTY)), \n        // Short delay to allow the product to be removed from the search index before\n        // refreshing.\n        delay(500))\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-delete-success'), {\n                entity: 'Product',\n            });\n            this.refresh();\n        }, err => {\n            this.notificationService.error(marker('common.notify-delete-error'), {\n                entity: 'Product',\n            });\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductListComponent, deps: [{ token: i1.DataService }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.JobQueueService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ProductListComponent, selector: \"vdr-products-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items [locationId]=\\\"pageLocationId\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateProduct']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-product' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu [alwaysShow]=\\\"true\\\" [locationId]=\\\"pageLocationId\\\">\\r\\n                <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"rebuildSearchIndex()\\\">\\r\\n                    <clr-icon shape=\\\"refresh\\\" class=\\\"\\\"></clr-icon>\\r\\n                    {{ 'catalog.rebuild-search-index' | translate }}\\r\\n                </button>\\r\\n            </vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"dataTableListId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'settings.search-by-product-name-or-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"product.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', product.id]\\\"\\r\\n                ><span>{{ product.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"product.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!product.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.number-of-variants' | translate\\\" id=\\\"number-of-variants\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ 'catalog.variant-count' | translate : { count: product.variantList?.totalItems } }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-products-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items [locationId]=\\\"pageLocationId\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateProduct']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-product' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu [alwaysShow]=\\\"true\\\" [locationId]=\\\"pageLocationId\\\">\\r\\n                <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"rebuildSearchIndex()\\\">\\r\\n                    <clr-icon shape=\\\"refresh\\\" class=\\\"\\\"></clr-icon>\\r\\n                    {{ 'catalog.rebuild-search-index' | translate }}\\r\\n                </button>\\r\\n            </vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"dataTableListId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'settings.search-by-product-name-or-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"product.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', product.id]\\\"\\r\\n                ><span>{{ product.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"product.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!product.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.number-of-variants' | translate\\\" id=\\\"number-of-variants\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ 'catalog.variant-count' | translate : { count: product.variantList?.totalItems } }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.JobQueueService }] });\n\nclass VariantPriceDetailComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.priceChange$ = new BehaviorSubject(0);\n        this.taxCategoryIdChange$ = new BehaviorSubject('');\n    }\n    ngOnInit() {\n        const taxRates$ = this.dataService.settings\n            .getTaxRatesSimple(999, 0, 'cache-first')\n            .mapStream(data => data.taxRates.items);\n        const activeChannel$ = this.dataService.settings\n            .getActiveChannel('cache-first')\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel);\n        this.taxRate$ = combineLatest(activeChannel$, taxRates$, this.taxCategoryIdChange$).pipe(map(([channel, taxRates, taxCategoryId]) => {\n            const defaultTaxZone = channel.defaultTaxZone;\n            if (!defaultTaxZone) {\n                return 0;\n            }\n            const applicableRate = taxRates.find(taxRate => taxRate.zone.id === defaultTaxZone.id && taxRate.category.id === taxCategoryId);\n            if (!applicableRate) {\n                return 0;\n            }\n            return applicableRate.value;\n        }));\n        this.grossPrice$ = combineLatest(this.taxRate$, this.priceChange$).pipe(map(([taxRate, price]) => Math.round(price * ((100 + taxRate) / 100))));\n    }\n    ngOnChanges(changes) {\n        if ('price' in changes) {\n            this.priceChange$.next(changes.price.currentValue);\n        }\n        if ('taxCategoryId' in changes) {\n            this.taxCategoryIdChange$.next(changes.taxCategoryId.currentValue);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: VariantPriceDetailComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: VariantPriceDetailComponent, selector: \"vdr-variant-price-detail\", inputs: { priceIncludesTax: \"priceIncludesTax\", price: \"price\", currencyCode: \"currencyCode\", taxCategoryId: \"taxCategoryId\" }, usesOnChanges: true, ngImport: i0, template: \"<label class=\\\"clr-control-label\\\">{{ 'catalog.taxes' | translate }}</label>\\r\\n<div *ngIf=\\\"priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{ 'catalog.price-includes-tax-at' | translate: { rate: taxRate$ | async } }}\\r\\n</div>\\r\\n<div *ngIf=\\\"!priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{\\r\\n        'catalog.price-with-tax-in-default-zone'\\r\\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\\r\\n    }}\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;flex-direction:column}.value{margin-top:3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: VariantPriceDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-variant-price-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label class=\\\"clr-control-label\\\">{{ 'catalog.taxes' | translate }}</label>\\r\\n<div *ngIf=\\\"priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{ 'catalog.price-includes-tax-at' | translate: { rate: taxRate$ | async } }}\\r\\n</div>\\r\\n<div *ngIf=\\\"!priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{\\r\\n        'catalog.price-with-tax-in-default-zone'\\r\\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\\r\\n    }}\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;flex-direction:column}.value{margin-top:3px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }], propDecorators: { priceIncludesTax: [{\n                type: Input\n            }], price: [{\n                type: Input\n            }], currencyCode: [{\n                type: Input\n            }], taxCategoryId: [{\n                type: Input\n            }] } });\n\nclass VariantPriceStrategyDetailComponent {\n    calculatedPriceDiffersFromInputPrice() {\n        const defaultPrice = this.variant.prices.find(p => p.currencyCode === this.channelDefaultCurrencyCode) ??\n            this.variant.prices[0];\n        if (!defaultPrice) {\n            return false;\n        }\n        if (this.channelPriceIncludesTax) {\n            return this.variant.priceWithTax !== defaultPrice.price;\n        }\n        else {\n            return this.variant.price !== defaultPrice.price;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: VariantPriceStrategyDetailComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: VariantPriceStrategyDetailComponent, selector: \"vdr-variant-price-strategy-detail\", inputs: { channelPriceIncludesTax: \"channelPriceIncludesTax\", variant: \"variant\", channelDefaultCurrencyCode: \"channelDefaultCurrencyCode\" }, ngImport: i0, template: \"<div *ngIf=\\\"calculatedPriceDiffersFromInputPrice()\\\" class=\\\"price-strategy-detail\\\">\\r\\n    <vdr-form-item\\r\\n        [label]=\\\"'catalog.calculated-price' | translate\\\"\\r\\n        [tooltip]=\\\"'catalog.calculated-price-tooltip' | translate\\\"\\r\\n        for=\\\"price\\\"\\r\\n    >\\r\\n    </vdr-form-item>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-item [label]=\\\"'common.price' | translate\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </vdr-form-item>\\r\\n        <vdr-form-item [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </vdr-form-item>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.price-strategy-detail{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}\\n\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: VariantPriceStrategyDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-variant-price-strategy-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div *ngIf=\\\"calculatedPriceDiffersFromInputPrice()\\\" class=\\\"price-strategy-detail\\\">\\r\\n    <vdr-form-item\\r\\n        [label]=\\\"'catalog.calculated-price' | translate\\\"\\r\\n        [tooltip]=\\\"'catalog.calculated-price-tooltip' | translate\\\"\\r\\n        for=\\\"price\\\"\\r\\n    >\\r\\n    </vdr-form-item>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-item [label]=\\\"'common.price' | translate\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </vdr-form-item>\\r\\n        <vdr-form-item [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </vdr-form-item>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.price-strategy-detail{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}\\n\"] }]\n        }], propDecorators: { channelPriceIncludesTax: [{\n                type: Input\n            }], variant: [{\n                type: Input\n            }], channelDefaultCurrencyCode: [{\n                type: Input\n            }] } });\n\nconst GET_PRODUCT_VARIANTS_QUICK_JUMP = gql `\r\n    query GetProductVariantsQuickJump($id: ID!) {\r\n        product(id: $id) {\r\n            id\r\n            variants {\r\n                id\r\n                name\r\n                sku\r\n            }\r\n        }\r\n    }\r\n`;\nclass ProductVariantQuickJumpComponent {\n    constructor(dataService, router) {\n        this.dataService = dataService;\n        this.router = router;\n        this.searchFn = (term, item) => item.name.toLowerCase().includes(term.toLowerCase()) ||\n            item.sku.toLowerCase().includes(term.toLowerCase());\n    }\n    ngOnInit() {\n        this.variants$ = this.dataService\n            .query(GetProductVariantsQuickJumpDocument, {\n            id: this.productId,\n        })\n            .mapSingle(data => data.product?.variants ?? []);\n    }\n    onSelect(item) {\n        if (item) {\n            this.router\n                .navigate(['catalog', 'products', this.productId, 'variants', item.id])\n                .then(() => (this.selectedVariantId = undefined));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantQuickJumpComponent, deps: [{ token: i1.DataService }, { token: i1$1.Router }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ProductVariantQuickJumpComponent, selector: \"vdr-product-variant-quick-jump\", inputs: { productId: \"productId\" }, ngImport: i0, template: \"<ng-select\\r\\n    *ngIf=\\\"(variants$ | async)?.length > 1\\\"\\r\\n    [items]=\\\"variants$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedVariantId\\\"\\r\\n    [searchFn]=\\\"searchFn\\\"\\r\\n    [clearable]=\\\"false\\\"\\r\\n    [placeholder]=\\\"'catalog.quick-jump-placeholder' | translate\\\"\\r\\n    (change)=\\\"onSelect($event)\\\"\\r\\n>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\r\\n        {{ item.name }} ({{ item.sku }})\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"directive\", type: i5$1.NgOptionTemplateDirective, selector: \"[ng-option-tmp]\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantQuickJumpComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-variant-quick-jump', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-select\\r\\n    *ngIf=\\\"(variants$ | async)?.length > 1\\\"\\r\\n    [items]=\\\"variants$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedVariantId\\\"\\r\\n    [searchFn]=\\\"searchFn\\\"\\r\\n    [clearable]=\\\"false\\\"\\r\\n    [placeholder]=\\\"'catalog.quick-jump-placeholder' | translate\\\"\\r\\n    (change)=\\\"onSelect($event)\\\"\\r\\n>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\r\\n        {{ item.name }} ({{ item.sku }})\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1$1.Router }], propDecorators: { productId: [{\n                type: Input\n            }] } });\n\nclass ProductVariantDetailComponent extends TypedBaseDetailComponent {\n    constructor(productDetailService, formBuilder, modalService, notificationService, dataService, changeDetector) {\n        super();\n        this.productDetailService = productDetailService;\n        this.formBuilder = formBuilder;\n        this.modalService = modalService;\n        this.notificationService = notificationService;\n        this.dataService = dataService;\n        this.changeDetector = changeDetector;\n        this.updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\n        this.customFields = this.getCustomFieldConfig('ProductVariant');\n        this.customOptionFields = this.getCustomFieldConfig('ProductOption');\n        this.detailForm = this.formBuilder.group({\n            id: '',\n            enabled: false,\n            sku: '',\n            name: '',\n            taxCategoryId: '',\n            stockOnHand: 0,\n            useGlobalOutOfStockThreshold: true,\n            outOfStockThreshold: 0,\n            trackInventory: GlobalFlag.TRUE,\n            facetValueIds: [],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.stockLevelsForm = this.formBuilder.array([]);\n        this.pricesForm = this.formBuilder.array([]);\n        this.assetChanges = {};\n        this.GlobalFlag = GlobalFlag;\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.settings.getGlobalSettings('cache-first').single$.subscribe(({ globalSettings }) => {\n            this.globalTrackInventory = globalSettings.trackInventory;\n            this.globalOutOfStockThreshold = globalSettings.outOfStockThreshold;\n            this.changeDetector.markForCheck();\n        });\n        this.taxCategories$ = this.result$.pipe(map(data => data.taxCategories.items));\n        const availableCurrencyCodes$ = this.result$.pipe(tap(data => (this.channelDefaultCurrencyCode = data.activeChannel.defaultCurrencyCode)), map(data => data.activeChannel.availableCurrencyCodes));\n        this.unusedCurrencyCodes$ = combineLatest(this.pricesForm.valueChanges, availableCurrencyCodes$).pipe(map(([prices, currencyCodes]) => currencyCodes.filter(code => !prices.map(p => p.currencyCode).includes(code))));\n        const stockLocations$ = this.result$.pipe(map(data => data.stockLocations.items));\n        this.unusedStockLocation$ = combineLatest(this.entity$, stockLocations$).pipe(map(([entity, stockLocations]) => {\n            const usedIds = entity.stockLevels.map(l => l.stockLocation.id);\n            return stockLocations.filter(l => !usedIds.includes(l.id));\n        }));\n        this.channelPriceIncludesTax$ = this.dataService.settings\n            .getActiveChannel('cache-first')\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel.pricesIncludeTax)\n            .pipe(shareReplay(1));\n        this.stockLevels$ = this.entity$.pipe(map(entity => entity?.stockLevels ?? []));\n        const facetValues$ = this.entity$.pipe(map(variant => variant.facetValues ?? []));\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const formFacetValueIdChanges$ = this.detailForm.get('facetValueIds').valueChanges.pipe(skip(1), distinctUntilChanged(), switchMap(ids => this.dataService.facet\n            .getFacetValues({ filter: { id: { in: ids } } })\n            .mapSingle(({ facetValues }) => facetValues.items)), shareReplay(1));\n        this.facetValues$ = concat(facetValues$.pipe(take(1)), facetValues$.pipe(switchMapTo(formFacetValueIdChanges$)));\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    addPriceInCurrency(currencyCode) {\n        this.pricesForm.push(this.formBuilder.group({\n            currencyCode,\n            price: 0,\n            delete: false,\n        }));\n    }\n    toggleDeletePrice(deleteFormControl) {\n        deleteFormControl.setValue(!deleteFormControl.value);\n        deleteFormControl.markAsDirty();\n    }\n    addStockLocation(stockLocation) {\n        this.stockLevelsForm.push(this.formBuilder.group({\n            stockLocationId: stockLocation.id,\n            stockLocationName: stockLocation.name,\n            stockOnHand: 0,\n            stockAllocated: 0,\n        }));\n    }\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([variant, languageCode]) => {\n            const input = pick(this.getUpdatedVariant(variant, this.detailForm, languageCode), [\n                'id',\n                'enabled',\n                'translations',\n                'sku',\n                'taxCategoryId',\n                'facetValueIds',\n                'featuredAssetId',\n                'assetIds',\n                'trackInventory',\n                'outOfStockThreshold',\n                'useGlobalOutOfStockThreshold',\n                'customFields',\n            ]);\n            if (this.stockLevelsForm.dirty) {\n                input.stockLevels = this.stockLevelsForm.controls\n                    .filter(control => control.dirty)\n                    .map(control => ({\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    stockLocationId: control.value.stockLocationId,\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    stockOnHand: control.value.stockOnHand,\n                }));\n            }\n            if (this.pricesForm.dirty) {\n                input.prices = this.pricesForm.controls\n                    .filter(control => control.dirty)\n                    .map(control => ({\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    price: control.value.price,\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    currencyCode: control.value.currencyCode,\n                    delete: control.value.delete === true,\n                }));\n            }\n            return this.dataService.mutate(ProductVariantUpdateMutationDocument, {\n                input: [input],\n            });\n        }))\n            .subscribe(result => {\n            this.detailForm.markAsPristine();\n            this.stockLevelsForm.markAsPristine();\n            this.pricesForm.markAsPristine();\n            this.assetChanges = {};\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'ProductVariant',\n            });\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'ProductVariant',\n            });\n        });\n    }\n    assetsChanged() {\n        return !!Object.values(this.assetChanges).length;\n    }\n    inventoryIsNotTracked(formGroup) {\n        const trackInventory = formGroup.get('trackInventory')?.value;\n        return (trackInventory === GlobalFlag.FALSE ||\n            (trackInventory === GlobalFlag.INHERIT && this.globalTrackInventory === false));\n    }\n    optionGroupCode(optionGroupId) {\n        const group = this.entity?.product.optionGroups.find(g => g.id === optionGroupId);\n        return group?.code;\n    }\n    optionName(option) {\n        const translation = option.translations.find(t => t.languageCode === this.languageCode) ?? option.translations[0];\n        return translation.name;\n    }\n    removeFacetValue(facetValueId) {\n        const productGroup = this.detailForm;\n        const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\n        productGroup.patchValue({\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\n        });\n        productGroup.markAsDirty();\n    }\n    selectFacetValue() {\n        this.displayFacetValueModal().subscribe(facetValueIds => {\n            if (facetValueIds) {\n                const currentFacetValueIds = this.detailForm.value.facetValueIds ?? [];\n                this.detailForm.patchValue({\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\n                });\n                this.detailForm.markAsDirty();\n            }\n        });\n    }\n    displayFacetValueModal() {\n        return this.modalService\n            .fromComponent(ApplyFacetDialogComponent, {\n            size: 'md',\n            closable: true,\n        })\n            .pipe(map(facetValues => facetValues && facetValues.map(v => v.id)));\n    }\n    setFormValues(variant, languageCode) {\n        const variantTranslation = findTranslation(variant, languageCode);\n        const facetValueIds = variant.facetValues.map(fv => fv.id);\n        this.detailForm.patchValue({\n            id: variant.id,\n            enabled: variant.enabled,\n            sku: variant.sku,\n            name: variantTranslation ? variantTranslation.name : '',\n            taxCategoryId: variant.taxCategory.id,\n            stockOnHand: variant.stockLevels[0]?.stockOnHand ?? 0,\n            useGlobalOutOfStockThreshold: variant.useGlobalOutOfStockThreshold,\n            outOfStockThreshold: variant.outOfStockThreshold,\n            trackInventory: variant.trackInventory,\n            facetValueIds,\n        });\n        this.stockLevelsForm.clear();\n        for (const stockLevel of variant.stockLevels) {\n            this.stockLevelsForm.push(this.formBuilder.group({\n                stockLocationId: stockLevel.stockLocation.id,\n                stockLocationName: stockLevel.stockLocation.name,\n                stockOnHand: stockLevel.stockOnHand,\n                stockAllocated: stockLevel.stockAllocated,\n            }));\n        }\n        this.pricesForm.clear();\n        for (const price of variant.prices) {\n            this.pricesForm.push(this.formBuilder.group({\n                price: price.price,\n                currencyCode: price.currencyCode,\n                delete: false,\n            }));\n        }\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), variant, variantTranslation);\n        }\n    }\n    /**\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\n     * can then be persisted to the API.\n     */\n    getUpdatedVariant(variant, variantFormGroup, languageCode) {\n        const updatedProduct = createUpdatedTranslatable({\n            translatable: variant,\n            updatedFields: variantFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: variant.name || '',\n            },\n        });\n        return {\n            ...updatedProduct,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            facetValueIds: variantFormGroup.value.facetValueIds,\n            taxCategoryId: variantFormGroup.value.taxCategoryId,\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantDetailComponent, deps: [{ token: ProductDetailService }, { token: i2.FormBuilder }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ProductVariantDetailComponent, selector: \"vdr-product-variant-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left [grow]=\\\"true\\\">\\r\\n            <div class=\\\"flex center\\\">\\r\\n                <ng-container *ngIf=\\\"availableLanguages$ | async as availableLanguages\\\">\\r\\n                    <vdr-language-selector\\r\\n                        *ngIf=\\\"availableLanguages.length > 1\\\"\\r\\n                        class=\\\"mr-2\\\"\\r\\n                        [disabled]=\\\"isNew$ | async\\\"\\r\\n                        [availableLanguageCodes]=\\\"availableLanguages\\\"\\r\\n                        [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                    ></vdr-language-selector>\\r\\n                </ng-container>\\r\\n                <vdr-product-variant-quick-jump [productId]=\\\"entity?.product.id\\\" />\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-variant-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    (detailForm.invalid ||\\r\\n                        stockLevelsForm.invalid ||\\r\\n                        pricesForm.invalid ||\\r\\n                        (detailForm.pristine && stockLevelsForm.pristine && pricesForm.pristine)) &&\\r\\n                    !assetsChanged()\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"product-variant-detail\\\"></vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"entity$ | async as variant\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar\\r\\n            ><vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"variant.options.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let option of variant.options | sort : 'groupId'\\\"\\r\\n                        [colorFrom]=\\\"optionGroupCode(option.groupId)\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        <span>{{ optionGroupCode(option.groupId) }}:</span>\\r\\n                        {{ optionName(option) }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a\\r\\n                        [routerLink]=\\\"['../../', 'options']\\\"\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\" for=\\\"sku\\\">\\r\\n                        <input\\r\\n                            id=\\\"sku\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ProductVariant\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-variant-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            />\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || variant.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || variant.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.price-and-tax' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'catalog.tax-category' | translate\\\" for=\\\"taxCategory\\\">\\r\\n                        <select name=\\\"taxCategory\\\" formControlName=\\\"taxCategoryId\\\">\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-grid prices\\\" *ngFor=\\\"let price of pricesForm.controls\\\" [formGroup]=\\\"price\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            ('catalog.price' | translate) +\\r\\n                            (1 < pricesForm.length ? ' (' + price.value.currencyCode + ')' : '')\\r\\n                        \\\"\\r\\n                        [tooltip]=\\\"\\r\\n                            1 < pricesForm.length && price.value.currencyCode === channelDefaultCurrencyCode\\r\\n                                ? ('catalog.default-currency' | translate)\\r\\n                                : undefined\\r\\n                        \\\"\\r\\n                        for=\\\"price\\\"\\r\\n                    >\\r\\n                        <div class=\\\"price-wrapper\\\" [class.pending-deletion]=\\\"price.value.delete === true\\\">\\r\\n                            <vdr-currency-input\\r\\n                                name=\\\"price\\\"\\r\\n                                [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                                [readonly]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || price.value.delete === true\\r\\n                                \\\"\\r\\n                                formControlName=\\\"price\\\"\\r\\n                            />\\r\\n                            <div *ngIf=\\\"1 < pricesForm.controls.length\\\">\\r\\n                                <button\\r\\n                                    class=\\\"button-small delete-button\\\"\\r\\n                                    [disabled]=\\\"price.value.currencyCode === channelDefaultCurrencyCode\\\"\\r\\n                                    (click)=\\\"toggleDeletePrice(price.get('delete'))\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-variant-price-detail\\r\\n                        [price]=\\\"price.value.price\\\"\\r\\n                        [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                        [priceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                        [taxCategoryId]=\\\"detailForm.get('taxCategoryId')!.value\\\"\\r\\n                    />\\r\\n                </div>\\r\\n                <vdr-variant-price-strategy-detail\\r\\n                    [channelPriceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                    [channelDefaultCurrencyCode]=\\\"channelDefaultCurrencyCode\\\"\\r\\n                    [variant]=\\\"variant\\\"\\r\\n                />\\r\\n                <ng-container *ngIf=\\\"unusedCurrencyCodes$ | async as unusedCurrencyCodes\\\">\\r\\n                    <div *ngIf=\\\"unusedCurrencyCodes.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-price-in-another-currency' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let currencyCode of unusedCurrencyCodes\\\"\\r\\n                                    (click)=\\\"addPriceInCurrency(currencyCode)\\\"\\r\\n                                >\\r\\n                                    {{ currencyCode | localeCurrencyName }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.stock-levels' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        for=\\\"track-inventory\\\"\\r\\n                        [label]=\\\"'catalog.track-inventory' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"track-inventory\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option [value]=\\\"GlobalFlag.TRUE\\\">\\r\\n                                {{ 'catalog.track-inventory-true' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.FALSE\\\">\\r\\n                                {{ 'catalog.track-inventory-false' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.INHERIT\\\">\\r\\n                                {{ 'catalog.track-inventory-inherit' | translate }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"'catalog.out-of-stock-threshold' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"outOfStockThreshold\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                            [vdrDisabled]=\\\"\\r\\n                                detailForm.get('useGlobalOutOfStockThreshold')?.value !== false ||\\r\\n                                inventoryIsNotTracked(detailForm)\\r\\n                            \\\"\\r\\n                        />\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                name=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                formControlName=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                [vdrDisabled]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || inventoryIsNotTracked(detailForm)\\r\\n                                \\\"\\r\\n                            />\\r\\n                            <label\\r\\n                                >{{ 'catalog.use-global-value' | translate }} ({{\\r\\n                                    globalOutOfStockThreshold\\r\\n                                }})</label\\r\\n                            >\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <div\\r\\n                    class=\\\"form-grid stock-levels\\\"\\r\\n                    *ngFor=\\\"let stockLevel of stockLevelsForm.controls\\\"\\r\\n                    [formGroup]=\\\"stockLevel\\\"\\r\\n                >\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-on-hand' | translate)\\r\\n                        \\\"\\r\\n                        [for]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            [id]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-allocated' | translate)\\r\\n                        \\\"\\r\\n                    >\\r\\n                        {{ stockLevel.get('stockAllocated')?.value }}\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedStockLocation$ | async as unusedStockLocations\\\">\\r\\n                    <div *ngIf=\\\"unusedStockLocations.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-stock-location' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let stockLocation of unusedStockLocations\\\"\\r\\n                                    (click)=\\\"addStockLocation(stockLocation)\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"map-marker\\\"></clr-icon> {{ stockLocation.name }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-product-variant-quick-jump{flex:1;margin-inline-end:calc(var(--space-unit) * 2)}.stock-levels,.prices{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}.price-wrapper{display:flex;align-items:center;gap:var(--space-unit);width:100%}.price-wrapper.pending-deletion vdr-currency-input{opacity:.7}.price-wrapper.pending-deletion .delete-button{background-color:var(--color-error-700);color:var(--color-error-100)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: VariantPriceDetailComponent, selector: \"vdr-variant-price-detail\", inputs: [\"priceIncludesTax\", \"price\", \"currencyCode\", \"taxCategoryId\"] }, { kind: \"component\", type: VariantPriceStrategyDetailComponent, selector: \"vdr-variant-price-strategy-detail\", inputs: [\"channelPriceIncludesTax\", \"variant\", \"channelDefaultCurrencyCode\"] }, { kind: \"component\", type: ProductVariantQuickJumpComponent, selector: \"vdr-product-variant-quick-jump\", inputs: [\"productId\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyNamePipe, name: \"localeCurrencyName\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-variant-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left [grow]=\\\"true\\\">\\r\\n            <div class=\\\"flex center\\\">\\r\\n                <ng-container *ngIf=\\\"availableLanguages$ | async as availableLanguages\\\">\\r\\n                    <vdr-language-selector\\r\\n                        *ngIf=\\\"availableLanguages.length > 1\\\"\\r\\n                        class=\\\"mr-2\\\"\\r\\n                        [disabled]=\\\"isNew$ | async\\\"\\r\\n                        [availableLanguageCodes]=\\\"availableLanguages\\\"\\r\\n                        [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                    ></vdr-language-selector>\\r\\n                </ng-container>\\r\\n                <vdr-product-variant-quick-jump [productId]=\\\"entity?.product.id\\\" />\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-variant-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    (detailForm.invalid ||\\r\\n                        stockLevelsForm.invalid ||\\r\\n                        pricesForm.invalid ||\\r\\n                        (detailForm.pristine && stockLevelsForm.pristine && pricesForm.pristine)) &&\\r\\n                    !assetsChanged()\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"product-variant-detail\\\"></vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"entity$ | async as variant\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar\\r\\n            ><vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"variant.options.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let option of variant.options | sort : 'groupId'\\\"\\r\\n                        [colorFrom]=\\\"optionGroupCode(option.groupId)\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        <span>{{ optionGroupCode(option.groupId) }}:</span>\\r\\n                        {{ optionName(option) }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a\\r\\n                        [routerLink]=\\\"['../../', 'options']\\\"\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\" for=\\\"sku\\\">\\r\\n                        <input\\r\\n                            id=\\\"sku\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ProductVariant\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-variant-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            />\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || variant.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || variant.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.price-and-tax' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'catalog.tax-category' | translate\\\" for=\\\"taxCategory\\\">\\r\\n                        <select name=\\\"taxCategory\\\" formControlName=\\\"taxCategoryId\\\">\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-grid prices\\\" *ngFor=\\\"let price of pricesForm.controls\\\" [formGroup]=\\\"price\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            ('catalog.price' | translate) +\\r\\n                            (1 < pricesForm.length ? ' (' + price.value.currencyCode + ')' : '')\\r\\n                        \\\"\\r\\n                        [tooltip]=\\\"\\r\\n                            1 < pricesForm.length && price.value.currencyCode === channelDefaultCurrencyCode\\r\\n                                ? ('catalog.default-currency' | translate)\\r\\n                                : undefined\\r\\n                        \\\"\\r\\n                        for=\\\"price\\\"\\r\\n                    >\\r\\n                        <div class=\\\"price-wrapper\\\" [class.pending-deletion]=\\\"price.value.delete === true\\\">\\r\\n                            <vdr-currency-input\\r\\n                                name=\\\"price\\\"\\r\\n                                [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                                [readonly]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || price.value.delete === true\\r\\n                                \\\"\\r\\n                                formControlName=\\\"price\\\"\\r\\n                            />\\r\\n                            <div *ngIf=\\\"1 < pricesForm.controls.length\\\">\\r\\n                                <button\\r\\n                                    class=\\\"button-small delete-button\\\"\\r\\n                                    [disabled]=\\\"price.value.currencyCode === channelDefaultCurrencyCode\\\"\\r\\n                                    (click)=\\\"toggleDeletePrice(price.get('delete'))\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-variant-price-detail\\r\\n                        [price]=\\\"price.value.price\\\"\\r\\n                        [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                        [priceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                        [taxCategoryId]=\\\"detailForm.get('taxCategoryId')!.value\\\"\\r\\n                    />\\r\\n                </div>\\r\\n                <vdr-variant-price-strategy-detail\\r\\n                    [channelPriceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                    [channelDefaultCurrencyCode]=\\\"channelDefaultCurrencyCode\\\"\\r\\n                    [variant]=\\\"variant\\\"\\r\\n                />\\r\\n                <ng-container *ngIf=\\\"unusedCurrencyCodes$ | async as unusedCurrencyCodes\\\">\\r\\n                    <div *ngIf=\\\"unusedCurrencyCodes.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-price-in-another-currency' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let currencyCode of unusedCurrencyCodes\\\"\\r\\n                                    (click)=\\\"addPriceInCurrency(currencyCode)\\\"\\r\\n                                >\\r\\n                                    {{ currencyCode | localeCurrencyName }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.stock-levels' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        for=\\\"track-inventory\\\"\\r\\n                        [label]=\\\"'catalog.track-inventory' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"track-inventory\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option [value]=\\\"GlobalFlag.TRUE\\\">\\r\\n                                {{ 'catalog.track-inventory-true' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.FALSE\\\">\\r\\n                                {{ 'catalog.track-inventory-false' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.INHERIT\\\">\\r\\n                                {{ 'catalog.track-inventory-inherit' | translate }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"'catalog.out-of-stock-threshold' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"outOfStockThreshold\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                            [vdrDisabled]=\\\"\\r\\n                                detailForm.get('useGlobalOutOfStockThreshold')?.value !== false ||\\r\\n                                inventoryIsNotTracked(detailForm)\\r\\n                            \\\"\\r\\n                        />\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                name=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                formControlName=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                [vdrDisabled]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || inventoryIsNotTracked(detailForm)\\r\\n                                \\\"\\r\\n                            />\\r\\n                            <label\\r\\n                                >{{ 'catalog.use-global-value' | translate }} ({{\\r\\n                                    globalOutOfStockThreshold\\r\\n                                }})</label\\r\\n                            >\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <div\\r\\n                    class=\\\"form-grid stock-levels\\\"\\r\\n                    *ngFor=\\\"let stockLevel of stockLevelsForm.controls\\\"\\r\\n                    [formGroup]=\\\"stockLevel\\\"\\r\\n                >\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-on-hand' | translate)\\r\\n                        \\\"\\r\\n                        [for]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            [id]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-allocated' | translate)\\r\\n                        \\\"\\r\\n                    >\\r\\n                        {{ stockLevel.get('stockAllocated')?.value }}\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedStockLocation$ | async as unusedStockLocations\\\">\\r\\n                    <div *ngIf=\\\"unusedStockLocations.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-stock-location' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let stockLocation of unusedStockLocations\\\"\\r\\n                                    (click)=\\\"addStockLocation(stockLocation)\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"map-marker\\\"></clr-icon> {{ stockLocation.name }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-product-variant-quick-jump{flex:1;margin-inline-end:calc(var(--space-unit) * 2)}.stock-levels,.prices{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}.price-wrapper{display:flex;align-items:center;gap:var(--space-unit);width:100%}.price-wrapper.pending-deletion vdr-currency-input{opacity:.7}.price-wrapper.pending-deletion .delete-button{background-color:var(--color-error-700);color:var(--color-error-100)}\\n\"] }]\n        }], ctorParameters: () => [{ type: ProductDetailService }, { type: i2.FormBuilder }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.DataService }, { type: i0.ChangeDetectorRef }] });\n\nconst assignProductVariantsToChannelBulkAction = {\n    location: 'product-variant-list',\n    label: marker('common.assign-to-channel'),\n    icon: 'layers',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\n    onClick: ({ injector, selection, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent(AssignProductsToChannelDialogComponent, {\n            size: 'lg',\n            locals: {\n                productVariantIds: unique(selection.map(p => p.id)),\n                currentChannelIds: [],\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n            }\n        });\n    },\n};\nconst removeProductVariantsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'product-variant-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, ids, channelId) => dataService.product\n        .removeVariantsFromChannel({\n        channelId: channelId,\n        productVariantIds: ids,\n    })\n        .pipe(map(res => res.removeProductVariantsFromChannel)),\n});\nconst deleteProductVariantsBulkAction = {\n    location: 'product-variant-list',\n    label: marker('common.delete'),\n    icon: 'trash',\n    iconClass: 'is-danger',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteProduct) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        modalService\n            .dialog({\n            title: marker('common.confirm-bulk-delete'),\n            translationVars: {\n                count: selection.length,\n            },\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(response => response\n            ? dataService.product.deleteProductVariants(unique(selection.map(p => p.id)))\n            : EMPTY))\n            .subscribe(result => {\n            let deleted = 0;\n            const errors = [];\n            for (const item of result.deleteProductVariants) {\n                if (item.result === DeletionResult.DELETED) {\n                    deleted++;\n                }\n                else if (item.message) {\n                    errors.push(item.message);\n                }\n            }\n            if (0 < deleted) {\n                notificationService.success(marker('catalog.notify-bulk-delete-products-success'), {\n                    count: deleted,\n                });\n            }\n            if (0 < errors.length) {\n                notificationService.error(errors.join('\\n'));\n            }\n            hostComponent.refresh();\n            clearSelection();\n        });\n    },\n};\nconst assignFacetValuesToProductVariantsBulkAction = {\n    location: 'product-variant-list',\n    label: marker('catalog.edit-facet-values'),\n    icon: 'tag',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    onClick: ({ injector, selection, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const notificationService = injector.get(NotificationService);\n        const mode = 'variant';\n        const ids = unique(selection.map(p => p.id));\n        return modalService\n            .fromComponent(BulkAddFacetValuesDialogComponent, {\n            size: 'xl',\n            locals: {\n                mode,\n                ids,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                notificationService.success(marker('common.notify-bulk-update-success'), {\n                    count: selection.length,\n                    entity: mode === 'variant' ? 'Products' : 'ProductVariants',\n                });\n                clearSelection();\n            }\n        });\n    },\n};\n\nclass ProductVariantsTableComponent {\n    constructor(changeDetector) {\n        this.changeDetector = changeDetector;\n        this.formGroupMap = new Map();\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\n    }\n    ngOnInit() {\n        this.subscription = this.formArray.valueChanges\n            .pipe(map(value => value.length), debounceTime(1), distinctUntilChanged())\n            .subscribe(() => {\n            this.buildFormGroupMap();\n        });\n        this.buildFormGroupMap();\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    trackByFn(index, item) {\n        if (item.id != null) {\n            return item.id;\n        }\n        else {\n            return index;\n        }\n    }\n    getFeaturedAsset(variant) {\n        return this.pendingAssetChanges[variant.id]?.featuredAsset || variant.featuredAsset;\n    }\n    optionGroupName(optionGroupId) {\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\n        return group && group.name;\n    }\n    buildFormGroupMap() {\n        this.formGroupMap.clear();\n        for (const controlGroup of this.formArray.controls) {\n            this.formGroupMap.set(controlGroup.value.id, controlGroup);\n        }\n        this.changeDetector.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantsTableComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ProductVariantsTableComponent, selector: \"vdr-product-variants-table\", inputs: { formArray: [\"productVariantsFormArray\", \"formArray\"], variants: \"variants\", paginationConfig: \"paginationConfig\", channelPriceIncludesTax: \"channelPriceIncludesTax\", optionGroups: \"optionGroups\", pendingAssetChanges: \"pendingAssetChanges\" }, ngImport: i0, template: \"<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'common.name' | translate }}</th>\\r\\n            <th>{{ 'catalog.sku' | translate }}</th>\\r\\n            <ng-container *ngFor=\\\"let optionGroup of optionGroups | sort: 'id'\\\">\\r\\n                <th>{{ optionGroup.name }}</th>\\r\\n            </ng-container>\\r\\n            <th>{{ 'catalog.price' | translate }}</th>\\r\\n            <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n            <th>{{ 'common.enabled' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let variant of variants | paginate: paginationConfig; index as i; trackBy: trackByFn\\\">\\r\\n            <ng-container *ngIf=\\\"formGroupMap.get(variant.id) as formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <div class=\\\"card-img\\\">\\r\\n                        <div class=\\\"featured-asset\\\">\\r\\n                            <img\\r\\n                                *ngIf=\\\"getFeaturedAsset(variant) as featuredAsset; else placeholder\\\"\\r\\n                                [src]=\\\"featuredAsset | assetPreview: 'tiny'\\\"\\r\\n                            />\\r\\n                            <ng-template #placeholder>\\r\\n                                <div class=\\\"placeholder\\\">\\r\\n                                    <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'common.name' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'catalog.sku' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <ng-container *ngFor=\\\"let option of variant.options | sort: 'groupId'\\\">\\r\\n                    <td\\r\\n                        class=\\\"left align-middle\\\"\\r\\n                        [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\"\\r\\n                        [style.color]=\\\"optionGroupName(option.groupId) | stringToColor\\\"\\r\\n                    >\\r\\n                        {{ option.name }}\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <td class=\\\"left align-middle price\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"!channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"price\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"priceWithTax\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            step=\\\"1\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\".placeholder{color:var(--color-grey-300)}.stock input,.price input{max-width:96px}td{transition:background-color .2s}td.disabled{background-color:var(--color-component-bg-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"component\", type: i3.ClrInputContainer, selector: \"clr-input-container\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.StringToColorPipe, name: \"stringToColor\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProductVariantsTableComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-variants-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'common.name' | translate }}</th>\\r\\n            <th>{{ 'catalog.sku' | translate }}</th>\\r\\n            <ng-container *ngFor=\\\"let optionGroup of optionGroups | sort: 'id'\\\">\\r\\n                <th>{{ optionGroup.name }}</th>\\r\\n            </ng-container>\\r\\n            <th>{{ 'catalog.price' | translate }}</th>\\r\\n            <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n            <th>{{ 'common.enabled' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let variant of variants | paginate: paginationConfig; index as i; trackBy: trackByFn\\\">\\r\\n            <ng-container *ngIf=\\\"formGroupMap.get(variant.id) as formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <div class=\\\"card-img\\\">\\r\\n                        <div class=\\\"featured-asset\\\">\\r\\n                            <img\\r\\n                                *ngIf=\\\"getFeaturedAsset(variant) as featuredAsset; else placeholder\\\"\\r\\n                                [src]=\\\"featuredAsset | assetPreview: 'tiny'\\\"\\r\\n                            />\\r\\n                            <ng-template #placeholder>\\r\\n                                <div class=\\\"placeholder\\\">\\r\\n                                    <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'common.name' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'catalog.sku' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <ng-container *ngFor=\\\"let option of variant.options | sort: 'groupId'\\\">\\r\\n                    <td\\r\\n                        class=\\\"left align-middle\\\"\\r\\n                        [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\"\\r\\n                        [style.color]=\\\"optionGroupName(option.groupId) | stringToColor\\\"\\r\\n                    >\\r\\n                        {{ option.name }}\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <td class=\\\"left align-middle price\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"!channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"price\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"priceWithTax\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            step=\\\"1\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\".placeholder{color:var(--color-grey-300)}.stock input,.price input{max-width:96px}td{transition:background-color .2s}td.disabled{background-color:var(--color-component-bg-200)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { formArray: [{\n                type: Input,\n                args: ['productVariantsFormArray']\n            }], variants: [{\n                type: Input\n            }], paginationConfig: [{\n                type: Input\n            }], channelPriceIncludesTax: [{\n                type: Input\n            }], optionGroups: [{\n                type: Input\n            }], pendingAssetChanges: [{\n                type: Input\n            }] } });\n\nclass UpdateProductOptionDialogComponent {\n    constructor() {\n        this.updateVariantName = true;\n        this.codeInputTouched = false;\n    }\n    ngOnInit() {\n        const currentTranslation = this.productOption.translations.find(t => t.languageCode === this.activeLanguage);\n        this.name = currentTranslation?.name ?? '';\n        this.code = this.productOption.code;\n        this.customFieldsForm = new UntypedFormGroup({});\n        if (this.customFields) {\n            const cfCurrentTranslation = (currentTranslation && currentTranslation.customFields) || {};\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value = fieldDef.type === 'localeString'\n                    ? cfCurrentTranslation[key]\n                    : this.productOption.customFields[key];\n                this.customFieldsForm.addControl(fieldDef.name, new UntypedFormControl(value));\n            }\n        }\n    }\n    update() {\n        const result = createUpdatedTranslatable({\n            translatable: this.productOption,\n            languageCode: this.activeLanguage,\n            updatedFields: {\n                code: this.code,\n                name: this.name,\n                customFields: this.customFieldsForm.value,\n            },\n            customFieldConfig: this.customFields,\n            defaultTranslation: {\n                languageCode: this.activeLanguage,\n                name: '',\n            },\n        });\n        this.resolveWith({ ...result, autoUpdate: this.updateVariantName });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    updateCode(nameValue) {\n        if (!this.codeInputTouched && !this.productOption.code) {\n            this.code = normalizeString(nameValue, '-');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: UpdateProductOptionDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: UpdateProductOptionDialogComponent, selector: \"vdr-update-product-option-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'catalog.update-product-option' | translate }}</ng-template>\\r\\n<vdr-form-field [label]=\\\"'catalog.option-name' | translate\\\" for=\\\"name\\\">\\r\\n    <input\\r\\n        id=\\\"name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        #nameInput=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"name\\\"\\r\\n        required\\r\\n        (input)=\\\"updateCode($event.target.value)\\\"\\r\\n    />\\r\\n</vdr-form-field>\\r\\n<vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n    <input id=\\\"code\\\" type=\\\"text\\\" #codeInput=\\\"ngModel\\\" required [(ngModel)]=\\\"code\\\" pattern=\\\"[a-z0-9_-]+\\\" />\\r\\n</vdr-form-field>\\r\\n<clr-checkbox-wrapper>\\r\\n    <input type=\\\"checkbox\\\" clrCheckbox [(ngModel)]=\\\"updateVariantName\\\" />\\r\\n    <label>{{ 'catalog.auto-update-option-variant-name' | translate }}</label>\\r\\n</clr-checkbox-wrapper>\\r\\n<section *ngIf=\\\"customFields.length\\\">\\r\\n    <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n    <vdr-tabbed-custom-fields\\r\\n        entityName=\\\"ProductOption\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsFormGroup]=\\\"customFieldsForm\\\"\\r\\n        [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n    ></vdr-tabbed-custom-fields>\\r\\n</section>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"update()\\\"\\r\\n        [disabled]=\\\"\\r\\n            nameInput.invalid ||\\r\\n            codeInput.invalid ||\\r\\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\\r\\n        \\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.update-product-option' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i2.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: UpdateProductOptionDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-update-product-option-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'catalog.update-product-option' | translate }}</ng-template>\\r\\n<vdr-form-field [label]=\\\"'catalog.option-name' | translate\\\" for=\\\"name\\\">\\r\\n    <input\\r\\n        id=\\\"name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        #nameInput=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"name\\\"\\r\\n        required\\r\\n        (input)=\\\"updateCode($event.target.value)\\\"\\r\\n    />\\r\\n</vdr-form-field>\\r\\n<vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n    <input id=\\\"code\\\" type=\\\"text\\\" #codeInput=\\\"ngModel\\\" required [(ngModel)]=\\\"code\\\" pattern=\\\"[a-z0-9_-]+\\\" />\\r\\n</vdr-form-field>\\r\\n<clr-checkbox-wrapper>\\r\\n    <input type=\\\"checkbox\\\" clrCheckbox [(ngModel)]=\\\"updateVariantName\\\" />\\r\\n    <label>{{ 'catalog.auto-update-option-variant-name' | translate }}</label>\\r\\n</clr-checkbox-wrapper>\\r\\n<section *ngIf=\\\"customFields.length\\\">\\r\\n    <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n    <vdr-tabbed-custom-fields\\r\\n        entityName=\\\"ProductOption\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsFormGroup]=\\\"customFieldsForm\\\"\\r\\n        [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n    ></vdr-tabbed-custom-fields>\\r\\n</section>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"update()\\\"\\r\\n        [disabled]=\\\"\\r\\n            nameInput.invalid ||\\r\\n            codeInput.invalid ||\\r\\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\\r\\n        \\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.update-product-option' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }] });\n\nconst CATALOG_COMPONENTS = [\n    ProductListComponent,\n    ProductDetailComponent,\n    FacetListComponent,\n    FacetDetailComponent,\n    GenerateProductVariantsComponent,\n    ApplyFacetDialogComponent,\n    AssetListComponent,\n    VariantPriceDetailComponent,\n    VariantPriceStrategyDetailComponent,\n    CollectionListComponent,\n    CollectionDetailComponent,\n    CollectionTreeComponent,\n    CollectionTreeNodeComponent,\n    CollectionContentsComponent,\n    ProductVariantsTableComponent,\n    OptionValueInputComponent,\n    UpdateProductOptionDialogComponent,\n    ProductVariantsEditorComponent,\n    AssignProductsToChannelDialogComponent,\n    AssetDetailComponent,\n    ConfirmVariantDeletionDialogComponent,\n    ProductOptionsEditorComponent,\n    BulkAddFacetValuesDialogComponent,\n    CollectionDataTableComponent,\n    CollectionBreadcrumbPipe,\n    MoveCollectionsDialogComponent,\n    ProductVariantListComponent,\n    ProductDetailComponent,\n    ProductVariantDetailComponent,\n    CreateProductVariantDialogComponent,\n    CreateProductOptionGroupDialogComponent,\n    ProductVariantQuickJumpComponent,\n    CreateFacetValueDialogComponent,\n];\nclass CatalogModule {\n    static { this.hasRegisteredTabsAndBulkActions = false; }\n    constructor(bulkActionRegistryService, pageService) {\n        if (CatalogModule.hasRegisteredTabsAndBulkActions) {\n            return;\n        }\n        bulkActionRegistryService.registerBulkAction(assignFacetValuesToProductsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignProductsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(duplicateProductsBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeProductsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteProductsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignFacetValuesToProductVariantsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignProductVariantsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeProductVariantsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteProductVariantsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignFacetsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(duplicateFacetsBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeFacetsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteFacetsBulkAction);\n        bulkActionRegistryService.registerBulkAction(moveCollectionsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignCollectionsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(duplicateCollectionsBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeCollectionsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteCollectionsBulkAction);\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'product-list',\n            tab: marker('catalog.products'),\n            route: '',\n            component: ProductListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'product-detail',\n            tab: marker('catalog.product'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: ProductDetailComponent,\n                query: GetProductDetailDocument,\n                entityKey: 'product',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('catalog.create-new-product'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'product-list',\n            tab: marker('catalog.product-variants'),\n            route: 'variants',\n            component: ProductVariantListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'product-variant-detail',\n            tab: marker('catalog.product-variants'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: ProductVariantDetailComponent,\n                query: GetProductVariantDetailDocument,\n                entityKey: 'productVariant',\n                getBreadcrumbs: entity => [\n                    {\n                        label: `${entity?.product.name}`,\n                        link: ['/catalog', 'products', entity?.product.id],\n                    },\n                    {\n                        label: `${entity?.name} (${entity?.sku})`,\n                        link: ['variants', entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'facet-list',\n            tab: marker('catalog.facets'),\n            route: '',\n            component: FacetListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'facet-detail',\n            tab: marker('catalog.facet'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: FacetDetailComponent,\n                query: GetFacetDetailDocument,\n                variables: {\n                    facetValueListOptions: {\n                        take: 10,\n                        skip: 0,\n                        sort: {\n                            createdAt: SortOrder$1.DESC,\n                        },\n                    },\n                },\n                entityKey: 'facet',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('catalog.create-new-facet'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'collection-list',\n            tab: marker('catalog.collections'),\n            route: '',\n            component: CollectionListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'collection-detail',\n            tab: marker('catalog.collection'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: CollectionDetailComponent,\n                query: CollectionDetailQueryDocument,\n                entityKey: 'collection',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('catalog.create-new-collection'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'asset-list',\n            tab: marker('catalog.assets'),\n            route: '',\n            component: AssetListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'asset-detail',\n            tab: marker('catalog.asset'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: AssetDetailComponent,\n                query: AssetDetailQueryDocument,\n                entityKey: 'asset',\n                getBreadcrumbs: entity => [\n                    {\n                        label: `${entity?.name}`,\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        CatalogModule.hasRegisteredTabsAndBulkActions = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CatalogModule, deps: [{ token: i1.BulkActionRegistryService }, { token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: CatalogModule, declarations: [ProductListComponent,\n            ProductDetailComponent,\n            FacetListComponent,\n            FacetDetailComponent,\n            GenerateProductVariantsComponent,\n            ApplyFacetDialogComponent,\n            AssetListComponent,\n            VariantPriceDetailComponent,\n            VariantPriceStrategyDetailComponent,\n            CollectionListComponent,\n            CollectionDetailComponent,\n            CollectionTreeComponent,\n            CollectionTreeNodeComponent,\n            CollectionContentsComponent,\n            ProductVariantsTableComponent,\n            OptionValueInputComponent,\n            UpdateProductOptionDialogComponent,\n            ProductVariantsEditorComponent,\n            AssignProductsToChannelDialogComponent,\n            AssetDetailComponent,\n            ConfirmVariantDeletionDialogComponent,\n            ProductOptionsEditorComponent,\n            BulkAddFacetValuesDialogComponent,\n            CollectionDataTableComponent,\n            CollectionBreadcrumbPipe,\n            MoveCollectionsDialogComponent,\n            ProductVariantListComponent,\n            ProductDetailComponent,\n            ProductVariantDetailComponent,\n            CreateProductVariantDialogComponent,\n            CreateProductOptionGroupDialogComponent,\n            ProductVariantQuickJumpComponent,\n            CreateFacetValueDialogComponent], imports: [SharedModule, i1$1.RouterModule], exports: [ProductListComponent,\n            ProductDetailComponent,\n            FacetListComponent,\n            FacetDetailComponent,\n            GenerateProductVariantsComponent,\n            ApplyFacetDialogComponent,\n            AssetListComponent,\n            VariantPriceDetailComponent,\n            VariantPriceStrategyDetailComponent,\n            CollectionListComponent,\n            CollectionDetailComponent,\n            CollectionTreeComponent,\n            CollectionTreeNodeComponent,\n            CollectionContentsComponent,\n            ProductVariantsTableComponent,\n            OptionValueInputComponent,\n            UpdateProductOptionDialogComponent,\n            ProductVariantsEditorComponent,\n            AssignProductsToChannelDialogComponent,\n            AssetDetailComponent,\n            ConfirmVariantDeletionDialogComponent,\n            ProductOptionsEditorComponent,\n            BulkAddFacetValuesDialogComponent,\n            CollectionDataTableComponent,\n            CollectionBreadcrumbPipe,\n            MoveCollectionsDialogComponent,\n            ProductVariantListComponent,\n            ProductDetailComponent,\n            ProductVariantDetailComponent,\n            CreateProductVariantDialogComponent,\n            CreateProductOptionGroupDialogComponent,\n            ProductVariantQuickJumpComponent,\n            CreateFacetValueDialogComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CatalogModule, providers: [\n            {\n                provide: ROUTES,\n                useFactory: (pageService) => createRoutes(pageService),\n                multi: true,\n                deps: [PageService],\n            },\n        ], imports: [SharedModule, RouterModule.forChild([])] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CatalogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [SharedModule, RouterModule.forChild([])],\n                    exports: [...CATALOG_COMPONENTS],\n                    declarations: [...CATALOG_COMPONENTS],\n                    providers: [\n                        {\n                            provide: ROUTES,\n                            useFactory: (pageService) => createRoutes(pageService),\n                            multi: true,\n                            deps: [PageService],\n                        },\n                    ],\n                }]\n        }], ctorParameters: () => [{ type: i1.BulkActionRegistryService }, { type: i1.PageService }] });\n\nconst PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT = gql `\r\n    fragment ProductListQueryProductFragment on Product {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        slug\r\n        featuredAsset {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            preview\r\n            focalPoint {\r\n                x\r\n                y\r\n            }\r\n        }\r\n        variantList {\r\n            totalItems\r\n        }\r\n    }\r\n`;\nconst PRODUCT_LIST_QUERY = gql `\r\n    query ProductListQuery($options: ProductListOptions) {\r\n        products(options: $options) {\r\n            items {\r\n                ...ProductListQueryProductFragment\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT}\r\n`;\n\nconst PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT = gql `\r\n    fragment ProductVariantDetailQueryProductVariantFragment on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        prices {\r\n            price\r\n            currencyCode\r\n        }\r\n        priceWithTax\r\n        stockOnHand\r\n        stockAllocated\r\n        trackInventory\r\n        outOfStockThreshold\r\n        useGlobalOutOfStockThreshold\r\n        taxRateApplied {\r\n            id\r\n            name\r\n            value\r\n        }\r\n        taxCategory {\r\n            id\r\n            name\r\n        }\r\n        sku\r\n        options {\r\n            ...ProductOption\r\n        }\r\n        stockLevels {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stockOnHand\r\n            stockAllocated\r\n            stockLocationId\r\n            stockLocation {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n        }\r\n        facetValues {\r\n            id\r\n            code\r\n            name\r\n            facet {\r\n                id\r\n                name\r\n            }\r\n        }\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n        assets {\r\n            ...Asset\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n        channels {\r\n            id\r\n            code\r\n        }\r\n        product {\r\n            id\r\n            name\r\n            optionGroups {\r\n                id\r\n                name\r\n                code\r\n                translations {\r\n                    id\r\n                    languageCode\r\n                    name\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\nconst PRODUCT_VARIANT_DETAIL_QUERY = gql `\r\n    query GetProductVariantDetail($id: ID!) {\r\n        productVariant(id: $id) {\r\n            ...ProductVariantDetailQueryProductVariantFragment\r\n        }\r\n        stockLocations(options: { take: 100 }) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                description\r\n            }\r\n        }\r\n        taxCategories(options: { take: 100 }) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                isDefault\r\n            }\r\n            totalItems\r\n        }\r\n        activeChannel {\r\n            id\r\n            availableCurrencyCodes\r\n            defaultCurrencyCode\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\nconst PRODUCT_VARIANT_UPDATE_MUTATION = gql `\r\n    mutation ProductVariantUpdateMutation($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            ...ProductVariantDetailQueryProductVariantFragment\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\n\nconst PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT = gql `\r\n    fragment ProductVariantListQueryProductVariantFragment on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        productId\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        priceWithTax\r\n        trackInventory\r\n        outOfStockThreshold\r\n        stockLevels {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stockLocationId\r\n            stockOnHand\r\n            stockAllocated\r\n            stockLocation {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n        }\r\n        useGlobalOutOfStockThreshold\r\n        sku\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n    }\r\n\r\n    ${ASSET_FRAGMENT}\r\n`;\nconst PRODUCT_VARIANT_LIST_QUERY = gql `\r\n    query ProductVariantListQuery($options: ProductVariantListOptions!) {\r\n        productVariants(options: $options) {\r\n            items {\r\n                ...ProductVariantListQueryProductVariantFragment\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\n\n// This file was generated by the build-public-api.ts script\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ASSET_DETAIL_QUERY, ApplyFacetDialogComponent, AssetDetailComponent, AssetListComponent, AssignProductsToChannelDialogComponent, BulkAddFacetValuesDialogComponent, COLLECTION_DETAIL_QUERY, CatalogModule, CollectionBreadcrumbPipe, CollectionContentsComponent, CollectionDataTableComponent, CollectionDetailComponent, CollectionListComponent, CollectionTreeComponent, CollectionTreeNodeComponent, CollectionTreeService, ConfirmVariantDeletionDialogComponent, CreateFacetValueDialogComponent, CreateProductOptionGroupDialogComponent, CreateProductVariantDialogComponent, FACET_DETAIL_QUERY, FACET_LIST_QUERY, FacetDetailComponent, FacetListComponent, GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS, GET_PRODUCT_DETAIL, GET_VARIANTS_WITH_FACET_VALUES_BY_IDS, GenerateProductVariantsComponent, GeneratedVariant, MoveCollectionsDialogComponent, OPTION_VALUE_INPUT_VALUE_ACCESSOR, OptionValueInputComponent, PRODUCT_LIST_QUERY, PRODUCT_VARIANT_DETAIL_QUERY, PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT, PRODUCT_VARIANT_LIST_QUERY, PRODUCT_VARIANT_UPDATE_MUTATION, ProductDetailComponent, ProductDetailService, ProductListComponent, ProductOptionsEditorComponent, ProductVariantDetailComponent, ProductVariantListComponent, ProductVariantQuickJumpComponent, ProductVariantsEditorComponent, ProductVariantsResolver, ProductVariantsTableComponent, UPDATE_PRODUCTS_BULK, UPDATE_VARIANTS_BULK, UpdateProductOptionDialogComponent, VariantPriceDetailComponent, VariantPriceStrategyDetailComponent, arrayToTree, assignCollectionsToChannelBulkAction, assignFacetValuesToProductVariantsBulkAction, assignFacetValuesToProductsBulkAction, assignFacetsToChannelBulkAction, assignProductVariantsToChannelBulkAction, assignProductsToChannelBulkAction, createRoutes, deleteCollectionsBulkAction, deleteFacetsBulkAction, deleteProductVariantsBulkAction, deleteProductsBulkAction, duplicateCollectionsBulkAction, duplicateFacetsBulkAction, duplicateProductsBulkAction, moveCollectionsBulkAction, productOptionsEditorBreadcrumb, removeCollectionsFromChannelBulkAction, removeFacetsFromChannelBulkAction, removeFacetsFromChannelBulkAction2, removeProductVariantsFromChannelBulkAction, removeProductsFromChannelBulkAction, replaceLast };\n","import { switchMap } from './switchMap';\nimport { isFunction } from '../util/isFunction';\nexport function switchMapTo(innerObservable, resultSelector) {\n    return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n"],"x_google_ignoreList":[0,1,2]}