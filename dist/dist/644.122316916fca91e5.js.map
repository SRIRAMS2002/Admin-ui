{"version":3,"file":"644.122316916fca91e5.js","mappings":"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","names":["withLatestFrom","inputs","project","popResultSelector","operate","source","subscriber","len","length","otherValues","Array","hasValue","map","ready","i","innerFrom","subscribe","createOperatorSubscriber","value","every","identity","noop","values","next","_c0","a0","ZoneMemberListComponent_ng_template_8_Template","rf","ctx","i0","member_r1","item","id","ZoneMemberListComponent_ng_template_11_Template","member_r2","createdAt","ZoneMemberListComponent_ng_template_14_Template","member_r3","ZoneMemberListComponent_ng_template_17_Template","member_r4","name","ZoneMemberListComponent_ng_template_20_Template","member_r5","code","ZoneMemberListComponent_ng_template_23_vdr_chip_0_Template","ZoneMemberListComponent_ng_template_23_vdr_chip_1_Template","ZoneMemberListComponent_ng_template_23_Template","member_r6","enabled","_c1","zoneName","AddCountryToZoneDialogComponent_ng_template_0_Template","ctx_r0","AddCountryToZoneDialogComponent_ng_template_3_Template","_r2","cancel","add","selectedMemberIds","PermissionGridComponent_tr_2_button_10_Template","_r1","section_r2","$implicit","ctx_r2","toggleAll","permissions","PermissionGridComponent_tr_2_td_11_Template","_r4","$event","permission_r5","setPermission","description","readonly","activePermissions","includes","PermissionGridComponent_tr_2_Template","label","_c2","AdminDetailComponent_button_5_Template","create","detailForm","invalid","pristine","AdminDetailComponent_ng_template_7_button_0_Template","save","AdminDetailComponent_ng_template_7_Template","AdminDetailComponent_vdr_card_13_Template","entity_r5","ngIf","AdminDetailComponent_vdr_form_field_30_Template","AdminDetailComponent_vdr_form_field_32_Template","AdminDetailComponent_vdr_card_35_Template","customFields","get","AdminDetailComponent_li_43_Template","_r6","channel_r7","selectedChannelId","channelId","channelCode","_c3","_c4","_c5","AdministratorListComponent_a_5_Template","AdministratorListComponent_ng_template_17_Template","administrator_r1","AdministratorListComponent_ng_template_20_Template","administrator_r2","AdministratorListComponent_ng_template_23_Template","administrator_r3","updatedAt","AdministratorListComponent_ng_template_26_Template","administrator_r4","firstName","lastName","AdministratorListComponent_ng_template_29_Template","administrator_r5","emailAddress","AdministratorListComponent_ng_template_32_vdr_chip_0_Template","role_r6","AdministratorListComponent_ng_template_32_Template","administrator_r7","user","roles","AdministratorListComponent_vdr_dt2_custom_field_column_33_Template","customField_r8","ctx_r8","sorts","_c6","ChannelDetailComponent_button_5_Template","ctx_r1","saveButtonEnabled","ChannelDetailComponent_ng_template_7_button_0_Template","_r3","ChannelDetailComponent_ng_template_7_Template","ChannelDetailComponent_vdr_card_13_Template","entity_r4","ChannelDetailComponent_vdr_form_field_18_Template","updatePermission","ChannelDetailComponent_vdr_form_item_19_Template","entity","ChannelDetailComponent_option_29_Template","seller_r5","ChannelDetailComponent_option_45_Template","languageCode_r6","ChannelDetailComponent_option_50_Template","code_r7","ChannelDetailComponent_clr_alert_56_Template","ChannelDetailComponent_clr_alert_62_Template","ChannelDetailComponent_vdr_card_68_Template","_c7","ChannelListComponent_a_5_Template","ChannelListComponent_ng_template_17_Template","channel_r1","ChannelListComponent_ng_template_20_Template","channel_r2","ChannelListComponent_ng_template_23_Template","channel_r3","ChannelListComponent_ng_template_26_Template","channel_r4","ChannelListComponent_ng_template_29_Template","channel_r5","token","ChannelListComponent_vdr_dt2_custom_field_column_30_Template","customField_r6","ctx_r6","CountryDetailComponent_button_9_Template","CountryDetailComponent_ng_template_11_button_0_Template","CountryDetailComponent_ng_template_11_Template","CountryDetailComponent_vdr_card_23_Template","CountryDetailComponent_vdr_card_36_Template","_c8","CountryListComponent_a_8_Template","CountryListComponent_ng_template_20_Template","country_r1","CountryListComponent_ng_template_23_Template","country_r2","CountryListComponent_ng_template_26_Template","country_r3","CountryListComponent_ng_template_29_Template","country_r4","CountryListComponent_ng_template_32_Template","country_r5","CountryListComponent_ng_template_35_vdr_chip_0_Template","CountryListComponent_ng_template_35_vdr_chip_1_Template","CountryListComponent_ng_template_35_Template","country_r6","CountryListComponent_vdr_dt2_custom_field_column_36_Template","customField_r7","ctx_r7","GlobalSettingsComponent_button_4_Template","GlobalSettingsComponent_vdr_card_25_Template","PaymentMethodDetailComponent_button_9_Template","selectedHandler","PaymentMethodDetailComponent_ng_template_11_button_0_Template","PaymentMethodDetailComponent_ng_template_11_Template","PaymentMethodDetailComponent_vdr_card_23_Template","PaymentMethodDetailComponent_vdr_card_40_Template","PaymentMethodDetailComponent_vdr_configurable_input_44_Template","removeChecker","selectedChecker","selectedCheckerDefinition","PaymentMethodDetailComponent_div_45_button_7_Template","_r7","checker_r8","selectChecker","PaymentMethodDetailComponent_div_45_Template","checkers","PaymentMethodDetailComponent_vdr_configurable_input_48_Template","_r9","removeHandler","selectedHandlerDefinition","PaymentMethodDetailComponent_div_49_button_7_Template","_r10","handler_r11","selectHandler","PaymentMethodDetailComponent_div_49_Template","handlers","_c9","PaymentMethodListComponent_a_8_Template","PaymentMethodListComponent_ng_template_20_Template","paymentMethod_r1","PaymentMethodListComponent_ng_template_23_Template","paymentMethod_r2","PaymentMethodListComponent_ng_template_26_Template","paymentMethod_r3","PaymentMethodListComponent_ng_template_29_Template","paymentMethod_r4","PaymentMethodListComponent_ng_template_32_Template","paymentMethod_r5","PaymentMethodListComponent_ng_template_35_vdr_chip_0_Template","PaymentMethodListComponent_ng_template_35_vdr_chip_1_Template","PaymentMethodListComponent_ng_template_35_Template","paymentMethod_r6","PaymentMethodListComponent_vdr_dt2_custom_field_column_36_Template","ProfileComponent_vdr_card_11_Template","entity_r1","ProfileComponent_vdr_form_field_25_Template","ProfileComponent_vdr_card_30_Template","RoleDetailComponent_button_5_Template","RoleDetailComponent_ng_template_7_button_0_Template","RoleDetailComponent_ng_template_7_Template","RoleDetailComponent_vdr_card_13_Template","RoleListComponent_a_5_Template","RoleListComponent_ng_template_17_Template","role_r1","RoleListComponent_ng_template_20_Template","role_r2","RoleListComponent_ng_template_23_Template","role_r3","RoleListComponent_ng_template_26_a_0_Template","role_r4","RoleListComponent_ng_template_26_ng_template_1_Template","RoleListComponent_ng_template_26_Template","defaultRole_r5","ctx_r5","isDefaultRole","RoleListComponent_ng_template_29_span_0_Template","role_r7","RoleListComponent_ng_template_29_Template","RoleListComponent_ng_template_32_ng_container_0_vdr_chip_1_Template","channel_r8","RoleListComponent_ng_template_32_ng_container_0_Template","role_r9","channels","RoleListComponent_ng_template_32_Template","RoleListComponent_ng_template_35_ng_container_0_vdr_chip_2_Template","permission_r10","RoleListComponent_ng_template_35_ng_container_0_button_4_ng_container_1_Template","role_r12","initialLimit","RoleListComponent_ng_template_35_ng_container_0_button_4_ng_template_2_Template","RoleListComponent_ng_template_35_ng_container_0_button_4_Template","_r11","toggleDisplayLimit","collapse_r13","displayLimit","RoleListComponent_ng_template_35_ng_container_0_Template","RoleListComponent_ng_template_35_ng_template_1_Template","RoleListComponent_ng_template_35_Template","defaultRole_r14","_c10","SellerDetailComponent_button_5_Template","SellerDetailComponent_ng_template_7_button_0_Template","SellerDetailComponent_ng_template_7_Template","SellerDetailComponent_vdr_card_13_Template","SellerDetailComponent_vdr_card_22_Template","_c12","SellerListComponent_a_5_Template","SellerListComponent_ng_template_17_Template","seller_r1","SellerListComponent_ng_template_20_Template","seller_r2","SellerListComponent_ng_template_23_Template","seller_r3","SellerListComponent_ng_template_26_Template","seller_r4","SellerListComponent_vdr_dt2_custom_field_column_27_Template","customField_r5","ShippingEligibilityTestResultComponent_div_2_vdr_object_tree_14_Template","quote_r1","metadata","ShippingEligibilityTestResultComponent_div_2_Template","testDataUpdated","price","currencyCode","priceWithTax","ShippingEligibilityTestResultComponent_div_3_Template","TestOrderBuilderComponent_table_0_tr_19_Template","line_r3","quantity","ctx_r3","updateQuantity","removeLine","preview","sku","unitPriceWithTax","TestOrderBuilderComponent_table_0_Template","lines","subTotal","TestOrderBuilderComponent_ng_template_1_Template","TestAddressFormComponent_option_18_Template","_c13","a1","a2","success","error","unknown","ShippingMethodTestResultComponent_clr_icon_9_Template","ShippingMethodTestResultComponent_clr_icon_10_Template","ShippingMethodTestResultComponent_clr_icon_11_Template","ShippingMethodTestResultComponent_vdr_labeled_data_14_Template","testResult","quote","ShippingMethodTestResultComponent_vdr_labeled_data_15_Template","ShippingMethodTestResultComponent_vdr_object_tree_16_Template","ShippingMethodDetailComponent_button_9_Template","selectedCalculator","ShippingMethodDetailComponent_ng_template_11_button_0_Template","ShippingMethodDetailComponent_ng_template_11_Template","ShippingMethodDetailComponent_vdr_card_17_Template","ShippingMethodDetailComponent_option_38_Template","handler_r6","ShippingMethodDetailComponent_vdr_card_39_Template","ShippingMethodDetailComponent_vdr_configurable_input_43_Template","ShippingMethodDetailComponent_div_44_button_7_Template","_r8","checker_r9","ShippingMethodDetailComponent_div_44_Template","ShippingMethodDetailComponent_vdr_configurable_input_47_Template","selectedCalculatorDefinition","ShippingMethodDetailComponent_div_48_button_7_Template","calculator_r12","selectCalculator","ShippingMethodDetailComponent_div_48_Template","calculators","_c14","ShippingMethodListComponent_a_8_Template","ShippingMethodListComponent_ng_template_20_Template","shippingMethod_r1","ShippingMethodListComponent_ng_template_23_Template","shippingMethod_r2","ShippingMethodListComponent_ng_template_26_Template","shippingMethod_r3","ShippingMethodListComponent_ng_template_29_Template","shippingMethod_r4","ShippingMethodListComponent_ng_template_32_Template","shippingMethod_r5","ShippingMethodListComponent_ng_template_35_Template","shippingMethod_r6","ShippingMethodListComponent_ng_template_38_Template","shippingMethod_r7","fulfillmentHandlerCode","ShippingMethodListComponent_vdr_dt2_custom_field_column_39_Template","_c15","pattern","StockLocationDetailComponent_button_5_Template","StockLocationDetailComponent_ng_template_7_button_0_Template","StockLocationDetailComponent_ng_template_7_Template","StockLocationDetailComponent_vdr_card_13_Template","StockLocationDetailComponent_vdr_card_27_Template","_c16","StockLocationListComponent_a_5_Template","StockLocationListComponent_ng_template_17_Template","stockLocation_r1","StockLocationListComponent_ng_template_20_Template","stockLocation_r2","StockLocationListComponent_ng_template_23_Template","stockLocation_r3","StockLocationListComponent_ng_template_26_Template","stockLocation_r4","StockLocationListComponent_ng_template_29_Template","stockLocation_r5","StockLocationListComponent_vdr_dt2_custom_field_column_30_Template","field_r6","TaxCategoryDetailComponent_button_5_Template","TaxCategoryDetailComponent_ng_template_7_button_0_Template","TaxCategoryDetailComponent_ng_template_7_Template","TaxCategoryDetailComponent_vdr_card_13_Template","TaxCategoryDetailComponent_vdr_card_27_Template","_c17","TaxCategoryListComponent_a_5_Template","TaxCategoryListComponent_ng_template_17_Template","taxCategory_r1","TaxCategoryListComponent_ng_template_20_Template","taxCategory_r2","TaxCategoryListComponent_ng_template_23_Template","taxCategory_r3","TaxCategoryListComponent_ng_template_26_Template","taxCategory_r4","TaxCategoryListComponent_ng_template_29_vdr_chip_0_Template","TaxCategoryListComponent_ng_template_29_Template","taxCategory_r5","isDefault","TaxCategoryListComponent_vdr_dt2_custom_field_column_30_Template","TaxRateDetailComponent_button_5_Template","TaxRateDetailComponent_ng_template_7_button_0_Template","TaxRateDetailComponent_ng_template_7_Template","TaxRateDetailComponent_vdr_card_19_Template","TaxRateDetailComponent_option_37_Template","TaxRateDetailComponent_vdr_card_43_Template","_c18","TaxRateListComponent_a_5_Template","TaxRateListComponent_ng_template_17_Template","taxRate_r1","TaxRateListComponent_ng_template_20_Template","taxRate_r2","TaxRateListComponent_ng_template_23_Template","taxRate_r3","TaxRateListComponent_ng_template_26_Template","taxRate_r4","TaxRateListComponent_ng_template_29_Template","taxRate_r5","category","TaxRateListComponent_ng_template_32_Template","taxRate_r6","zone","TaxRateListComponent_ng_template_35_Template","taxRate_r7","customerGroup","TaxRateListComponent_ng_template_38_Template","taxRate_r8","TaxRateListComponent_ng_template_41_vdr_chip_0_Template","TaxRateListComponent_ng_template_41_vdr_chip_1_Template","TaxRateListComponent_ng_template_41_Template","taxRate_r9","TaxRateListComponent_vdr_dt2_custom_field_column_42_Template","customField_r10","ctx_r10","ZoneDetailComponent_button_5_Template","ZoneDetailComponent_ng_template_7_button_0_Template","ZoneDetailComponent_ng_template_7_Template","ZoneDetailComponent_vdr_card_13_Template","ZoneDetailComponent_vdr_card_22_Template","_c19","_c20","contents","ZoneListComponent_a_8_Template","ZoneListComponent_ng_template_12_ng_template_11_Template","customerGroup_r3","ZoneListComponent_ng_template_12_ng_template_14_Template","customerGroup_r4","ZoneListComponent_ng_template_12_ng_template_17_Template","customerGroup_r5","ZoneListComponent_ng_template_12_ng_template_20_Template","customerGroup_r6","ZoneListComponent_ng_template_12_ng_template_23_Template","customerGroup_r7","ZoneListComponent_ng_template_12_vdr_dt2_custom_field_column_24_Template","ZoneListComponent_ng_template_12_Template","setPageNumber","setItemsPerPage","setVisibleColumns","dataTableListId","items$","itemsPerPage$","totalItems$","currentPage$","filters","activeIndex$","selectionManager","searchTermControl","ZoneListComponent_ng_template_13_ng_container_0_vdr_zone_member_list_6_Template","activeZone_r12","ZoneListComponent_ng_template_13_ng_container_0_Template","activeZone_r10","addToZone","activeZone$","ZoneListComponent_ng_template_13_Template","ZoneMemberControlsDirective","constructor","templateRef","this","ɵfac","t","ɵdir","type","selectors","ZoneMemberListHeaderDirective","ZoneMemberListComponent","dataService","selectionChange","EventEmitter","filterTermControl","FormControl","currentPage","itemsPerPage","SelectionManager","multiSelect","itemsAreEqual","a","b","additiveMode","membersInput$","Subject","activeZoneInput$","BehaviorSubject","undefined","destroy$","refresh$","ngOnInit","activeZoneMembers$","merge","pipe","switchMap","activeZone","query","GetZoneMembersDocument","zoneId","mapSingle","members","of","members$","take","setCurrentItems","filter","m","selectionChanges$","takeUntil","selection","emit","s","filteredMembers$","combineLatest","valueChanges","startWith","filterTerm","term","toLocaleLowerCase","ngOnChanges","changes","ngOnDestroy","complete","refresh","i1","ɵcmp","contentQueries","dirIndex","_t","headerTemplate","first","controlsTemplate","locationId","outputs","features","decls","vars","consts","template","dependencies","i3","i2","i3$1","i5","styles","changeDetection","GET_ZONE_MEMBERS","gql","AddCountryToZoneDialogComponent","currentMembers$","availableCountries$","GetCountryListDocument","options","mapStream","data","countries","items","currentMembers","c","find","cm","resolveWith","PermissionGridComponent","permissionChange","buildGrid","permission","defs","some","d","def","crudGroups","Map","nonCrud","crudRe","permissionDefinitions","test","groupName","match","existing","push","set","assignable","gridData","from","entries","extractCrudDescription","replace","GET_ADMINISTRATOR_DETAIL","ADMINISTRATOR_FRAGMENT","AdminDetailComponent","TypedBaseDetailComponent","getAvailableChannels","Object","selectedRolePermissions","changeDetector","formBuilder","notificationService","super","getCustomFieldConfig","group","Validators","required","password","getCustomFieldsDefaults","selectedRoles","init","allRoles$","administrator","getRoles","CUSTOMER_ROLE_CODE","client","userStatus","single$","Permission","CreateAdministrator","UpdateAdministrator","rolesSelect","disable","serverConfigService","getPermissionDefinitions","destroy","rolesChanged","buildPermissionsMap","getPermissionsForSelectedChannel","getActivePermissions","input","active","roleIds","role","notNullOrUndefined","createAdministrator","marker","markAsPristine","markForCheck","router","navigate","relativeTo","route","err","entity$","mergeMap","formValue","updateAdministrator","setFormValues","languageCode","patchValue","setCustomFieldFormValues","passwordControl","setValidators","permissionsControl","channelIdPermissionsMap","channelIdCodeMap","channel","permissionSet","Set","forEach","p","keys","permissionsHash","has","i2$1","updateButton_r8","isNew$","i4","deleteAdministratorsBulkAction","createBulkDeleteAction","location","requiresPermission","userPermissions","DeleteAdministrator","getItemName","bulkDelete","ids","deleteAdministrators","res","GET_ADMINISTRATOR_LIST","AdministratorListComponent","TypedBaseListComponent","createFilterCollection","addIdFilter","addDateFilters","addFilter","kind","filterField","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSort","addCustomFieldSorts","configure","document","GetAdministratorListDocument","getItems","administrators","setVariables","skip","createSearchQuery","refreshListOnChanges","searchTerm","_filter","filterOperator","LogicalOperator","AND","contains","OR","createFilterInput","sort","createSortInput","GET_CHANNEL_DETAIL","CHANNEL_FRAGMENT","ChannelDetailComponent","DEFAULT_CHANNEL_CODE","pricesIncludeTax","availableLanguageCodes","availableCurrencyCodes","defaultCurrencyCode","defaultShippingZoneId","defaultLanguageCode","defaultTaxZoneId","sellerId","SuperAdmin","UpdateChannel","CreateChannel","sellers$","settings","getSellerList","sellers","availableLanguageCodes$","getAvailableLanguages","controls","setValue","dirty","valid","createChannel","auth","currentUser","me","updateUserChannels","__typename","message","updateChannel","generateToken","defaultShippingZone","defaultTaxZone","seller","codeControl","crypto","getRandomValues","Uint8Array","toString","padStart","join","deleteChannelsBulkAction","DeleteChannel","deleteChannels","GET_CHANNEL_LIST","ChannelListComponent","GetChannelListDocument","isDefaultChannel","GET_COUNTRY_DETAIL","COUNTRY_FRAGMENT","CountryDetailComponent","UpdateSettings","UpdateCountry","createUpdatedTranslatable","translatable","translations","updatedFields","customFieldConfig","defaultTranslation","createCountry","languageCode$","country","updateCountry","currentTranslation","findTranslation","setLanguage","updateButton_r6","availableLanguages$","deleteCountriesBulkAction","DeleteSettings","DeleteCountry","deleteCountries","GET_COUNTRY_LIST","CountryListComponent","contentLanguage$","GET_GLOBAL_SETTINGS_DETAIL","GlobalSettingsComponent","availableLanguages","trackInventory","outOfStockThreshold","languageCodes","LanguageCode","UpdateGlobalSettings","languagesSelect","updateGlobalSettings","tap","switchMap$1","refreshGlobalSettings","uiState","globalSettings","availableLangs","contentLanguage","setContentLanguage","GET_PAYMENT_METHOD_DETAIL","PAYMENT_METHOD_FRAGMENT","PaymentMethodDetailComponent","checker","handler","UpdatePaymentMethod","getPaymentMethodOperations","paymentMethodEligibilityCheckers","paymentMethodHandlers","updateCode","currentCode","nameValue","normalizeString","configurableDefinitionToInstance","formControl","clearValidators","updateValueAndValidity","onlySelf","markAsDirty","getUpdatedPaymentMethod","createPaymentMethod","paymentMethod","updatePaymentMethod","formGroup","toConfigurableOperationInput","args","getConfigArgValue","target","updateButton_r12","deletePaymentMethodsBulkAction","DeletePaymentMethod","shouldRetryItem","response","retrying","deletePaymentMethods","assignPaymentMethodsToChannelBulkAction","createBulkAssignToChannelAction","bulkAssignToChannel","paymentMethodIds","channelIds","mutate","AssignPaymentMethodsToChannelDocument","assignPaymentMethodsToChannel","removePaymentMethodsFromChannelBulkAction","createBulkRemoveFromChannelAction","bulkRemoveFromChannel","RemovePaymentMethodsFromChannelDocument","removePaymentMethodsFromChannel","GET_PAYMENT_METHOD_LIST","PaymentMethodListComponent","GetPaymentMethodListDocument","paymentMethods","GET_PROFILE_DETAIL","ProfileComponent","updateActiveAdministrator","GET_ROLE_DETAIL","ROLE_FRAGMENT","RoleDetailComponent","change","currentPermissions","newValue","unique","createRole","updateRole","detectChanges","tmp_14_0","deleteRolesBulkAction","deleteRoles","GET_ROLE_LIST","RoleListComponent","GetRoleListDocument","SUPER_ADMIN_ROLE_CODE","GET_SELLER_DETAIL","SellerDetailComponent","UpdateSeller","CreateSeller","createSeller","updateSeller","updateButton_r5","deleteSellersBulkAction","DeleteSeller","deleteSellers","SellerListComponent","GetSellerListDocument","ShippingEligibilityTestResultComponent","okToRun","runTest","TestOrderBuilderComponent","reduce","sum","l","localStorageService","orderLinesChange","loadFromLocalStorage","getActiveChannel","result","activeChannel","selectResult","addToLines","productVariantId","productVariantName","productAsset","persistToLocalStorage","line","setForCurrentLocation","getForCurrentLocation","emptyPlaceholder_r5","i5$1","TestAddressFormComponent","addressChange","getAvailableCountries","initialValue","city","countryCode","postalCode","province","form","subscription","unsubscribe","ShippingMethodTestResultComponent","eligible","GET_SHIPPING_METHOD_DETAIL","SHIPPING_METHOD_FRAGMENT","ShippingMethodDetailComponent","fulfillmentHandler","calculator","fulfillmentHandlers","UpdateShippingMethod","fetchTestResult$","shippingMethod","getShippingMethodOperations","shippingEligibilityCheckers","shippingCalculators","activeChannel$","testResult$","address","shippingAddress","streetLine1","testShippingMethod","getUpdatedShippingMethod","createShippingMethod","updateShippingMethod","console","setTestOrderLines","event","testOrderLines","setTestAddress","testAddress","allTestDataPresent","tmp_28_0","updateButton_r13","deleteShippingMethodsBulkAction","DeleteShippingMethod","deleteShippingMethods","assignShippingMethodsToChannelBulkAction","shippingMethodIds","AssignShippingMethodsToChannelDocument","assignShippingMethodsToChannel","removeShippingMethodsFromChannelBulkAction","RemoveShippingMethodsFromChannelDocument","removeShippingMethodsFromChannel","GET_SHIPPING_METHOD_LIST","ShippingMethodListComponent","GetShippingMethodListDocument","shippingMethods","STOCK_LOCATION_DETAIL_FRAGMENT","GET_STOCK_LOCATION_DETAIL","CREATE_STOCK_LOCATION","UPDATE_STOCK_LOCATION","StockLocationDetailComponent","CreateStockLocationDocument","createStockLocation","taxRate","UpdateStockLocationDocument","deleteStockLocationsBulkAction","DeleteStockLocation","DeleteCatalog","DeleteStockLocationsDocument","deleteStockLocations","DeletionResult","NOT_DELETED","assignStockLocationsToChannelBulkAction","UpdateCatalog","UpdateStockLocation","stockLocationIds","AssignStockLocationsToChannelDocument","assignStockLocationsToChannel","removeStockLocationsFromChannelBulkAction","RemoveStockLocationsFromChannelDocument","removeStockLocationsFromChannel","GET_STOCK_LOCATION_LIST","StockLocationListComponent","addFilters","addSorts","GetStockLocationListDocument","stockLocations","GET_TAX_CATEGORY_DETAIL","TAX_CATEGORY_FRAGMENT","TaxCategoryDetailComponent","UpdateTaxCategory","createTaxCategory","taxCategory","updateTaxCategory","deleteTaxCategoriesBulkAction","DeleteTaxCategory","deleteTaxCategories","GET_TAX_CATEGORY_LIST","TaxCategoryListComponent","getCustomFieldsFor","GetTaxCategoryListDocument","taxCategories","GET_TAX_RATE_DETAIL","TAX_RATE_FRAGMENT","TaxRateDetailComponent","taxCategoryId","customerGroupId","UpdateTaxRate","taxCategories$","getTaxCategories","categoryId","createTaxRate","updateTaxRate","deleteTaxRatesBulkAction","DeleteTaxRate","deleteTaxRates","GET_TAX_RATE_LIST","TaxRateListComponent","GetTaxRateListDocument","taxRates","TestShippingMethodsComponent","testEligibleShippingMethods","tmp_0_0","GET_ZONE_DETAIL","ZoneDetailComponent","UpdateZone","createZone","updateZone","deleteZonesBulkAction","DeleteZone","deleteZones","GET_ZONE_LIST","ZoneListComponent","modalService","GetZoneListDocument","zones","activeZoneId$","paramMap","pm","distinctUntilChanged","activeZoneId","z","findIndex","g","closeMembers","params","snapshot","queryParamsHandling","fromComponent","locals","size","memberIds","addMembersToZone","mapTo","EMPTY","countryCount","refreshMemberList","zoneMemberList","viewQuery","tmp_4_0","removeZoneMembersBulkAction","icon","iconClass","UpdateCustomerGroup","onClick","injector","hostComponent","clearSelection","DataService","NotificationService","removeMembersFromZone","ProfileResolver","BaseEntityResolver","getActiveAdministrator","activeAdministrator","ɵprov","factory","providedIn","createRoutes","pageService","path","component","PageComponent","breadcrumb","resolve","detail","inject","GetProfileDetailDocument","children","getPageTabRoutes","link","GetGlobalSettingsDetailDocument","SettingsModule","hasRegisteredTabsAndBulkActions","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","GetSellerDetailDocument","entityKey","getBreadcrumbs","GetChannelDetailDocument","GetAdministratorDetailDocument","GetRoleDetailDocument","GetShippingMethodDetailDocument","GetPaymentMethodDetailDocument","GetTaxCategoryDetailDocument","GetTaxRateDetailDocument","GetCountryDetailDocument","GetZoneDetailDocument","GetStockLocationDetailDocument","ɵmod","ɵinj","providers","provide","ROUTES","useFactory","multi","deps","PageService","imports","SharedModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/rxjs/dist/esm/internal/operators/withLatestFrom.js","../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-settings.mjs"],"sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\nexport function withLatestFrom(...inputs) {\n    const project = popResultSelector(inputs);\n    return operate((source, subscriber) => {\n        const len = inputs.length;\n        const otherValues = new Array(len);\n        let hasValue = inputs.map(() => false);\n        let ready = false;\n        for (let i = 0; i < len; i++) {\n            innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                otherValues[i] = value;\n                if (!ready && !hasValue[i]) {\n                    hasValue[i] = true;\n                    (ready = hasValue.every(identity)) && (hasValue = null);\n                }\n            }, noop));\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            if (ready) {\n                const values = [value, ...otherValues];\n                subscriber.next(project ? project(...values) : values);\n            }\n        }));\n    });\n}\n","import * as i0 from '@angular/core';\nimport { Directive, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ContentChild, ViewChild, Injectable, inject, NgModule } from '@angular/core';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { SelectionManager, GetZoneMembersDocument, GetCountryListDocument, ADMINISTRATOR_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, Permission, createBulkDeleteAction, TypedBaseListComponent, GetAdministratorListDocument, LogicalOperator, CHANNEL_FRAGMENT, GetChannelListDocument, COUNTRY_FRAGMENT, createUpdatedTranslatable, findTranslation, LanguageCode, PAYMENT_METHOD_FRAGMENT, configurableDefinitionToInstance, toConfigurableOperationInput, getConfigArgValue, createBulkAssignToChannelAction, AssignPaymentMethodsToChannelDocument, createBulkRemoveFromChannelAction, RemovePaymentMethodsFromChannelDocument, GetPaymentMethodListDocument, ROLE_FRAGMENT, GetRoleListDocument, GetSellerListDocument, SHIPPING_METHOD_FRAGMENT, AssignShippingMethodsToChannelDocument, RemoveShippingMethodsFromChannelDocument, GetShippingMethodListDocument, CreateStockLocationDocument, UpdateStockLocationDocument, DeleteStockLocationsDocument, DeletionResult, AssignStockLocationsToChannelDocument, RemoveStockLocationsFromChannelDocument, GetStockLocationListDocument, TAX_CATEGORY_FRAGMENT, GetTaxCategoryListDocument, TAX_RATE_FRAGMENT, GetTaxRateListDocument, GetZoneListDocument, DataService, NotificationService, BaseEntityResolver, PageComponent, GetProfileDetailDocument, GetGlobalSettingsDetailDocument, detailComponentWithResolver, GetSellerDetailDocument, GetChannelDetailDocument, GetAdministratorDetailDocument, GetRoleDetailDocument, GetShippingMethodDetailDocument, GetPaymentMethodDetailDocument, GetTaxCategoryDetailDocument, GetTaxRateDetailDocument, GetCountryDetailDocument, GetZoneDetailDocument, GetStockLocationDetailDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport { take, takeUntil, startWith, map, withLatestFrom, mergeMap, tap, switchMap as switchMap$1, distinctUntilChanged, mapTo } from 'rxjs/operators';\nimport * as i2$1 from '@angular/forms';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Subject, BehaviorSubject, merge, switchMap, of, combineLatest, EMPTY } from 'rxjs';\nimport * as i3 from '@clr/angular';\nimport * as i2 from '@angular/common';\nimport * as i3$1 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\nimport * as i5 from '@ngx-translate/core';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport { CUSTOMER_ROLE_CODE, DEFAULT_CHANNEL_CODE, SUPER_ADMIN_ROLE_CODE } from '@vendure/common/lib/shared-constants';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport * as i4 from '@ng-select/ng-select';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { unique } from '@vendure/common/lib/unique';\nimport * as i5$1 from '@angular/cdk/bidi';\n\nclass ZoneMemberControlsDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ZoneMemberControlsDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ZoneMemberControlsDirective, selector: \"[vdrZoneMemberControls]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ZoneMemberControlsDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vdrZoneMemberControls]',\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\nclass ZoneMemberListHeaderDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ZoneMemberListHeaderDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ZoneMemberListHeaderDirective, selector: \"[vdrZoneMemberListHeader]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ZoneMemberListHeaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vdrZoneMemberListHeader]',\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\nclass ZoneMemberListComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.selectedMemberIds = [];\n        this.selectionChange = new EventEmitter();\n        this.filterTermControl = new FormControl('');\n        this.currentPage = 1;\n        this.itemsPerPage = 10;\n        this.selectionManager = new SelectionManager({\n            multiSelect: true,\n            itemsAreEqual: (a, b) => a.id === b.id,\n            additiveMode: true,\n        });\n        this.membersInput$ = new Subject();\n        this.activeZoneInput$ = new BehaviorSubject(undefined);\n        this.destroy$ = new Subject();\n        this.refresh$ = new Subject();\n    }\n    ngOnInit() {\n        const activeZoneMembers$ = merge(this.activeZoneInput$, this.refresh$).pipe(switchMap(activeZone => this.activeZone\n            ? this.dataService\n                .query(GetZoneMembersDocument, { zoneId: this.activeZone.id })\n                .mapSingle(({ zone }) => zone?.members ?? [])\n            : of([])));\n        this.members$ = merge(activeZoneMembers$, this.membersInput$);\n        this.members$.pipe(take(1)).subscribe(members => {\n            this.selectionManager.setCurrentItems(members?.filter(m => this.selectedMemberIds.includes(m.id)) ?? []);\n        });\n        this.selectionManager.selectionChanges$.pipe(takeUntil(this.destroy$)).subscribe(selection => {\n            this.selectionChange.emit(selection.map(s => s.id));\n        });\n        this.filteredMembers$ = combineLatest(this.members$, this.filterTermControl.valueChanges.pipe(startWith(''))).pipe(map(([members, filterTerm]) => {\n            if (filterTerm) {\n                const term = filterTerm?.toLocaleLowerCase() ?? '';\n                return members.filter(m => m.name.toLocaleLowerCase().includes(term) ||\n                    m.code.toLocaleLowerCase().includes(term));\n            }\n            else {\n                return members;\n            }\n        }));\n        this.totalItems$ = this.filteredMembers$.pipe(map(members => members.length));\n    }\n    ngOnChanges(changes) {\n        if ('members' in changes) {\n            this.membersInput$.next(this.members ?? []);\n        }\n        if ('activeZone' in changes) {\n            this.activeZoneInput$.next(this.activeZone);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    refresh() {\n        this.refresh$.next();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ZoneMemberListComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ZoneMemberListComponent, selector: \"vdr-zone-member-list\", inputs: { locationId: \"locationId\", members: \"members\", selectedMemberIds: \"selectedMemberIds\", activeZone: \"activeZone\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"headerTemplate\", first: true, predicate: ZoneMemberListHeaderDirective, descendants: true }, { propertyName: \"controlsTemplate\", first: true, predicate: ZoneMemberControlsDirective, descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<vdr-data-table-2\\r\\n    [id]=\\\"locationId\\\"\\r\\n    [items]=\\\"filteredMembers$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage = $event\\\"\\r\\n    (pageChange)=\\\"currentPage = $event\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"locationId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"filterTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/settings/countries', member.id]\\\"\\r\\n                ><span> {{ member.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <vdr-chip  *ngIf=\\\"member.enabled\\\" colorType=\\\"success\\\">{{ 'common.enabled' | translate }}</vdr-chip>\\r\\n            <vdr-chip  *ngIf=\\\"!member.enabled\\\" colorType=\\\"warning\\\">{{ 'common.disabled' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".members-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:5;border-bottom:1px solid var(--color-component-border-200)}.members-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.members-header .clr-input{width:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ZoneMemberListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-zone-member-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-data-table-2\\r\\n    [id]=\\\"locationId\\\"\\r\\n    [items]=\\\"filteredMembers$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage = $event\\\"\\r\\n    (pageChange)=\\\"currentPage = $event\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"locationId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"filterTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/settings/countries', member.id]\\\"\\r\\n                ><span> {{ member.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <vdr-chip  *ngIf=\\\"member.enabled\\\" colorType=\\\"success\\\">{{ 'common.enabled' | translate }}</vdr-chip>\\r\\n            <vdr-chip  *ngIf=\\\"!member.enabled\\\" colorType=\\\"warning\\\">{{ 'common.disabled' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".members-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:5;border-bottom:1px solid var(--color-component-border-200)}.members-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.members-header .clr-input{width:100%}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }], propDecorators: { locationId: [{\n                type: Input\n            }], members: [{\n                type: Input\n            }], selectedMemberIds: [{\n                type: Input\n            }], activeZone: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [ZoneMemberListHeaderDirective]\n            }], controlsTemplate: [{\n                type: ContentChild,\n                args: [ZoneMemberControlsDirective]\n            }] } });\n\nconst GET_ZONE_MEMBERS = gql `\r\n    query GetZoneMembers($zoneId: ID!) {\r\n        zone(id: $zoneId) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            members {\r\n                createdAt\r\n                updatedAt\r\n                id\r\n                name\r\n                code\r\n                enabled\r\n            }\r\n        }\r\n    }\r\n`;\nclass AddCountryToZoneDialogComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.selectedMemberIds = [];\n    }\n    ngOnInit() {\n        this.currentMembers$ = this.dataService\n            .query(GetZoneMembersDocument, { zoneId: this.zoneId })\n            .mapSingle(({ zone }) => zone?.members ?? []);\n        this.availableCountries$ = this.dataService\n            .query(GetCountryListDocument, {\n            options: { take: 999 },\n        })\n            .mapStream(data => data.countries.items)\n            .pipe(withLatestFrom(this.currentMembers$), map(([countries, currentMembers]) => countries.filter(c => !currentMembers.find(cm => cm.id === c.id))));\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    add() {\n        this.resolveWith(this.selectedMemberIds);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AddCountryToZoneDialogComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: AddCountryToZoneDialogComponent, selector: \"vdr-add-country-to-zone-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}</ng-template>\\r\\n\\r\\n<vdr-zone-member-list\\r\\n    [members]=\\\"availableCountries$ | async\\\"\\r\\n    [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n    (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n>\\r\\n</vdr-zone-member-list>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedMemberIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: ZoneMemberListComponent, selector: \"vdr-zone-member-list\", inputs: [\"locationId\", \"members\", \"selectedMemberIds\", \"activeZone\"], outputs: [\"selectionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AddCountryToZoneDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-add-country-to-zone-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}</ng-template>\\r\\n\\r\\n<vdr-zone-member-list\\r\\n    [members]=\\\"availableCountries$ | async\\\"\\r\\n    [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n    (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n>\\r\\n</vdr-zone-member-list>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedMemberIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\n/**\n * A table showing and allowing the setting of all possible CRUD permissions.\n */\nclass PermissionGridComponent {\n    constructor() {\n        this.readonly = false;\n        this.permissionChange = new EventEmitter();\n    }\n    ngOnInit() {\n        this.buildGrid();\n    }\n    setPermission(permission, value) {\n        if (!this.readonly) {\n            this.permissionChange.emit({ permission, value });\n        }\n    }\n    toggleAll(defs) {\n        const value = defs.some(d => !this.activePermissions.includes(d.name));\n        for (const def of defs) {\n            this.permissionChange.emit({ permission: def.name, value });\n        }\n    }\n    buildGrid() {\n        const crudGroups = new Map();\n        const nonCrud = [];\n        const crudRe = /^(Create|Read|Update|Delete)([a-zA-Z]+)$/;\n        for (const def of this.permissionDefinitions) {\n            const isCrud = crudRe.test(def.name);\n            if (isCrud) {\n                const groupName = def.name.match(crudRe)?.[2];\n                if (groupName) {\n                    const existing = crudGroups.get(groupName);\n                    if (existing) {\n                        existing.push(def);\n                    }\n                    else {\n                        crudGroups.set(groupName, [def]);\n                    }\n                }\n            }\n            else if (def.assignable) {\n                nonCrud.push(def);\n            }\n        }\n        this.gridData = [\n            ...nonCrud.map(d => ({\n                label: d.name,\n                description: d.description,\n                permissions: [d],\n            })),\n            ...Array.from(crudGroups.entries()).map(([label, defs]) => ({\n                label,\n                description: this.extractCrudDescription(defs[0]),\n                permissions: defs,\n            })),\n        ];\n    }\n    extractCrudDescription(def) {\n        return def.description.replace(/Grants permission to [\\w]+/, 'Grants permissions on');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PermissionGridComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: PermissionGridComponent, selector: \"vdr-permission-grid\", inputs: { permissionDefinitions: \"permissionDefinitions\", activePermissions: \"activePermissions\", readonly: \"readonly\" }, outputs: { permissionChange: \"permissionChange\" }, ngImport: i0, template: \"<table class=\\\"table\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let section of gridData\\\">\\r\\n            <td class=\\\"permission-group left\\\">\\r\\n                <div><strong>{{ section.label | translate }}</strong></div>\\r\\n                <small>{{ section.description | translate }}</small><br>\\r\\n                <button *ngIf=\\\"1 < section.permissions.length && !readonly\\\" class=\\\"button-small\\\" (click)=\\\"toggleAll(section.permissions)\\\">\\r\\n                    {{ 'common.toggle-all' | translate }}\\r\\n                </button>\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let permission of section.permissions\\\" [attr.colspan]=\\\"section.permissions.length === 1 ? 4 : 1\\\">\\r\\n                <vdr-select-toggle\\r\\n                    size=\\\"small\\\"\\r\\n                    [title]=\\\"permission.description\\\"\\r\\n                    [label]=\\\"permission.name\\\"\\r\\n                    [disabled]=\\\"readonly\\\"\\r\\n                    [selected]=\\\"activePermissions?.includes(permission.name)\\\"\\r\\n                    (selectedChange)=\\\"setPermission(permission.name, $event)\\\"\\r\\n                ></vdr-select-toggle>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\":host{display:block}td.permission-group{max-width:300px;background-color:var(--color-component-bg-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.SelectToggleComponent, selector: \"vdr-select-toggle\", inputs: [\"size\", \"selected\", \"hiddenWhenOff\", \"disabled\", \"label\"], outputs: [\"selectedChange\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PermissionGridComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-permission-grid', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"table\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let section of gridData\\\">\\r\\n            <td class=\\\"permission-group left\\\">\\r\\n                <div><strong>{{ section.label | translate }}</strong></div>\\r\\n                <small>{{ section.description | translate }}</small><br>\\r\\n                <button *ngIf=\\\"1 < section.permissions.length && !readonly\\\" class=\\\"button-small\\\" (click)=\\\"toggleAll(section.permissions)\\\">\\r\\n                    {{ 'common.toggle-all' | translate }}\\r\\n                </button>\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let permission of section.permissions\\\" [attr.colspan]=\\\"section.permissions.length === 1 ? 4 : 1\\\">\\r\\n                <vdr-select-toggle\\r\\n                    size=\\\"small\\\"\\r\\n                    [title]=\\\"permission.description\\\"\\r\\n                    [label]=\\\"permission.name\\\"\\r\\n                    [disabled]=\\\"readonly\\\"\\r\\n                    [selected]=\\\"activePermissions?.includes(permission.name)\\\"\\r\\n                    (selectedChange)=\\\"setPermission(permission.name, $event)\\\"\\r\\n                ></vdr-select-toggle>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\":host{display:block}td.permission-group{max-width:300px;background-color:var(--color-component-bg-200)}\\n\"] }]\n        }], propDecorators: { permissionDefinitions: [{\n                type: Input\n            }], activePermissions: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], permissionChange: [{\n                type: Output\n            }] } });\n\nconst GET_ADMINISTRATOR_DETAIL = gql `\r\n    query GetAdministratorDetail($id: ID!) {\r\n        administrator(id: $id) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\nclass AdminDetailComponent extends TypedBaseDetailComponent {\n    getAvailableChannels() {\n        return Object.values(this.selectedRolePermissions);\n    }\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Administrator');\n        this.detailForm = this.formBuilder.group({\n            emailAddress: ['', Validators.required],\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            password: [''],\n            roles: [\n                [],\n            ],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.selectedRoles = [];\n        this.selectedRolePermissions = {};\n        this.selectedChannelId = null;\n    }\n    ngOnInit() {\n        this.init();\n        this.allRoles$ = this.dataService.administrator\n            .getRoles(999)\n            .mapStream(item => item.roles.items.filter(i => i.code !== CUSTOMER_ROLE_CODE));\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\n            if (!userStatus.permissions.includes(Permission.CreateAdministrator) &&\n                !userStatus.permissions.includes(Permission.UpdateAdministrator)) {\n                const rolesSelect = this.detailForm.get('roles');\n                if (rolesSelect) {\n                    rolesSelect.disable();\n                }\n            }\n        });\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    rolesChanged(roles) {\n        this.buildPermissionsMap();\n    }\n    getPermissionsForSelectedChannel() {\n        function getActivePermissions(input) {\n            return Object.entries(input)\n                .filter(([permission, active]) => active)\n                .map(([permission, active]) => permission);\n        }\n        if (this.selectedChannelId) {\n            const selectedChannel = this.selectedRolePermissions[this.selectedChannelId];\n            if (selectedChannel) {\n                const permissionMap = this.selectedRolePermissions[this.selectedChannelId].permissions;\n                return getActivePermissions(permissionMap);\n            }\n        }\n        const channels = Object.values(this.selectedRolePermissions);\n        if (0 < channels.length) {\n            this.selectedChannelId = channels[0].channelId;\n            return getActivePermissions(channels[0].permissions);\n        }\n        return [];\n    }\n    create() {\n        const { emailAddress, firstName, lastName, password, customFields, roles } = this.detailForm.value;\n        if (!emailAddress || !firstName || !lastName || !password) {\n            return;\n        }\n        const administrator = {\n            emailAddress,\n            firstName,\n            lastName,\n            password,\n            customFields,\n            roleIds: roles?.map(role => role.id).filter(notNullOrUndefined) ?? [],\n        };\n        this.dataService.administrator.createAdministrator(administrator).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Administrator',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createAdministrator.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Administrator',\n            });\n        });\n    }\n    save() {\n        this.entity$\n            .pipe(take(1), mergeMap(({ id }) => {\n            const formValue = this.detailForm.value;\n            const administrator = {\n                id,\n                emailAddress: formValue.emailAddress,\n                firstName: formValue.firstName,\n                lastName: formValue.lastName,\n                password: formValue.password,\n                customFields: formValue.customFields,\n                roleIds: formValue.roles?.map(role => role.id),\n            };\n            return this.dataService.administrator.updateAdministrator(administrator);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Administrator',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Administrator',\n            });\n        });\n    }\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            emailAddress: entity.emailAddress,\n            firstName: entity.firstName,\n            lastName: entity.lastName,\n            roles: entity.user.roles,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\n        }\n        const passwordControl = this.detailForm.get('password');\n        if (passwordControl) {\n            if (!entity.id) {\n                passwordControl.setValidators([Validators.required]);\n            }\n            else {\n                passwordControl.setValidators([]);\n            }\n        }\n        this.buildPermissionsMap();\n    }\n    buildPermissionsMap() {\n        const permissionsControl = this.detailForm.get('roles');\n        if (permissionsControl) {\n            const roles = permissionsControl.value;\n            const channelIdPermissionsMap = new Map();\n            const channelIdCodeMap = new Map();\n            for (const role of roles ?? []) {\n                for (const channel of role.channels) {\n                    const channelPermissions = channelIdPermissionsMap.get(channel.id);\n                    const permissionSet = channelPermissions || new Set();\n                    role.permissions.forEach(p => permissionSet.add(p));\n                    channelIdPermissionsMap.set(channel.id, permissionSet);\n                    channelIdCodeMap.set(channel.id, channel.code);\n                }\n            }\n            this.selectedRolePermissions = {};\n            for (const channelId of Array.from(channelIdPermissionsMap.keys())) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const permissionSet = channelIdPermissionsMap.get(channelId);\n                const permissionsHash = {};\n                for (const def of this.serverConfigService.getPermissionDefinitions()) {\n                    permissionsHash[def.name] = permissionSet.has(def.name);\n                }\n                this.selectedRolePermissions[channelId] = {\n                    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n                    channelId,\n                    channelCode: channelIdCodeMap.get(channelId),\n                    permissions: permissionsHash,\n                    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n                };\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AdminDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: AdminDetailComponent, selector: \"vdr-admin-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"administrator-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.email-address-or-identifier' | translate\\\"\\r\\n                        for=\\\"emailAddress\\\"\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"emailAddress\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"emailAddress\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input\\r\\n                            id=\\\"firstName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"firstName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input\\r\\n                            id=\\\"lastName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"lastName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"\\r\\n                            !(isNew$ | async) &&\\r\\n                            (['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\r\\n                        \\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block>\\r\\n        <vdr-card [title]=\\\"'settings.roles' | translate\\\">\\r\\n            <ng-select\\r\\n                [items]=\\\"allRoles$ | async\\\"\\r\\n                [multiple]=\\\"true\\\"\\r\\n                [hideSelected]=\\\"true\\\"\\r\\n                formControlName=\\\"roles\\\"\\r\\n                (change)=\\\"rolesChanged($event)\\\"\\r\\n                bindLabel=\\\"description\\\"\\r\\n            ></ng-select>\\r\\n\\r\\n            <ul class=\\\"nav mt-2\\\" role=\\\"tablist\\\">\\r\\n                <li role=\\\"presentation\\\" class=\\\"nav-item\\\" *ngFor=\\\"let channel of getAvailableChannels()\\\">\\r\\n                    <button\\r\\n                        [id]=\\\"channel.channelId\\\"\\r\\n                        (click)=\\\"selectedChannelId = channel.channelId\\\"\\r\\n                        class=\\\"btn btn-link nav-link\\\"\\r\\n                        [class.active]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        [attr.aria-selected]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                    >\\r\\n                        {{ channel.channelCode | channelCodeToLabel | translate }}\\r\\n                    </button>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <vdr-permission-grid\\r\\n                [activePermissions]=\\\"getPermissionsForSelectedChannel()\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [readonly]=\\\"true\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"ul.nav{overflow-x:auto;overflow-y:hidden}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i4.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: PermissionGridComponent, selector: \"vdr-permission-grid\", inputs: [\"permissionDefinitions\", \"activePermissions\", \"readonly\"], outputs: [\"permissionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AdminDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-admin-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"administrator-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.email-address-or-identifier' | translate\\\"\\r\\n                        for=\\\"emailAddress\\\"\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"emailAddress\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"emailAddress\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input\\r\\n                            id=\\\"firstName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"firstName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input\\r\\n                            id=\\\"lastName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"lastName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"\\r\\n                            !(isNew$ | async) &&\\r\\n                            (['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\r\\n                        \\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block>\\r\\n        <vdr-card [title]=\\\"'settings.roles' | translate\\\">\\r\\n            <ng-select\\r\\n                [items]=\\\"allRoles$ | async\\\"\\r\\n                [multiple]=\\\"true\\\"\\r\\n                [hideSelected]=\\\"true\\\"\\r\\n                formControlName=\\\"roles\\\"\\r\\n                (change)=\\\"rolesChanged($event)\\\"\\r\\n                bindLabel=\\\"description\\\"\\r\\n            ></ng-select>\\r\\n\\r\\n            <ul class=\\\"nav mt-2\\\" role=\\\"tablist\\\">\\r\\n                <li role=\\\"presentation\\\" class=\\\"nav-item\\\" *ngFor=\\\"let channel of getAvailableChannels()\\\">\\r\\n                    <button\\r\\n                        [id]=\\\"channel.channelId\\\"\\r\\n                        (click)=\\\"selectedChannelId = channel.channelId\\\"\\r\\n                        class=\\\"btn btn-link nav-link\\\"\\r\\n                        [class.active]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        [attr.aria-selected]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                    >\\r\\n                        {{ channel.channelCode | channelCodeToLabel | translate }}\\r\\n                    </button>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <vdr-permission-grid\\r\\n                [activePermissions]=\\\"getPermissionsForSelectedChannel()\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [readonly]=\\\"true\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"ul.nav{overflow-x:auto;overflow-y:hidden}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteAdministratorsBulkAction = createBulkDeleteAction({\n    location: 'administrator-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteAdministrator),\n    getItemName: item => item.firstName + ' ' + item.lastName,\n    bulkDelete: (dataService, ids) => dataService.administrator.deleteAdministrators(ids).pipe(map(res => res.deleteAdministrators)),\n});\n\nconst GET_ADMINISTRATOR_LIST = gql `\n    query GetAdministratorList($options: AdministratorListOptions) {\n        administrators(options: $options) {\n            items {\n                ...AdministratorListItem\n            }\n            totalItems\n        }\n    }\n    fragment AdministratorListItem on Administrator {\n        id\n        createdAt\n        updatedAt\n        firstName\n        lastName\n        emailAddress\n        user {\n            id\n            identifier\n            lastLogin\n            roles {\n                id\n                createdAt\n                updatedAt\n                code\n                description\n            }\n        }\n    }\n`;\nclass AdministratorListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'administrator-list';\n        this.customFields = this.getCustomFieldConfig('Administrator');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'firstName',\n            type: { kind: 'text' },\n            label: marker('settings.first-name'),\n            filterField: 'firstName',\n        })\n            .addFilter({\n            name: 'lastName',\n            type: { kind: 'text' },\n            label: marker('settings.last-name'),\n            filterField: 'lastName',\n        })\n            .addFilter({\n            name: 'emailAddress',\n            type: { kind: 'text' },\n            label: marker('settings.email-address'),\n            filterField: 'emailAddress',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'lastName' })\n            .addSort({ name: 'emailAddress' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetAdministratorListDocument,\n            getItems: data => data.administrators,\n            setVariables: (skip, take) => this.createSearchQuery(skip, take, this.searchTermControl.value),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    createSearchQuery(skip, take, searchTerm) {\n        let _filter = {};\n        let filterOperator = LogicalOperator.AND;\n        if (searchTerm) {\n            _filter = {\n                emailAddress: {\n                    contains: searchTerm,\n                },\n                firstName: {\n                    contains: searchTerm,\n                },\n                lastName: {\n                    contains: searchTerm,\n                },\n            };\n            filterOperator = LogicalOperator.OR;\n        }\n        return {\n            options: {\n                skip,\n                take,\n                filter: {\n                    ...(_filter ?? {}),\n                    ...this.filters.createFilterInput(),\n                },\n                sort: this.sorts.createSortInput(),\n                filterOperator,\n            },\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AdministratorListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: AdministratorListComponent, selector: \"vdr-administrator-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'admin.create-new-administrator' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"administrator-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"administrator-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('lastName')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', administrator.id]\\\"\\r\\n                ><span>{{ administrator.firstName }} {{ administrator.lastName }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.email-address' | translate\\\" id=\\\"email-address\\\" [sort]=\\\"sorts.get('emailAddress')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.roles' | translate\\\" id=\\\"roles\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let role of administrator.user.roles\\\">{{ role.description }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{min-width:300px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AdministratorListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-administrator-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'admin.create-new-administrator' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"administrator-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"administrator-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('lastName')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', administrator.id]\\\"\\r\\n                ><span>{{ administrator.firstName }} {{ administrator.lastName }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.email-address' | translate\\\" id=\\\"email-address\\\" [sort]=\\\"sorts.get('emailAddress')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.roles' | translate\\\" id=\\\"roles\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let role of administrator.user.roles\\\">{{ role.description }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{min-width:300px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst GET_CHANNEL_DETAIL = gql `\r\n    query GetChannelDetail($id: ID!) {\r\n        channel(id: $id) {\r\n            ...Channel\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\nclass ChannelDetailComponent extends TypedBaseDetailComponent {\n    constructor(serverConfigService, changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.serverConfigService = serverConfigService;\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.DEFAULT_CHANNEL_CODE = DEFAULT_CHANNEL_CODE;\n        this.customFields = this.getCustomFieldConfig('Channel');\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            token: ['', Validators.required],\n            pricesIncludeTax: [false],\n            availableLanguageCodes: [[]],\n            availableCurrencyCodes: [[]],\n            defaultCurrencyCode: ['', Validators.required],\n            defaultShippingZoneId: ['', Validators.required],\n            defaultLanguageCode: [undefined, Validators.required],\n            defaultTaxZoneId: ['', Validators.required],\n            sellerId: ['', Validators.required],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.SuperAdmin, Permission.UpdateChannel, Permission.CreateChannel];\n    }\n    ngOnInit() {\n        this.init();\n        // TODO: make this lazy-loaded autocomplete\n        this.sellers$ = this.dataService.settings.getSellerList().mapSingle(data => data.sellers.items);\n        this.availableLanguageCodes$ = this.serverConfigService.getAvailableLanguages();\n        this.detailForm.controls.availableCurrencyCodes.valueChanges\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => {\n            if (value) {\n                const defaultCurrencyCode = this.detailForm.controls.defaultCurrencyCode.value;\n                if (defaultCurrencyCode && !value.includes(defaultCurrencyCode)) {\n                    this.detailForm.controls.defaultCurrencyCode.setValue(value[0]);\n                }\n            }\n        });\n        this.detailForm.controls.availableLanguageCodes.valueChanges\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => {\n            if (value) {\n                const defaultLanguageCode = this.detailForm.controls.defaultLanguageCode.value;\n                if (defaultLanguageCode && !value.includes(defaultLanguageCode)) {\n                    this.detailForm.controls.defaultLanguageCode.setValue(value[0]);\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    saveButtonEnabled() {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const { code, token, defaultLanguageCode, pricesIncludeTax, defaultCurrencyCode, defaultShippingZoneId, defaultTaxZoneId, customFields, sellerId, } = this.detailForm.value;\n        if (!code ||\n            !token ||\n            !defaultLanguageCode ||\n            !defaultCurrencyCode ||\n            !defaultShippingZoneId ||\n            !defaultTaxZoneId) {\n            return;\n        }\n        const input = {\n            code,\n            token,\n            defaultLanguageCode,\n            pricesIncludeTax: !!pricesIncludeTax,\n            defaultCurrencyCode,\n            defaultShippingZoneId,\n            defaultTaxZoneId,\n            customFields,\n            sellerId,\n        };\n        this.dataService.settings\n            .createChannel(input)\n            .pipe(mergeMap(({ createChannel }) => this.dataService.auth.currentUser().single$.pipe(map(({ me }) => ({\n            me,\n            createChannel,\n        })))), mergeMap(({ me, createChannel }) => \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.dataService.client.updateUserChannels(me.channels).pipe(map(() => createChannel))))\n            .subscribe(data => {\n            switch (data.__typename) {\n                case 'Channel':\n                    this.notificationService.success(marker('common.notify-create-success'), {\n                        entity: 'Channel',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.id], { relativeTo: this.route });\n                    break;\n                case 'LanguageNotAvailableError':\n                    this.notificationService.error(data.message);\n                    break;\n            }\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(channel => {\n            const input = {\n                id: channel.id,\n                code: formValue.code,\n                token: formValue.token,\n                pricesIncludeTax: formValue.pricesIncludeTax,\n                availableLanguageCodes: formValue.availableLanguageCodes,\n                availableCurrencyCodes: formValue.availableCurrencyCodes,\n                defaultCurrencyCode: formValue.defaultCurrencyCode,\n                defaultShippingZoneId: formValue.defaultShippingZoneId,\n                defaultLanguageCode: formValue.defaultLanguageCode,\n                defaultTaxZoneId: formValue.defaultTaxZoneId,\n                customFields: formValue.customFields,\n                sellerId: formValue.sellerId,\n            };\n            return this.dataService.settings.updateChannel(input);\n        }))\n            .subscribe(({ updateChannel }) => {\n            switch (updateChannel.__typename) {\n                case 'Channel':\n                    this.notificationService.success(marker('common.notify-update-success'), {\n                        entity: 'Channel',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    break;\n                case 'LanguageNotAvailableError':\n                    this.notificationService.error(updateChannel.message);\n            }\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            code: entity.code,\n            token: entity.token || this.generateToken(),\n            pricesIncludeTax: entity.pricesIncludeTax,\n            availableLanguageCodes: entity.availableLanguageCodes,\n            availableCurrencyCodes: entity.availableCurrencyCodes,\n            defaultCurrencyCode: entity.defaultCurrencyCode,\n            defaultShippingZoneId: entity.defaultShippingZone?.id ?? '',\n            defaultLanguageCode: entity.defaultLanguageCode,\n            defaultTaxZoneId: entity.defaultTaxZone?.id ?? '',\n            sellerId: entity.seller?.id ?? '',\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\n        }\n        if (entity.code === DEFAULT_CHANNEL_CODE) {\n            const codeControl = this.detailForm.get('code');\n            if (codeControl) {\n                codeControl.disable();\n            }\n        }\n    }\n    generateToken() {\n        return Array.from(crypto.getRandomValues(new Uint8Array(10)))\n            .map(b => b.toString(16).padStart(2, '0'))\n            .join('');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ChannelDetailComponent, deps: [{ token: i1.ServerConfigService }, { token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ChannelDetailComponent, selector: \"vdr-channel-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateChannel']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"channel-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code !== DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code === DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                    >\\r\\n                        {{ entity?.code | channelCodeToLabel | translate }}\\r\\n                    </vdr-form-item>\\r\\n                    <vdr-form-field [label]=\\\"'settings.channel-token' | translate\\\" for=\\\"token\\\">\\r\\n                        <input\\r\\n                            id=\\\"token\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"token\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-field [label]=\\\"'common.seller' | translate\\\" for=\\\"sellerId\\\">\\r\\n                        <select\\r\\n                            name=\\\"sellerId\\\"\\r\\n                            formControlName=\\\"sellerId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option selected value style=\\\"display: none\\\"></option>\\r\\n                            <option *ngFor=\\\"let seller of sellers$ | async\\\" [value]=\\\"seller.id\\\">\\r\\n                                {{ seller.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                        for=\\\"availableLanguageCodes\\\"\\r\\n                    >\\r\\n                        <vdr-language-code-selector\\r\\n                            formControlName=\\\"availableLanguageCodes\\\"\\r\\n                            [languageCodes]=\\\"availableLanguageCodes$ | async\\\"\\r\\n                        ></vdr-language-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-currencies' | translate\\\"\\r\\n                        for=\\\"availableCurrencyCodes\\\"\\r\\n                    >\\r\\n                        <vdr-currency-code-selector\\r\\n                            formControlName=\\\"availableCurrencyCodes\\\"\\r\\n                        ></vdr-currency-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.defaults' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.default-language' | translate\\\" for=\\\"defaultLanguage\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultLanguageCode\\\"\\r\\n                            formControlName=\\\"defaultLanguageCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let languageCode of detailForm.value.availableLanguageCodes\\\"\\r\\n                                [value]=\\\"languageCode\\\"\\r\\n                            >\\r\\n                                {{ languageCode | localeLanguageName }} ({{ languageCode | uppercase }})\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.default-currency' | translate\\\" for=\\\"defaultCurrency\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultCurrencyCode\\\"\\r\\n                            formControlName=\\\"defaultCurrencyCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let code of detailForm.value.availableCurrencyCodes\\\"\\r\\n                                [value]=\\\"code\\\"\\r\\n                            >\\r\\n                                {{ code | localeCurrencyName }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-tax-zone' | translate\\\"\\r\\n                            for=\\\"defaultTaxZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                formControlName=\\\"defaultTaxZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultTaxZoneId\\\"\\r\\n                            clrAlertType=\\\"danger\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-tax-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-shipping-zone' | translate\\\"\\r\\n                            for=\\\"defaultShippingZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                name=\\\"defaultShippingZoneId\\\"\\r\\n                                formControlName=\\\"defaultShippingZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultShippingZoneId\\\"\\r\\n                            clrAlertType=\\\"danger\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-shipping-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.prices-include-tax' | translate\\\"\\r\\n                        for=\\\"pricesIncludeTax\\\"\\r\\n                    >\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"pricesIncludeTax\\\"\\r\\n                                formControlName=\\\"pricesIncludeTax\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Channel\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"channel-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertLightweight\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: i1.ZoneSelectorComponent, selector: \"vdr-zone-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"component\", type: i1.CurrencyCodeSelectorComponent, selector: \"vdr-currency-code-selector\" }, { kind: \"component\", type: i1.LanguageCodeSelectorComponent, selector: \"vdr-language-code-selector\", inputs: [\"languageCodes\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.UpperCasePipe, name: \"uppercase\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyNamePipe, name: \"localeCurrencyName\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleLanguageNamePipe, name: \"localeLanguageName\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ChannelDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-channel-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateChannel']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"channel-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code !== DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code === DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                    >\\r\\n                        {{ entity?.code | channelCodeToLabel | translate }}\\r\\n                    </vdr-form-item>\\r\\n                    <vdr-form-field [label]=\\\"'settings.channel-token' | translate\\\" for=\\\"token\\\">\\r\\n                        <input\\r\\n                            id=\\\"token\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"token\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-field [label]=\\\"'common.seller' | translate\\\" for=\\\"sellerId\\\">\\r\\n                        <select\\r\\n                            name=\\\"sellerId\\\"\\r\\n                            formControlName=\\\"sellerId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option selected value style=\\\"display: none\\\"></option>\\r\\n                            <option *ngFor=\\\"let seller of sellers$ | async\\\" [value]=\\\"seller.id\\\">\\r\\n                                {{ seller.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                        for=\\\"availableLanguageCodes\\\"\\r\\n                    >\\r\\n                        <vdr-language-code-selector\\r\\n                            formControlName=\\\"availableLanguageCodes\\\"\\r\\n                            [languageCodes]=\\\"availableLanguageCodes$ | async\\\"\\r\\n                        ></vdr-language-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-currencies' | translate\\\"\\r\\n                        for=\\\"availableCurrencyCodes\\\"\\r\\n                    >\\r\\n                        <vdr-currency-code-selector\\r\\n                            formControlName=\\\"availableCurrencyCodes\\\"\\r\\n                        ></vdr-currency-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.defaults' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.default-language' | translate\\\" for=\\\"defaultLanguage\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultLanguageCode\\\"\\r\\n                            formControlName=\\\"defaultLanguageCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let languageCode of detailForm.value.availableLanguageCodes\\\"\\r\\n                                [value]=\\\"languageCode\\\"\\r\\n                            >\\r\\n                                {{ languageCode | localeLanguageName }} ({{ languageCode | uppercase }})\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.default-currency' | translate\\\" for=\\\"defaultCurrency\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultCurrencyCode\\\"\\r\\n                            formControlName=\\\"defaultCurrencyCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let code of detailForm.value.availableCurrencyCodes\\\"\\r\\n                                [value]=\\\"code\\\"\\r\\n                            >\\r\\n                                {{ code | localeCurrencyName }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-tax-zone' | translate\\\"\\r\\n                            for=\\\"defaultTaxZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                formControlName=\\\"defaultTaxZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultTaxZoneId\\\"\\r\\n                            clrAlertType=\\\"danger\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-tax-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-shipping-zone' | translate\\\"\\r\\n                            for=\\\"defaultShippingZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                name=\\\"defaultShippingZoneId\\\"\\r\\n                                formControlName=\\\"defaultShippingZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultShippingZoneId\\\"\\r\\n                            clrAlertType=\\\"danger\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-shipping-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.prices-include-tax' | translate\\\"\\r\\n                        for=\\\"pricesIncludeTax\\\"\\r\\n                    >\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"pricesIncludeTax\\\"\\r\\n                                formControlName=\\\"pricesIncludeTax\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Channel\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"channel-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.ServerConfigService }, { type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteChannelsBulkAction = createBulkDeleteAction({\n    location: 'channel-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.SuperAdmin) || userPermissions.includes(Permission.DeleteChannel),\n    getItemName: item => item.code,\n    bulkDelete: (dataService, ids) => {\n        return dataService.settings.deleteChannels(ids).pipe(mergeMap(({ deleteChannels }) => dataService.auth.currentUser().single$.pipe(map(({ me }) => ({\n            me,\n            deleteChannels,\n        })))), mergeMap(({ me, deleteChannels }) => \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        dataService.client.updateUserChannels(me.channels).pipe(map(() => deleteChannels))));\n    },\n});\n\nconst GET_CHANNEL_LIST = gql `\n    query GetChannelList($options: ChannelListOptions) {\n        channels(options: $options) {\n            items {\n                ...Channel\n            }\n            totalItems\n        }\n    }\n    ${CHANNEL_FRAGMENT}\n`;\nclass ChannelListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'channel-list';\n        this.customFields = this.getCustomFieldConfig('Channel');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: marker('common.code'),\n            filterField: 'code',\n        })\n            .addFilter({\n            name: 'token',\n            type: { kind: 'text' },\n            label: marker('settings.channel-token'),\n            filterField: 'token',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'code' })\n            .addSort({ name: 'token' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetChannelListDocument,\n            getItems: data => data.channels,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        code: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    isDefaultChannel(channelCode) {\n        return channelCode === DEFAULT_CHANNEL_CODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ChannelListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ChannelListComponent, selector: \"vdr-channel-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-list\\\" />\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateChannel']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-channel' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"channel-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"channel-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', channel.id]\\\"\\r\\n                ><span>{{ channel.code | channelCodeToLabel | translate }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel-token' | translate\\\" id=\\\"channel-token\\\" [sort]=\\\"sorts.get('token')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.token }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ChannelListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-channel-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-list\\\" />\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateChannel']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-channel' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"channel-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"channel-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', channel.id]\\\"\\r\\n                ><span>{{ channel.code | channelCodeToLabel | translate }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel-token' | translate\\\" id=\\\"channel-token\\\" [sort]=\\\"sorts.get('token')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.token }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nconst GET_COUNTRY_DETAIL = gql `\r\n    query GetCountryDetail($id: ID!) {\r\n        country(id: $id) {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\nclass CountryDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Region');\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            name: ['', Validators.required],\n            enabled: [true],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateCountry];\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input = createUpdatedTranslatable({\n            translatable: {\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                code: '',\n                name: '',\n                enabled: false,\n                translations: [],\n            },\n            updatedFields: formValue,\n            languageCode: this.languageCode,\n            customFieldConfig: this.customFields,\n            defaultTranslation: {\n                name: formValue.name ?? '',\n                languageCode: this.languageCode,\n            },\n        });\n        this.dataService.settings.createCountry(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Country',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createCountry.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Country',\n            });\n        });\n    }\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([country, languageCode]) => {\n            const formValue = this.detailForm.value;\n            const input = createUpdatedTranslatable({\n                translatable: country,\n                updatedFields: formValue,\n                customFieldConfig: this.customFields,\n                languageCode,\n                defaultTranslation: {\n                    name: formValue.name ?? '',\n                    languageCode,\n                },\n            });\n            return this.dataService.settings.updateCountry(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Country',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Country',\n            });\n        });\n    }\n    setFormValues(country, languageCode) {\n        const currentTranslation = findTranslation(country, languageCode);\n        this.detailForm.patchValue({\n            code: country.code,\n            name: currentTranslation ? currentTranslation.name : '',\n            enabled: country.enabled,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), country, currentTranslation);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CountryDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CountryDetailComponent, selector: \"vdr-country-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"country-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Region\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"country-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CountryDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-country-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"country-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Region\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"country-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteCountriesBulkAction = createBulkDeleteAction({\n    location: 'country-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\n        userPermissions.includes(Permission.DeleteCountry),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.settings.deleteCountries(ids).pipe(map(res => res.deleteCountries)),\n});\n\nconst GET_COUNTRY_LIST = gql `\n    query GetCountryList($options: CountryListOptions) {\n        countries(options: $options) {\n            items {\n                ...CountryListItem\n            }\n            totalItems\n        }\n    }\n    fragment CountryListItem on Country {\n        id\n        createdAt\n        updatedAt\n        code\n        name\n        type\n        enabled\n    }\n`;\nclass CountryListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'country-list';\n        this.customFields = this.getCustomFieldConfig('Region');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: marker('common.code'),\n            filterField: 'code',\n        })\n            .addFilter({\n            name: 'enabled',\n            type: { kind: 'boolean' },\n            label: marker('common.enabled'),\n            filterField: 'enabled',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('name', 'ASC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'code' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetCountryListDocument,\n            getItems: data => data.countries,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CountryListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CountryListComponent, selector: \"vdr-country-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateCountry']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-country' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"country-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"country-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.name' | translate\\\"\\r\\n        id=\\\"name\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('name')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', country.id]\\\"\\r\\n                ><span>{{ country.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"country.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!country.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{margin-top:6px;min-width:300px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CountryListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-country-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateCountry']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-country' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"country-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"country-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.name' | translate\\\"\\r\\n        id=\\\"name\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('name')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', country.id]\\\"\\r\\n                ><span>{{ country.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"country.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!country.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{margin-top:6px;min-width:300px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst GET_GLOBAL_SETTINGS_DETAIL = gql `\r\n    query GetGlobalSettingsDetail {\r\n        globalSettings {\r\n            ...GlobalSettingsDetail\r\n        }\r\n    }\r\n    fragment GlobalSettingsDetail on GlobalSettings {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        availableLanguages\r\n        trackInventory\r\n        outOfStockThreshold\r\n    }\r\n`;\nclass GlobalSettingsComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('GlobalSettings');\n        this.detailForm = this.formBuilder.group({\n            availableLanguages: [[]],\n            trackInventory: false,\n            outOfStockThreshold: [0, Validators.required],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.languageCodes = Object.values(LanguageCode);\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateGlobalSettings];\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\n            if (!userStatus.permissions.includes(Permission.UpdateSettings)) {\n                const languagesSelect = this.detailForm.get('availableLanguages');\n                if (languagesSelect) {\n                    languagesSelect.disable();\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        this.dataService.settings\n            .updateGlobalSettings(this.detailForm.value)\n            .pipe(tap(({ updateGlobalSettings }) => {\n            switch (updateGlobalSettings.__typename) {\n                case 'GlobalSettings':\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success(marker('common.notify-update-success'), {\n                        entity: 'Settings',\n                    });\n                    break;\n                case 'ChannelDefaultLanguageError':\n                    this.notificationService.error(updateGlobalSettings.message);\n            }\n        }), switchMap$1(() => this.serverConfigService.refreshGlobalSettings()), withLatestFrom(this.dataService.client.uiState().single$))\n            .subscribe(([{ globalSettings }, { uiState }]) => {\n            const availableLangs = globalSettings.availableLanguages;\n            if (availableLangs.length && !availableLangs.includes(uiState.contentLanguage)) {\n                this.dataService.client.setContentLanguage(availableLangs[0]).subscribe();\n            }\n        });\n    }\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            availableLanguages: entity.availableLanguages,\n            trackInventory: entity.trackInventory,\n            outOfStockThreshold: entity.outOfStockThreshold,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: GlobalSettingsComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: GlobalSettingsComponent, selector: \"vdr-global-settings\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"global-setting-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"global-setting-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-block>\\r\\n        <vdr-card>\\r\\n            <div class=\\\"form-grid\\\">\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                    for=\\\"availableLanguages\\\"\\r\\n                    [tooltip]=\\\"'settings.global-available-languages-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <vdr-language-code-selector\\r\\n                        formControlName=\\\"availableLanguages\\\"\\r\\n                        [languageCodes]=\\\"languageCodes\\\"\\r\\n                    ></vdr-language-code-selector>\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.global-out-of-stock-threshold' | translate\\\"\\r\\n                    for=\\\"outOfStockThreshold\\\"\\r\\n                    [tooltip]=\\\"'settings.global-out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <input\\r\\n                        id=\\\"outOfStockThreshold\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        formControlName=\\\"outOfStockThreshold\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    />\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.track-inventory-default' | translate\\\"\\r\\n                    for=\\\"enabled\\\"\\r\\n                    [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card\\r\\n            formGroupName=\\\"customFields\\\"\\r\\n            *ngIf=\\\"customFields.length\\\"\\r\\n            [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n        >\\r\\n            <vdr-tabbed-custom-fields\\r\\n                entityName=\\\"GlobalSettings\\\"\\r\\n                [customFields]=\\\"customFields\\\"\\r\\n                [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n            ></vdr-tabbed-custom-fields>\\r\\n        </vdr-card>\\r\\n\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"global-settings-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"::ng-deep ng-select .ng-value>span{margin:0!important}::ng-deep ng-select .ng-arrow-wrapper .ng-arrow{margin:0!important}::ng-deep ng-select .ng-select-container>span{margin:0!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: i1.LanguageCodeSelectorComponent, selector: \"vdr-language-code-selector\", inputs: [\"languageCodes\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: GlobalSettingsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-global-settings', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"global-setting-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"global-setting-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-block>\\r\\n        <vdr-card>\\r\\n            <div class=\\\"form-grid\\\">\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                    for=\\\"availableLanguages\\\"\\r\\n                    [tooltip]=\\\"'settings.global-available-languages-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <vdr-language-code-selector\\r\\n                        formControlName=\\\"availableLanguages\\\"\\r\\n                        [languageCodes]=\\\"languageCodes\\\"\\r\\n                    ></vdr-language-code-selector>\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.global-out-of-stock-threshold' | translate\\\"\\r\\n                    for=\\\"outOfStockThreshold\\\"\\r\\n                    [tooltip]=\\\"'settings.global-out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <input\\r\\n                        id=\\\"outOfStockThreshold\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        formControlName=\\\"outOfStockThreshold\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    />\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.track-inventory-default' | translate\\\"\\r\\n                    for=\\\"enabled\\\"\\r\\n                    [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card\\r\\n            formGroupName=\\\"customFields\\\"\\r\\n            *ngIf=\\\"customFields.length\\\"\\r\\n            [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n        >\\r\\n            <vdr-tabbed-custom-fields\\r\\n                entityName=\\\"GlobalSettings\\\"\\r\\n                [customFields]=\\\"customFields\\\"\\r\\n                [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n            ></vdr-tabbed-custom-fields>\\r\\n        </vdr-card>\\r\\n\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"global-settings-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"::ng-deep ng-select .ng-value>span{margin:0!important}::ng-deep ng-select .ng-arrow-wrapper .ng-arrow{margin:0!important}::ng-deep ng-select .ng-select-container>span{margin:0!important}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst GET_PAYMENT_METHOD_DETAIL = gql `\r\n    query GetPaymentMethodDetail($id: ID!) {\r\n        paymentMethod(id: $id) {\r\n            ...PaymentMethod\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\nclass PaymentMethodDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('PaymentMethod');\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            name: ['', Validators.required],\n            description: '',\n            enabled: [true, Validators.required],\n            checker: {},\n            handler: {},\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.checkers = [];\n        this.handlers = [];\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdatePaymentMethod];\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.settings.getPaymentMethodOperations().single$.subscribe(data => {\n            this.checkers = data.paymentMethodEligibilityCheckers;\n            this.handlers = data.paymentMethodHandlers;\n            this.changeDetector.markForCheck();\n            this.selectedCheckerDefinition = data.paymentMethodEligibilityCheckers.find(c => c.code === this.entity?.checker?.code);\n            this.selectedHandlerDefinition = data.paymentMethodHandlers.find(c => c.code === this.entity?.handler?.code);\n        });\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    updateCode(currentCode, nameValue) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get('code');\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n    selectChecker(checker) {\n        this.selectedCheckerDefinition = checker;\n        this.selectedChecker = configurableDefinitionToInstance(checker);\n        const formControl = this.detailForm.get('checker');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedChecker);\n        }\n        this.detailForm.markAsDirty();\n    }\n    selectHandler(handler) {\n        this.selectedHandlerDefinition = handler;\n        this.selectedHandler = configurableDefinitionToInstance(handler);\n        const formControl = this.detailForm.get('handler');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedHandler);\n        }\n        this.detailForm.markAsDirty();\n    }\n    removeChecker() {\n        this.selectedChecker = null;\n        this.detailForm.markAsDirty();\n    }\n    removeHandler() {\n        this.selectedHandler = null;\n        this.detailForm.markAsDirty();\n    }\n    create() {\n        const selectedChecker = this.selectedChecker;\n        const selectedHandler = this.selectedHandler;\n        if (!selectedHandler) {\n            return;\n        }\n        const input = this.getUpdatedPaymentMethod({\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            name: '',\n            code: '',\n            description: '',\n            enabled: true,\n            checker: undefined,\n            handler: undefined,\n            translations: [],\n        }, this.detailForm, this.languageCode, selectedHandler, selectedChecker);\n        this.dataService.settings.createPaymentMethod(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'PaymentMethod',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createPaymentMethod.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'PaymentMethod',\n            });\n        });\n    }\n    save() {\n        const selectedChecker = this.selectedChecker;\n        const selectedHandler = this.selectedHandler;\n        if (!selectedHandler) {\n            return;\n        }\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([paymentMethod, languageCode]) => {\n            const input = this.getUpdatedPaymentMethod(paymentMethod, this.detailForm, languageCode, selectedHandler, selectedChecker);\n            return this.dataService.settings.updatePaymentMethod(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'PaymentMethod',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'PaymentMethod',\n            });\n        });\n    }\n    /**\n     * Given a PaymentMethod and the value of the detailForm, this method creates an updated copy of it which\n     * can then be persisted to the API.\n     */\n    getUpdatedPaymentMethod(paymentMethod, formGroup, languageCode, selectedHandler, selectedChecker) {\n        const input = createUpdatedTranslatable({\n            translatable: paymentMethod,\n            updatedFields: formGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: paymentMethod.name || '',\n                description: paymentMethod.description || '',\n            },\n        });\n        return {\n            ...input,\n            checker: selectedChecker\n                ? toConfigurableOperationInput(selectedChecker, formGroup.value.checker)\n                : null,\n            handler: toConfigurableOperationInput(selectedHandler, formGroup.value.handler),\n        };\n    }\n    setFormValues(paymentMethod, languageCode) {\n        const currentTranslation = findTranslation(paymentMethod, languageCode);\n        this.detailForm.patchValue({\n            name: currentTranslation?.name,\n            code: paymentMethod.code,\n            description: currentTranslation?.description,\n            enabled: paymentMethod.enabled,\n            checker: paymentMethod.checker || {},\n            handler: paymentMethod.handler || {},\n        });\n        if (!this.selectedChecker) {\n            this.selectedChecker = paymentMethod.checker && {\n                code: paymentMethod.checker.code,\n                args: paymentMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (!this.selectedHandler) {\n            this.selectedHandler = paymentMethod.handler && {\n                code: paymentMethod.handler.code,\n                args: paymentMethod.handler.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), paymentMethod, currentTranslation);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PaymentMethodDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: PaymentMethodDetailComponent, selector: \"vdr-payment-method-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"payment-method-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"description\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"PaymentMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"payment-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.payment-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeChecker()\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.payment-handler' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedHandler && selectedHandlerDefinition\\\"\\r\\n                    [operation]=\\\"selectedHandler\\\"\\r\\n                    [operationDefinition]=\\\"selectedHandlerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeHandler()\\\"\\r\\n                    formControlName=\\\"handler\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedHandler || !selectedHandlerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let handler of handlers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectHandler(handler)\\\"\\r\\n                            >\\r\\n                                {{ handler.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\", \"hideDescription\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PaymentMethodDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-payment-method-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"payment-method-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"description\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"PaymentMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"payment-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.payment-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeChecker()\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.payment-handler' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedHandler && selectedHandlerDefinition\\\"\\r\\n                    [operation]=\\\"selectedHandler\\\"\\r\\n                    [operationDefinition]=\\\"selectedHandlerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeHandler()\\\"\\r\\n                    formControlName=\\\"handler\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedHandler || !selectedHandlerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let handler of handlers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectHandler(handler)\\\"\\r\\n                            >\\r\\n                                {{ handler.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deletePaymentMethodsBulkAction = createBulkDeleteAction({\n    location: 'payment-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeletePaymentMethod) ||\n        userPermissions.includes(Permission.DeleteSettings),\n    getItemName: item => item.name,\n    shouldRetryItem: (response, item) => !!response.message,\n    bulkDelete: (dataService, ids, retrying) => dataService.settings.deletePaymentMethods(ids, retrying).pipe(map(res => res.deletePaymentMethods)),\n});\nconst ASSIGN_PAYMENT_METHODS_TO_CHANNEL = gql `\r\n    mutation AssignPaymentMethodsToChannel($input: AssignPaymentMethodsToChannelInput!) {\r\n        assignPaymentMethodsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst REMOVE_PAYMENT_METHODS_FROM_CHANNEL = gql `\r\n    mutation RemovePaymentMethodsFromChannel($input: RemovePaymentMethodsFromChannelInput!) {\r\n        removePaymentMethodsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst assignPaymentMethodsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'payment-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdatePaymentMethod) ||\n        userPermissions.includes(Permission.UpdateSettings),\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, paymentMethodIds, channelIds) => channelIds.map(channelId => dataService\n        .mutate(AssignPaymentMethodsToChannelDocument, {\n        input: {\n            channelId,\n            paymentMethodIds,\n        },\n    })\n        .pipe(map(res => res.assignPaymentMethodsToChannel))),\n});\nconst removePaymentMethodsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'payment-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeletePaymentMethod) ||\n        userPermissions.includes(Permission.DeleteSettings),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, paymentMethodIds, channelId) => dataService\n        .mutate(RemovePaymentMethodsFromChannelDocument, {\n        input: {\n            channelId,\n            paymentMethodIds,\n        },\n    })\n        .pipe(map(res => res.removePaymentMethodsFromChannel)),\n});\n\nconst GET_PAYMENT_METHOD_LIST = gql `\n    query GetPaymentMethodList($options: PaymentMethodListOptions!) {\n        paymentMethods(options: $options) {\n            items {\n                ...PaymentMethodListItem\n            }\n            totalItems\n        }\n    }\n    fragment PaymentMethodListItem on PaymentMethod {\n        id\n        createdAt\n        updatedAt\n        name\n        description\n        code\n        enabled\n    }\n`;\nclass PaymentMethodListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'payment-method-list';\n        this.customFields = this.getCustomFieldConfig('PaymentMethod');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: marker('common.code'),\n            filterField: 'code',\n        })\n            .addFilter({\n            name: 'enabled',\n            type: { kind: 'boolean' },\n            label: marker('common.enabled'),\n            filterField: 'enabled',\n        })\n            .addFilter({\n            name: 'description',\n            type: { kind: 'text' },\n            label: marker('common.description'),\n            filterField: 'description',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'id' })\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'code' })\n            .addSort({ name: 'description' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetPaymentMethodListDocument,\n            getItems: data => data.paymentMethods,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PaymentMethodListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: PaymentMethodListComponent, selector: \"vdr-payment-method-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreatePaymentMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-payment-method' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"payment-method-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"payment-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.id' | translate\\\"\\r\\n        id=\\\"id\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('id')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.name' | translate\\\"\\r\\n        id=\\\"name\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('name')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', paymentMethod.id]\\\"\\r\\n                ><span>{{ paymentMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"paymentMethod.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!paymentMethod.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PaymentMethodListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-payment-method-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreatePaymentMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-payment-method' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"payment-method-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"payment-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.id' | translate\\\"\\r\\n        id=\\\"id\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('id')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.name' | translate\\\"\\r\\n        id=\\\"name\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('name')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', paymentMethod.id]\\\"\\r\\n                ><span>{{ paymentMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"paymentMethod.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!paymentMethod.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nconst GET_PROFILE_DETAIL = gql `\r\n    query GetProfileDetail {\r\n        activeAdministrator {\r\n            ...ProfileDetail\r\n        }\r\n    }\r\n    fragment ProfileDetail on Administrator {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        firstName\r\n        lastName\r\n        emailAddress\r\n        user {\r\n            id\r\n            lastLogin\r\n            verified\r\n        }\r\n    }\r\n`;\nclass ProfileComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Administrator');\n        this.detailForm = this.formBuilder.group({\n            emailAddress: ['', Validators.required],\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            password: [''],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    save() {\n        this.entity$\n            .pipe(take(1), mergeMap(({ id }) => {\n            const formValue = this.detailForm.value;\n            const administrator = {\n                emailAddress: formValue.emailAddress,\n                firstName: formValue.firstName,\n                lastName: formValue.lastName,\n                password: formValue.password,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.administrator.updateActiveAdministrator(administrator);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Administrator',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Administrator',\n            });\n        });\n    }\n    setFormValues(administrator, languageCode) {\n        this.detailForm.patchValue({\n            emailAddress: administrator.emailAddress,\n            firstName: administrator.firstName,\n            lastName: administrator.lastName,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), administrator);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProfileComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ProfileComponent, selector: \"vdr-profile\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"profile\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'settings.email-address' | translate\\\" for=\\\"emailAddress\\\">\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-profile\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProfileComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-profile', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"profile\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'settings.email-address' | translate\\\" for=\\\"emailAddress\\\">\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-profile\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst GET_ROLE_DETAIL = gql `\r\n    query GetRoleDetail($id: ID!) {\r\n        role(id: $id) {\r\n            ...Role\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\nclass RoleDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            description: ['', Validators.required],\n            channelIds: [[]],\n            permissions: [[]],\n        });\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    updateCode(nameValue) {\n        const codeControl = this.detailForm.get(['code']);\n        if (codeControl && codeControl.pristine) {\n            codeControl.setValue(normalizeString(nameValue, '-'));\n        }\n    }\n    setPermission(change) {\n        const permissionsControl = this.detailForm.get('permissions');\n        if (permissionsControl) {\n            const currentPermissions = permissionsControl.value;\n            const newValue = (change.value === true\n                ? unique([...currentPermissions, change.permission])\n                : currentPermissions.filter(p => p !== change.permission));\n            permissionsControl.setValue(newValue);\n            permissionsControl.markAsDirty();\n        }\n    }\n    create() {\n        const { code, description, permissions, channelIds } = this.detailForm.value;\n        if (!code || !description) {\n            return;\n        }\n        const role = {\n            code,\n            description,\n            permissions: permissions ?? [],\n            channelIds,\n        };\n        this.dataService.administrator.createRole(role).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), { entity: 'Role' });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createRole.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Role',\n            });\n        });\n    }\n    save() {\n        this.entity$\n            .pipe(take(1), mergeMap(({ id }) => {\n            const formValue = this.detailForm.value;\n            const role = { id, ...formValue };\n            return this.dataService.administrator.updateRole(role);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Role' });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Role',\n            });\n        });\n    }\n    setFormValues(role, languageCode) {\n        this.detailForm.patchValue({\n            description: role.description,\n            code: role.code,\n            channelIds: role.channels.map(c => c.id),\n            permissions: role.permissions,\n        });\n        // This was required to get the channel selector component to\n        // correctly display its contents. A while spent debugging the root\n        // cause did not yield a solution, therefore this next line.\n        this.changeDetector.detectChanges();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: RoleDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: RoleDetailComponent, selector: \"vdr-role-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"role-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.description' | translate\\\" for=\\\"description\\\">\\r\\n                        <input\\r\\n                            id=\\\"description\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"'UpdateAdministrator' | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block class=\\\"mt-2\\\">\\r\\n        <vdr-card [title]=\\\"'settings.permissions' | translate\\\">\\r\\n            <vdr-form-field [label]=\\\"'settings.channel' | translate\\\">\\r\\n                <vdr-channel-assignment-control\\r\\n                    formControlName=\\\"channelIds\\\"\\r\\n                    [vdrDisabled]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                ></vdr-channel-assignment-control>\\r\\n            </vdr-form-field>\\r\\n            <vdr-permission-grid\\r\\n                class=\\\"mt-2\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [activePermissions]=\\\"detailForm.get('permissions')?.value\\\"\\r\\n                (permissionChange)=\\\"setPermission($event)\\\"\\r\\n                [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.ChannelAssignmentControlComponent, selector: \"vdr-channel-assignment-control\", inputs: [\"multiple\", \"includeDefaultChannel\", \"disableChannelIds\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: PermissionGridComponent, selector: \"vdr-permission-grid\", inputs: [\"permissionDefinitions\", \"activePermissions\", \"readonly\"], outputs: [\"permissionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: RoleDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-role-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"role-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.description' | translate\\\" for=\\\"description\\\">\\r\\n                        <input\\r\\n                            id=\\\"description\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"'UpdateAdministrator' | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block class=\\\"mt-2\\\">\\r\\n        <vdr-card [title]=\\\"'settings.permissions' | translate\\\">\\r\\n            <vdr-form-field [label]=\\\"'settings.channel' | translate\\\">\\r\\n                <vdr-channel-assignment-control\\r\\n                    formControlName=\\\"channelIds\\\"\\r\\n                    [vdrDisabled]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                ></vdr-channel-assignment-control>\\r\\n            </vdr-form-field>\\r\\n            <vdr-permission-grid\\r\\n                class=\\\"mt-2\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [activePermissions]=\\\"detailForm.get('permissions')?.value\\\"\\r\\n                (permissionChange)=\\\"setPermission($event)\\\"\\r\\n                [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteRolesBulkAction = createBulkDeleteAction({\n    location: 'role-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteAdministrator),\n    getItemName: item => item.description,\n    bulkDelete: (dataService, ids) => dataService.administrator.deleteRoles(ids).pipe(map(res => res.deleteRoles)),\n});\n\nconst GET_ROLE_LIST = gql `\n    query GetRoleList($options: RoleListOptions) {\n        roles(options: $options) {\n            items {\n                ...Role\n            }\n            totalItems\n        }\n    }\n    ${ROLE_FRAGMENT}\n`;\nclass RoleListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'role-list';\n        this.initialLimit = 3;\n        this.displayLimit = {};\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: marker('common.code'),\n            filterField: 'code',\n        })\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'code' })\n            .addSort({ name: 'description' })\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetRoleListDocument,\n            getItems: data => data.roles,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        code: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    toggleDisplayLimit(role) {\n        if (this.displayLimit[role.id] === role.permissions.length) {\n            this.displayLimit[role.id] = this.initialLimit;\n        }\n        else {\n            this.displayLimit[role.id] = role.permissions.length;\n        }\n    }\n    isDefaultRole(role) {\n        return role.code === SUPER_ADMIN_ROLE_CODE || role.code === CUSTOMER_ROLE_CODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: RoleListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: RoleListComponent, selector: \"vdr-role-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-role' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"role-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"role-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <a\\r\\n                *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\"\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['./', role.id]\\\"\\r\\n                ><span>{{ role.description }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n            <ng-template #defaultRole>\\r\\n                {{ role.description }}\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <span *ngIf=\\\"!isDefaultRole(role)\\\">{{ role.code }}</span>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel' | translate\\\" id=\\\"channel\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role)\\\">\\r\\n                <vdr-chip *ngFor=\\\"let channel of role.channels\\\">\\r\\n                    <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                    <div class=\\\"ml-1\\\">{{ channel.code | channelCodeToLabel | translate }}</div>\\r\\n                </vdr-chip>\\r\\n            </ng-container>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.permissions' | translate\\\" id=\\\"permissions\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\">\\r\\n                <div class=\\\"permissions-list\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let permission of role.permissions | slice : 0 : displayLimit[role.id] || 3\\\"\\r\\n                        >{{ permission }}</vdr-chip\\r\\n                    >\\r\\n                    <button\\r\\n                        class=\\\"button-small\\\"\\r\\n                        *ngIf=\\\"role.permissions.length > initialLimit\\\"\\r\\n                        (click)=\\\"toggleDisplayLimit(role)\\\"\\r\\n                    >\\r\\n                        <ng-container\\r\\n                            *ngIf=\\\"(displayLimit[role.id] || 0) < role.permissions.length; else collapse\\\"\\r\\n                        >\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ role.permissions.length - initialLimit }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #collapse>\\r\\n                            <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                        </ng-template>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <ng-template #defaultRole>\\r\\n                <span class=\\\"default-role-label\\\">{{ 'settings.default-role-label' | translate }}</span>\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".default-role-label{color:var(--color-grey-400)}.permissions-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.ChannelBadgeComponent, selector: \"vdr-channel-badge\", inputs: [\"channelCode\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: RoleListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-role-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-role' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"role-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"role-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <a\\r\\n                *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\"\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['./', role.id]\\\"\\r\\n                ><span>{{ role.description }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n            <ng-template #defaultRole>\\r\\n                {{ role.description }}\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <span *ngIf=\\\"!isDefaultRole(role)\\\">{{ role.code }}</span>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel' | translate\\\" id=\\\"channel\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role)\\\">\\r\\n                <vdr-chip *ngFor=\\\"let channel of role.channels\\\">\\r\\n                    <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                    <div class=\\\"ml-1\\\">{{ channel.code | channelCodeToLabel | translate }}</div>\\r\\n                </vdr-chip>\\r\\n            </ng-container>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.permissions' | translate\\\" id=\\\"permissions\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\">\\r\\n                <div class=\\\"permissions-list\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let permission of role.permissions | slice : 0 : displayLimit[role.id] || 3\\\"\\r\\n                        >{{ permission }}</vdr-chip\\r\\n                    >\\r\\n                    <button\\r\\n                        class=\\\"button-small\\\"\\r\\n                        *ngIf=\\\"role.permissions.length > initialLimit\\\"\\r\\n                        (click)=\\\"toggleDisplayLimit(role)\\\"\\r\\n                    >\\r\\n                        <ng-container\\r\\n                            *ngIf=\\\"(displayLimit[role.id] || 0) < role.permissions.length; else collapse\\\"\\r\\n                        >\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ role.permissions.length - initialLimit }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #collapse>\\r\\n                            <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                        </ng-template>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <ng-template #defaultRole>\\r\\n                <span class=\\\"default-role-label\\\">{{ 'settings.default-role-label' | translate }}</span>\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".default-role-label{color:var(--color-grey-400)}.permissions-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst GET_SELLER_DETAIL = gql `\r\n    query GetSellerDetail($id: ID!) {\r\n        seller(id: $id) {\r\n            ...SellerDetail\r\n        }\r\n    }\r\n    fragment SellerDetail on Seller {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\nclass SellerDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Seller');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.SuperAdmin, Permission.UpdateSeller, Permission.CreateSeller];\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    saveButtonEnabled() {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        if (!formValue.name) {\n            return;\n        }\n        const input = {\n            name: formValue.name,\n            customFields: formValue.customFields,\n        };\n        this.dataService.settings.createSeller(input).subscribe(data => {\n            switch (data.createSeller.__typename) {\n                case 'Seller':\n                    this.notificationService.success(marker('common.notify-create-success'), {\n                        entity: 'Seller',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.createSeller.id], { relativeTo: this.route });\n                    break;\n            }\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(seller => {\n            const input = {\n                id: seller.id,\n                name: formValue.name,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.settings.updateSeller(input);\n        }))\n            .subscribe(({ updateSeller }) => {\n            switch (updateSeller.__typename) {\n                case 'Seller':\n                    this.notificationService.success(marker('common.notify-update-success'), {\n                        entity: 'Seller',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    break;\n                // case 'LanguageNotAvailableError':\n                //     this.notificationService.error(updateSeller.message);\n            }\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            name: entity.name,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SellerDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: SellerDetailComponent, selector: \"vdr-seller-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateSeller']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"seller-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Seller\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"seller-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SellerDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-seller-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateSeller']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"seller-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Seller\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"seller-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteSellersBulkAction = createBulkDeleteAction({\n    location: 'seller-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSeller),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.settings.deleteSellers(ids).pipe(map(res => res.deleteSellers)),\n});\n\nconst GET_SELLER_LIST = gql `\n    query GetSellerList($options: SellerListOptions) {\n        sellers(options: $options) {\n            items {\n                ...SellerListItem\n            }\n            totalItems\n        }\n    }\n    fragment SellerListItem on Seller {\n        id\n        createdAt\n        updatedAt\n        name\n    }\n`;\nclass SellerListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'seller-list';\n        this.customFields = this.getCustomFieldConfig('Seller');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetSellerListDocument,\n            getItems: data => data.sellers,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SellerListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: SellerListComponent, selector: \"vdr-seller-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-list\\\" />\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateSeller']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-seller' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"seller-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"seller-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">{{ seller.id }}</ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', seller.id]\\\"\\r\\n                ><span>{{ seller.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SellerListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-seller-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-list\\\" />\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateSeller']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-seller' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"seller-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"seller-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">{{ seller.id }}</ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', seller.id]\\\"\\r\\n                ><span>{{ seller.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nclass ShippingEligibilityTestResultComponent {\n    constructor() {\n        this.okToRun = false;\n        this.testDataUpdated = false;\n        this.runTest = new EventEmitter();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ShippingEligibilityTestResultComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ShippingEligibilityTestResultComponent, selector: \"vdr-shipping-eligibility-test-result\", inputs: { testResult: \"testResult\", okToRun: \"okToRun\", testDataUpdated: \"testDataUpdated\", currencyCode: \"currencyCode\" }, outputs: { runTest: \"runTest\" }, ngImport: i0, template: \"<vdr-card class=\\\"test-result\\\" [title]=\\\"'settings.test-result' | translate\\\">\\r\\n    <div class=\\\"card-span\\\" *ngFor=\\\"let quote of testResult\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.shipping-method' | translate\\\">\\r\\n                {{ quote.name }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data [label]=\\\"'common.price' | translate\\\">\\r\\n                    {{ quote.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n                    {{ quote.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree *ngIf=\\\"quote.metadata\\\" [value]=\\\"quote.metadata\\\"></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-span\\\" *ngIf=\\\"testResult?.length === 0\\\">\\r\\n        <clr-icon shape=\\\"ban\\\" class=\\\"is-solid error\\\"></clr-icon>\\r\\n        {{ 'settings.no-eligible-shipping-methods' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-methods' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}clr-icon.error{color:var(--color-error-500)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ShippingEligibilityTestResultComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-shipping-eligibility-test-result', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-card class=\\\"test-result\\\" [title]=\\\"'settings.test-result' | translate\\\">\\r\\n    <div class=\\\"card-span\\\" *ngFor=\\\"let quote of testResult\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.shipping-method' | translate\\\">\\r\\n                {{ quote.name }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data [label]=\\\"'common.price' | translate\\\">\\r\\n                    {{ quote.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n                    {{ quote.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree *ngIf=\\\"quote.metadata\\\" [value]=\\\"quote.metadata\\\"></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-span\\\" *ngIf=\\\"testResult?.length === 0\\\">\\r\\n        <clr-icon shape=\\\"ban\\\" class=\\\"is-solid error\\\"></clr-icon>\\r\\n        {{ 'settings.no-eligible-shipping-methods' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-methods' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}clr-icon.error{color:var(--color-error-500)}\\n\"] }]\n        }], propDecorators: { testResult: [{\n                type: Input\n            }], okToRun: [{\n                type: Input\n            }], testDataUpdated: [{\n                type: Input\n            }], currencyCode: [{\n                type: Input\n            }], runTest: [{\n                type: Output\n            }] } });\n\nclass TestOrderBuilderComponent {\n    get subTotal() {\n        return this.lines.reduce((sum, l) => sum + l.unitPriceWithTax * l.quantity, 0);\n    }\n    constructor(dataService, localStorageService) {\n        this.dataService = dataService;\n        this.localStorageService = localStorageService;\n        this.orderLinesChange = new EventEmitter();\n        this.lines = [];\n    }\n    ngOnInit() {\n        this.lines = this.loadFromLocalStorage();\n        if (this.lines) {\n            this.orderLinesChange.emit(this.lines);\n        }\n        this.dataService.settings.getActiveChannel('cache-first').single$.subscribe(result => {\n            this.currencyCode = result.activeChannel.defaultCurrencyCode;\n        });\n    }\n    selectResult(result) {\n        if (result) {\n            this.addToLines(result);\n        }\n    }\n    addToLines(result) {\n        if (!this.lines.find(l => l.id === result.productVariantId)) {\n            this.lines.push({\n                id: result.productVariantId,\n                name: result.productVariantName,\n                preview: result.productAsset?.preview ?? '',\n                quantity: 1,\n                sku: result.sku,\n                unitPriceWithTax: (result.priceWithTax.__typename === 'SinglePrice' && result.priceWithTax.value) || 0,\n            });\n            this.persistToLocalStorage();\n            this.orderLinesChange.emit(this.lines);\n        }\n    }\n    updateQuantity() {\n        this.persistToLocalStorage();\n        this.orderLinesChange.emit(this.lines);\n    }\n    removeLine(line) {\n        this.lines = this.lines.filter(l => l.id !== line.id);\n        this.persistToLocalStorage();\n        this.orderLinesChange.emit(this.lines);\n    }\n    persistToLocalStorage() {\n        this.localStorageService.setForCurrentLocation('shippingTestOrder', this.lines);\n    }\n    loadFromLocalStorage() {\n        return this.localStorageService.getForCurrentLocation('shippingTestOrder') || [];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestOrderBuilderComponent, deps: [{ token: i1.DataService }, { token: i1.LocalStorageService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: TestOrderBuilderComponent, selector: \"vdr-test-order-builder\", outputs: { orderLinesChange: \"orderLinesChange\" }, ngImport: i0, template: \"<table class=\\\"order-table table\\\" *ngIf=\\\"lines.length; else emptyPlaceholder\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'order.product-name' | translate }}</th>\\r\\n            <th>{{ 'order.product-sku' | translate }}</th>\\r\\n            <th>{{ 'order.unit-price' | translate }}</th>\\r\\n            <th>{{ 'order.quantity' | translate }}</th>\\r\\n            <th>{{ 'order.total' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let line of lines\\\" class=\\\"order-line\\\">\\r\\n        <td class=\\\"align-middle thumb\\\">\\r\\n            <img [src]=\\\"line.preview + '?preset=tiny'\\\" />\\r\\n        </td>\\r\\n        <td class=\\\"align-middle name\\\">{{ line.name }}</td>\\r\\n        <td class=\\\"align-middle sku\\\">{{ line.sku }}</td>\\r\\n        <td class=\\\"align-middle unit-price\\\">\\r\\n            {{ line.unitPriceWithTax | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n        <td class=\\\"align-middle quantity\\\">\\r\\n            <input [(ngModel)]=\\\"line.quantity\\\" (change)=\\\"updateQuantity()\\\" type=\\\"number\\\" max=\\\"9999\\\" min=\\\"1\\\" />\\r\\n            <button class=\\\"icon-button\\\" (click)=\\\"removeLine(line)\\\">\\r\\n                <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n        <td class=\\\"align-middle total\\\">\\r\\n            {{ line.unitPriceWithTax * line.quantity | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr class=\\\"sub-total\\\">\\r\\n        <td class=\\\"left\\\">{{ 'order.sub-total' | translate }}</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td>{{ subTotal | localeCurrency : currencyCode }}</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<ng-template #emptyPlaceholder>\\r\\n    <div class=\\\"card-block empty-placeholder card-span\\\">\\r\\n        <div class=\\\"empty-text\\\">{{ 'settings.add-products-to-test-order' | translate }}</div>\\r\\n        <clr-icon shape=\\\"arrow\\\" dir=\\\"down\\\" size=\\\"96\\\"></clr-icon>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<div class=\\\"card-block\\\">\\r\\n    <vdr-product-variant-selector (productSelected)=\\\"selectResult($event)\\\"> </vdr-product-variant-selector>\\r\\n</div>\\r\\n\", styles: [\".empty-placeholder{color:var(--color-grey-400);text-align:center}.empty-text{font-size:22px}.thumb{max-width:50px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2$1.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i5$1.Dir, selector: \"[dir]\", inputs: [\"dir\"], outputs: [\"dirChange\"], exportAs: [\"dir\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.ProductVariantSelectorComponent, selector: \"vdr-product-variant-selector\", outputs: [\"productSelected\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestOrderBuilderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-test-order-builder', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"order-table table\\\" *ngIf=\\\"lines.length; else emptyPlaceholder\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'order.product-name' | translate }}</th>\\r\\n            <th>{{ 'order.product-sku' | translate }}</th>\\r\\n            <th>{{ 'order.unit-price' | translate }}</th>\\r\\n            <th>{{ 'order.quantity' | translate }}</th>\\r\\n            <th>{{ 'order.total' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let line of lines\\\" class=\\\"order-line\\\">\\r\\n        <td class=\\\"align-middle thumb\\\">\\r\\n            <img [src]=\\\"line.preview + '?preset=tiny'\\\" />\\r\\n        </td>\\r\\n        <td class=\\\"align-middle name\\\">{{ line.name }}</td>\\r\\n        <td class=\\\"align-middle sku\\\">{{ line.sku }}</td>\\r\\n        <td class=\\\"align-middle unit-price\\\">\\r\\n            {{ line.unitPriceWithTax | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n        <td class=\\\"align-middle quantity\\\">\\r\\n            <input [(ngModel)]=\\\"line.quantity\\\" (change)=\\\"updateQuantity()\\\" type=\\\"number\\\" max=\\\"9999\\\" min=\\\"1\\\" />\\r\\n            <button class=\\\"icon-button\\\" (click)=\\\"removeLine(line)\\\">\\r\\n                <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n        <td class=\\\"align-middle total\\\">\\r\\n            {{ line.unitPriceWithTax * line.quantity | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr class=\\\"sub-total\\\">\\r\\n        <td class=\\\"left\\\">{{ 'order.sub-total' | translate }}</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td>{{ subTotal | localeCurrency : currencyCode }}</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<ng-template #emptyPlaceholder>\\r\\n    <div class=\\\"card-block empty-placeholder card-span\\\">\\r\\n        <div class=\\\"empty-text\\\">{{ 'settings.add-products-to-test-order' | translate }}</div>\\r\\n        <clr-icon shape=\\\"arrow\\\" dir=\\\"down\\\" size=\\\"96\\\"></clr-icon>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<div class=\\\"card-block\\\">\\r\\n    <vdr-product-variant-selector (productSelected)=\\\"selectResult($event)\\\"> </vdr-product-variant-selector>\\r\\n</div>\\r\\n\", styles: [\".empty-placeholder{color:var(--color-grey-400);text-align:center}.empty-text{font-size:22px}.thumb{max-width:50px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.LocalStorageService }], propDecorators: { orderLinesChange: [{\n                type: Output\n            }] } });\n\nclass TestAddressFormComponent {\n    constructor(formBuilder, dataService, localStorageService) {\n        this.formBuilder = formBuilder;\n        this.dataService = dataService;\n        this.localStorageService = localStorageService;\n        this.addressChange = new EventEmitter();\n    }\n    ngOnInit() {\n        this.availableCountries$ = this.dataService.settings\n            .getAvailableCountries()\n            .mapSingle(result => result.countries.items);\n        const storedValue = this.localStorageService.getForCurrentLocation('shippingTestAddress');\n        const initialValue = storedValue\n            ? storedValue\n            : {\n                city: '',\n                countryCode: '',\n                postalCode: '',\n                province: '',\n            };\n        this.addressChange.emit(initialValue);\n        this.form = this.formBuilder.group(initialValue);\n        this.subscription = this.form.valueChanges.subscribe(value => {\n            this.localStorageService.setForCurrentLocation('shippingTestAddress', value);\n            this.addressChange.emit(value);\n        });\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestAddressFormComponent, deps: [{ token: i2$1.UntypedFormBuilder }, { token: i1.DataService }, { token: i1.LocalStorageService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: TestAddressFormComponent, selector: \"vdr-test-address-form\", outputs: { addressChange: \"addressChange\" }, ngImport: i0, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-address' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <form [formGroup]=\\\"form\\\" class=\\\"form-grid\\\">\\r\\n            <vdr-form-field [label]=\\\"'customer.city' | translate\\\">\\r\\n                <input formControlName=\\\"city\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.province' | translate\\\">\\r\\n                <input formControlName=\\\"province\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.postal-code' | translate\\\">\\r\\n                <input formControlName=\\\"postalCode\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.country' | translate\\\">\\r\\n                <select name=\\\"countryCode\\\" formControlName=\\\"countryCode\\\" >\\r\\n                    <option *ngFor=\\\"let country of availableCountries$ | async\\\" [value]=\\\"country.code\\\">\\r\\n                        {{ country.name }}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </vdr-form-field>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}clr-input-container{margin-bottom:12px}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestAddressFormComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-test-address-form', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-address' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <form [formGroup]=\\\"form\\\" class=\\\"form-grid\\\">\\r\\n            <vdr-form-field [label]=\\\"'customer.city' | translate\\\">\\r\\n                <input formControlName=\\\"city\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.province' | translate\\\">\\r\\n                <input formControlName=\\\"province\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.postal-code' | translate\\\">\\r\\n                <input formControlName=\\\"postalCode\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.country' | translate\\\">\\r\\n                <select name=\\\"countryCode\\\" formControlName=\\\"countryCode\\\" >\\r\\n                    <option *ngFor=\\\"let country of availableCountries$ | async\\\" [value]=\\\"country.code\\\">\\r\\n                        {{ country.name }}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </vdr-form-field>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}clr-input-container{margin-bottom:12px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i2$1.UntypedFormBuilder }, { type: i1.DataService }, { type: i1.LocalStorageService }], propDecorators: { addressChange: [{\n                type: Output\n            }] } });\n\nclass ShippingMethodTestResultComponent {\n    constructor() {\n        this.okToRun = false;\n        this.testDataUpdated = false;\n        this.runTest = new EventEmitter();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ShippingMethodTestResultComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ShippingMethodTestResultComponent, selector: \"vdr-shipping-method-test-result\", inputs: { testResult: \"testResult\", okToRun: \"okToRun\", testDataUpdated: \"testDataUpdated\", currencyCode: \"currencyCode\" }, outputs: { runTest: \"runTest\" }, ngImport: i0, template: \"<div\\r\\n    class=\\\"test-result card\\\"\\r\\n    [ngClass]=\\\"{\\r\\n        success: testResult?.eligible === true,\\r\\n        error: testResult?.eligible === false,\\r\\n        unknown: !testResult\\r\\n    }\\\"\\r\\n>\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-result' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.eligible' | translate\\\">\\r\\n                <div class=\\\"eligible-icon\\\">\\r\\n                    <clr-icon\\r\\n                        shape=\\\"success-standard\\\"\\r\\n                        class=\\\"is-solid success\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon\\r\\n                        shape=\\\"ban\\\"\\r\\n                        class=\\\"is-solid error\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible === false\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon shape=\\\"unknown-status\\\" *ngIf=\\\"!testResult\\\"></clr-icon>\\r\\n                </div>\\r\\n                {{ testResult?.eligible }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.price != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price-with-tax' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.priceWithTax != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree\\r\\n                *ngIf=\\\"testResult?.quote?.metadata\\\"\\r\\n                [value]=\\\"testResult?.quote?.metadata\\\"\\r\\n            ></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-method' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.test-result.success .card-block{background-color:var(--color-success-100)}.test-result.error .card-block{background-color:var(--color-error-100)}.test-result.unknown .card-block{background-color:var(--color-component-bg-100)}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.eligible-icon{display:inline-block}.eligible-icon .success{color:var(--color-success-500)}.eligible-icon .error{color:var(--color-error-500)}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ShippingMethodTestResultComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-shipping-method-test-result', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\r\\n    class=\\\"test-result card\\\"\\r\\n    [ngClass]=\\\"{\\r\\n        success: testResult?.eligible === true,\\r\\n        error: testResult?.eligible === false,\\r\\n        unknown: !testResult\\r\\n    }\\\"\\r\\n>\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-result' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.eligible' | translate\\\">\\r\\n                <div class=\\\"eligible-icon\\\">\\r\\n                    <clr-icon\\r\\n                        shape=\\\"success-standard\\\"\\r\\n                        class=\\\"is-solid success\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon\\r\\n                        shape=\\\"ban\\\"\\r\\n                        class=\\\"is-solid error\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible === false\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon shape=\\\"unknown-status\\\" *ngIf=\\\"!testResult\\\"></clr-icon>\\r\\n                </div>\\r\\n                {{ testResult?.eligible }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.price != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price-with-tax' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.priceWithTax != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree\\r\\n                *ngIf=\\\"testResult?.quote?.metadata\\\"\\r\\n                [value]=\\\"testResult?.quote?.metadata\\\"\\r\\n            ></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-method' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.test-result.success .card-block{background-color:var(--color-success-100)}.test-result.error .card-block{background-color:var(--color-error-100)}.test-result.unknown .card-block{background-color:var(--color-component-bg-100)}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.eligible-icon{display:inline-block}.eligible-icon .success{color:var(--color-success-500)}.eligible-icon .error{color:var(--color-error-500)}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}\\n\"] }]\n        }], propDecorators: { testResult: [{\n                type: Input\n            }], okToRun: [{\n                type: Input\n            }], testDataUpdated: [{\n                type: Input\n            }], currencyCode: [{\n                type: Input\n            }], runTest: [{\n                type: Output\n            }] } });\n\nconst GET_SHIPPING_METHOD_DETAIL = gql `\r\n    query GetShippingMethodDetail($id: ID!) {\r\n        shippingMethod(id: $id) {\r\n            ...ShippingMethod\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\nclass ShippingMethodDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('ShippingMethod');\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            name: ['', Validators.required],\n            description: '',\n            fulfillmentHandler: ['', Validators.required],\n            checker: {},\n            calculator: {},\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.checkers = [];\n        this.calculators = [];\n        this.fulfillmentHandlers = [];\n        this.testDataUpdated = false;\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateShippingMethod];\n        this.fetchTestResult$ = new Subject();\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.shippingMethod.getShippingMethodOperations().single$.subscribe(data => {\n            this.checkers = data.shippingEligibilityCheckers;\n            this.calculators = data.shippingCalculators;\n            this.fulfillmentHandlers = data.fulfillmentHandlers;\n            this.changeDetector.markForCheck();\n            this.selectedCheckerDefinition = data.shippingEligibilityCheckers.find(c => c.code === this.entity?.checker?.code);\n            this.selectedCalculatorDefinition = data.shippingCalculators.find(c => c.code === this.entity?.calculator?.code);\n        });\n        this.activeChannel$ = this.dataService.settings\n            .getActiveChannel()\n            .mapStream(data => data.activeChannel);\n        this.testResult$ = this.fetchTestResult$.pipe(switchMap$1(([address, lines]) => {\n            const { checker, calculator } = this.detailForm.value;\n            if (!this.selectedChecker || !this.selectedCalculator || !checker || !calculator) {\n                return of(undefined);\n            }\n            const input = {\n                shippingAddress: { ...address, streetLine1: 'test' },\n                lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\n                checker: toConfigurableOperationInput(this.selectedChecker, checker),\n                calculator: toConfigurableOperationInput(this.selectedCalculator, calculator),\n            };\n            return this.dataService.shippingMethod\n                .testShippingMethod(input)\n                .mapSingle(result => result.testShippingMethod);\n        }));\n        /* eslint-disable @typescript-eslint/no-non-null-assertion */\n        merge(this.detailForm.get(['checker']).valueChanges, this.detailForm.get(['calculator']).valueChanges)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => (this.testDataUpdated = true));\n        /* eslint-enable @typescript-eslint/no-non-null-assertion */\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    updateCode(currentCode, nameValue) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n    selectChecker(checker) {\n        this.selectedCheckerDefinition = checker;\n        this.selectedChecker = configurableDefinitionToInstance(checker);\n        const formControl = this.detailForm.get('checker');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedChecker);\n        }\n        this.detailForm.markAsDirty();\n    }\n    selectCalculator(calculator) {\n        this.selectedCalculatorDefinition = calculator;\n        this.selectedCalculator = configurableDefinitionToInstance(calculator);\n        const formControl = this.detailForm.get('calculator');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedCalculator);\n        }\n        this.detailForm.markAsDirty();\n    }\n    create() {\n        const selectedChecker = this.selectedChecker;\n        const selectedCalculator = this.selectedCalculator;\n        const { checker, calculator } = this.detailForm.value;\n        if (!selectedChecker || !selectedCalculator || !checker || !calculator) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input = {\n            ...this.getUpdatedShippingMethod({\n                createdAt: '',\n                updatedAt: '',\n                id: '',\n                code: '',\n                name: '',\n                description: '',\n                fulfillmentHandlerCode: '',\n                checker: undefined,\n                calculator: undefined,\n                translations: [],\n            }, this.detailForm, this.languageCode),\n            checker: toConfigurableOperationInput(selectedChecker, checker),\n            calculator: toConfigurableOperationInput(selectedCalculator, calculator),\n        };\n        this.dataService.shippingMethod.createShippingMethod(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'ShippingMethod',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createShippingMethod.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'ShippingMethod',\n            });\n        });\n    }\n    save() {\n        const selectedChecker = this.selectedChecker;\n        const selectedCalculator = this.selectedCalculator;\n        const { checker, calculator } = this.detailForm.value;\n        if (!selectedChecker || !selectedCalculator || !checker || !calculator) {\n            return;\n        }\n        combineLatest([this.entity$, this.languageCode$])\n            .pipe(take(1), mergeMap(([shippingMethod, languageCode]) => {\n            const formValue = this.detailForm.value;\n            const input = {\n                ...this.getUpdatedShippingMethod(shippingMethod, this.detailForm, languageCode),\n                checker: toConfigurableOperationInput(selectedChecker, checker),\n                calculator: toConfigurableOperationInput(selectedCalculator, calculator),\n            };\n            return this.dataService.shippingMethod.updateShippingMethod(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'ShippingMethod',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            // eslint-disable-next-line no-console\n            console.error(err);\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'ShippingMethod',\n            });\n        });\n    }\n    setTestOrderLines(event) {\n        this.testOrderLines = event;\n        this.testDataUpdated = true;\n    }\n    setTestAddress(event) {\n        this.testAddress = event;\n        this.testDataUpdated = true;\n    }\n    allTestDataPresent() {\n        return !!(this.testAddress &&\n            this.testOrderLines &&\n            this.testOrderLines.length &&\n            this.selectedChecker &&\n            this.selectedCalculator);\n    }\n    runTest() {\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\n        this.testDataUpdated = false;\n    }\n    /**\n     * Given a ShippingMethod and the value of the detailForm, this method creates an updated copy which\n     * can then be persisted to the API.\n     */\n    getUpdatedShippingMethod(shippingMethod, formGroup, languageCode) {\n        const formValue = formGroup.value;\n        const input = createUpdatedTranslatable({\n            translatable: shippingMethod,\n            updatedFields: formValue,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: shippingMethod.name || '',\n                description: shippingMethod.description || '',\n            },\n        });\n        return { ...input, fulfillmentHandler: formValue.fulfillmentHandler };\n    }\n    setFormValues(shippingMethod, languageCode) {\n        const currentTranslation = findTranslation(shippingMethod, languageCode);\n        this.detailForm.patchValue({\n            name: currentTranslation?.name ?? '',\n            description: currentTranslation?.description ?? '',\n            code: shippingMethod.code,\n            fulfillmentHandler: shippingMethod.fulfillmentHandlerCode,\n            checker: shippingMethod.checker || {},\n            calculator: shippingMethod.calculator || {},\n        });\n        if (!this.selectedChecker) {\n            this.selectedChecker = shippingMethod.checker && {\n                code: shippingMethod.checker.code,\n                args: shippingMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (!this.selectedCalculator) {\n            this.selectedCalculator = shippingMethod.calculator && {\n                code: shippingMethod.calculator?.code,\n                args: shippingMethod.calculator?.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), shippingMethod, currentTranslation);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ShippingMethodDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ShippingMethodDetailComponent, selector: \"vdr-shipping-method-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                    \\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"shipping-method-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.fulfillment-handler' | translate\\\"\\r\\n                        for=\\\"fulfillmentHandler\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"fulfillmentHandler\\\"\\r\\n                            formControlName=\\\"fulfillmentHandler\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option *ngFor=\\\"let handler of fulfillmentHandlers\\\" [value]=\\\"handler.code\\\">\\r\\n                                {{ handler.code }}: {{ handler.description }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ShippingMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"shipping-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.shipping-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedChecker = null\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.shipping-calculator' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedCalculator && selectedCalculatorDefinition\\\"\\r\\n                    [operation]=\\\"selectedCalculator\\\"\\r\\n                    [operationDefinition]=\\\"selectedCalculatorDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedCalculator = null\\\"\\r\\n                    formControlName=\\\"calculator\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedCalculator || !selectedCalculatorDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let calculator of calculators\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectCalculator(calculator)\\\"\\r\\n                            >\\r\\n                                {{ calculator.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.test-shipping-method' | translate\\\">\\r\\n                <vdr-test-order-builder\\r\\n                    class=\\\"card-span\\\"\\r\\n                    (orderLinesChange)=\\\"setTestOrderLines($event)\\\"\\r\\n                ></vdr-test-order-builder>\\r\\n                <vdr-test-address-form\\r\\n                    (addressChange)=\\\"setTestAddress($event)\\\"\\r\\n                    class=\\\"mt-2\\\"\\r\\n                ></vdr-test-address-form>\\r\\n                <vdr-shipping-method-test-result\\r\\n                    class=\\\"mt-2\\\"\\r\\n                    [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                    [okToRun]=\\\"allTestDataPresent() && testDataUpdated && detailForm.valid\\\"\\r\\n                    [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                    [testResult]=\\\"testResult$ | async\\\"\\r\\n                    (runTest)=\\\"runTest()\\\"\\r\\n                ></vdr-shipping-method-test-result>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\", \"hideDescription\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: TestOrderBuilderComponent, selector: \"vdr-test-order-builder\", outputs: [\"orderLinesChange\"] }, { kind: \"component\", type: TestAddressFormComponent, selector: \"vdr-test-address-form\", outputs: [\"addressChange\"] }, { kind: \"component\", type: ShippingMethodTestResultComponent, selector: \"vdr-shipping-method-test-result\", inputs: [\"testResult\", \"okToRun\", \"testDataUpdated\", \"currencyCode\"], outputs: [\"runTest\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ShippingMethodDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-shipping-method-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                    \\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"shipping-method-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.fulfillment-handler' | translate\\\"\\r\\n                        for=\\\"fulfillmentHandler\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"fulfillmentHandler\\\"\\r\\n                            formControlName=\\\"fulfillmentHandler\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option *ngFor=\\\"let handler of fulfillmentHandlers\\\" [value]=\\\"handler.code\\\">\\r\\n                                {{ handler.code }}: {{ handler.description }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ShippingMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"shipping-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.shipping-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedChecker = null\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.shipping-calculator' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedCalculator && selectedCalculatorDefinition\\\"\\r\\n                    [operation]=\\\"selectedCalculator\\\"\\r\\n                    [operationDefinition]=\\\"selectedCalculatorDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedCalculator = null\\\"\\r\\n                    formControlName=\\\"calculator\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedCalculator || !selectedCalculatorDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let calculator of calculators\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectCalculator(calculator)\\\"\\r\\n                            >\\r\\n                                {{ calculator.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.test-shipping-method' | translate\\\">\\r\\n                <vdr-test-order-builder\\r\\n                    class=\\\"card-span\\\"\\r\\n                    (orderLinesChange)=\\\"setTestOrderLines($event)\\\"\\r\\n                ></vdr-test-order-builder>\\r\\n                <vdr-test-address-form\\r\\n                    (addressChange)=\\\"setTestAddress($event)\\\"\\r\\n                    class=\\\"mt-2\\\"\\r\\n                ></vdr-test-address-form>\\r\\n                <vdr-shipping-method-test-result\\r\\n                    class=\\\"mt-2\\\"\\r\\n                    [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                    [okToRun]=\\\"allTestDataPresent() && testDataUpdated && detailForm.valid\\\"\\r\\n                    [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                    [testResult]=\\\"testResult$ | async\\\"\\r\\n                    (runTest)=\\\"runTest()\\\"\\r\\n                ></vdr-shipping-method-test-result>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteShippingMethodsBulkAction = createBulkDeleteAction({\n    location: 'shipping-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteShippingMethod),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.shippingMethod.deleteShippingMethods(ids).pipe(map(res => res.deleteShippingMethods)),\n});\nconst ASSIGN_SHIPPING_METHODS_TO_CHANNEL = gql `\r\n    mutation AssignShippingMethodsToChannel($input: AssignShippingMethodsToChannelInput!) {\r\n        assignShippingMethodsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst REMOVE_SHIPPING_METHODS_FROM_CHANNEL = gql `\r\n    mutation RemoveShippingMethodsFromChannel($input: RemoveShippingMethodsFromChannelInput!) {\r\n        removeShippingMethodsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst assignShippingMethodsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'shipping-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateShippingMethod) ||\n        userPermissions.includes(Permission.UpdateSettings),\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, shippingMethodIds, channelIds) => channelIds.map(channelId => dataService\n        .mutate(AssignShippingMethodsToChannelDocument, {\n        input: {\n            channelId,\n            shippingMethodIds,\n        },\n    })\n        .pipe(map(res => res.assignShippingMethodsToChannel))),\n});\nconst removeShippingMethodsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'shipping-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteShippingMethod) ||\n        userPermissions.includes(Permission.DeleteSettings),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, shippingMethodIds, channelId) => dataService\n        .mutate(RemoveShippingMethodsFromChannelDocument, {\n        input: {\n            channelId,\n            shippingMethodIds,\n        },\n    })\n        .pipe(map(res => res.removeShippingMethodsFromChannel)),\n});\n\nconst GET_SHIPPING_METHOD_LIST = gql `\n    query GetShippingMethodList($options: ShippingMethodListOptions) {\n        shippingMethods(options: $options) {\n            items {\n                ...ShippingMethodListItem\n            }\n            totalItems\n        }\n    }\n    fragment ShippingMethodListItem on ShippingMethod {\n        id\n        createdAt\n        updatedAt\n        code\n        name\n        description\n        fulfillmentHandlerCode\n    }\n`;\nclass ShippingMethodListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'shipping-method-list';\n        this.customFields = this.getCustomFieldConfig('ShippingMethod');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: marker('common.code'),\n            filterField: 'code',\n        })\n            .addFilter({\n            name: 'description',\n            type: { kind: 'text' },\n            label: marker('common.description'),\n            filterField: 'description',\n        })\n            .addFilter({\n            name: 'fulfillmentHandler',\n            type: { kind: 'text' },\n            label: marker('settings.fulfillment-handler'),\n            filterField: 'fulfillmentHandlerCode',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'code' })\n            .addSort({ name: 'description' })\n            .addSort({ name: 'fulfillmentHandlerCode' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetShippingMethodListDocument,\n            getItems: data => data.shippingMethods,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ShippingMethodListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ShippingMethodListComponent, selector: \"vdr-shipping-method-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateShippingMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-shipping-method' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"shipping-method-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"shipping-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', shippingMethod.id]\\\"\\r\\n                ><span>{{ shippingMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.description }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.fulfillment-handler' | translate\\\" id=\\\"fulfillment-handler\\\" [sort]=\\\"sorts.get('fulfillmentHandlerCode')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.fulfillmentHandlerCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ShippingMethodListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-shipping-method-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateShippingMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-shipping-method' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"shipping-method-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"shipping-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', shippingMethod.id]\\\"\\r\\n                ><span>{{ shippingMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.description }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.fulfillment-handler' | translate\\\" id=\\\"fulfillment-handler\\\" [sort]=\\\"sorts.get('fulfillmentHandlerCode')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.fulfillmentHandlerCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nconst STOCK_LOCATION_DETAIL_FRAGMENT = gql `\r\n    fragment StockLocationDetail on StockLocation {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n    }\r\n`;\nconst GET_STOCK_LOCATION_DETAIL = gql `\r\n    query GetStockLocationDetail($id: ID!) {\r\n        stockLocation(id: $id) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\nconst CREATE_STOCK_LOCATION = gql `\r\n    mutation CreateStockLocation($input: CreateStockLocationInput!) {\r\n        createStockLocation(input: $input) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\nconst UPDATE_STOCK_LOCATION = gql `\r\n    mutation UpdateStockLocation($input: UpdateStockLocationInput!) {\r\n        updateStockLocation(input: $input) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\nclass StockLocationDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('StockLocation');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            description: [''],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const { name, description, customFields } = this.detailForm.value;\n        if (!name) {\n            return;\n        }\n        const input = {\n            name,\n            description,\n            customFields,\n        };\n        this.dataService.mutate(CreateStockLocationDocument, { input }).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'StockLocation',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createStockLocation.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'StockLocation',\n            });\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(taxRate => {\n            const input = {\n                id: taxRate.id,\n                name: formValue.name,\n                description: formValue.description,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.mutate(UpdateStockLocationDocument, { input });\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'StockLocation',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'StockLocation',\n            });\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity) {\n        this.detailForm.patchValue({\n            name: entity.name,\n            description: entity.description,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: StockLocationDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: StockLocationDetailComponent, selector: \"vdr-stock-location-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateStockLocation'\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"stock-location-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"StockLocation\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"stock-location-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: StockLocationDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-stock-location-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateStockLocation'\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"stock-location-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"StockLocation\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"stock-location-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst DELETE_STOCK_LOCATIONS = gql `\r\n    mutation DeleteStockLocations($input: [DeleteStockLocationInput!]!) {\r\n        deleteStockLocations(input: $input) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\nconst ASSIGN_STOCK_LOCATIONS_TO_CHANNEL = gql `\r\n    mutation AssignStockLocationsToChannel($input: AssignStockLocationsToChannelInput!) {\r\n        assignStockLocationsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst REMOVE_STOCK_LOCATIONS_FROM_CHANNEL = gql `\r\n    mutation RemoveStockLocationsFromChannel($input: RemoveStockLocationsFromChannelInput!) {\r\n        removeStockLocationsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst deleteStockLocationsBulkAction = createBulkDeleteAction({\n    location: 'stock-location-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteStockLocation) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService\n        .mutate(DeleteStockLocationsDocument, {\n        input: ids.map(id => ({ id })),\n    })\n        .pipe(map(res => res.deleteStockLocations)),\n    shouldRetryItem: response => response.result === DeletionResult.NOT_DELETED,\n});\nconst assignStockLocationsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'stock-location-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateStockLocation),\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, stockLocationIds, channelIds) => channelIds.map(channelId => dataService\n        .mutate(AssignStockLocationsToChannelDocument, {\n        input: {\n            channelId,\n            stockLocationIds,\n        },\n    })\n        .pipe(map(res => res.assignStockLocationsToChannel))),\n});\nconst removeStockLocationsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'stock-location-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\n        userPermissions.includes(Permission.DeleteStockLocation),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, stockLocationIds, channelId) => dataService\n        .mutate(RemoveStockLocationsFromChannelDocument, {\n        input: {\n            channelId,\n            stockLocationIds,\n        },\n    })\n        .pipe(map(res => res.removeStockLocationsFromChannel)),\n});\n\nconst GET_STOCK_LOCATION_LIST = gql `\n    query GetStockLocationList($options: StockLocationListOptions) {\n        stockLocations(options: $options) {\n            items {\n                ...StockLocationListItem\n            }\n            totalItems\n        }\n    }\n    fragment StockLocationListItem on StockLocation {\n        id\n        createdAt\n        updatedAt\n        name\n        description\n    }\n`;\nclass StockLocationListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'stock-location-list';\n        this.customFields = this.getCustomFieldConfig('StockLocation');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilters([\n            {\n                name: 'enabled',\n                type: { kind: 'text' },\n                label: marker('common.enabled'),\n                filterField: 'name',\n            },\n            {\n                name: 'sku',\n                type: { kind: 'text' },\n                label: marker('catalog.sku'),\n                filterField: 'description',\n            },\n        ])\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .addSorts([\n            { name: 'id' },\n            { name: 'createdAt' },\n            { name: 'updatedAt' },\n            { name: 'name' },\n            { name: 'description' },\n        ])\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        this.configure({\n            document: GetStockLocationListDocument,\n            getItems: data => data.stockLocations,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: StockLocationListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: StockLocationListComponent, selector: \"vdr-stock-location-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-list\\\" />\\r\\n            <a\\r\\n                class=\\\"button primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateStockLocation']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-stock-location' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"stock-location-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"stock-location-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', stockLocation.id]\\\"\\r\\n                ><span>{{ stockLocation.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\" [sort]=\\\"sorts.get('description')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <div class=\\\"description\\\" [innerHTML]=\\\"stockLocation.description\\\"></div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let field of customFields\\\"\\r\\n        [customField]=\\\"field\\\"\\r\\n        [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"::ng-deep .description>p{margin-top:0!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: StockLocationListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-stock-location-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-list\\\" />\\r\\n            <a\\r\\n                class=\\\"button primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateStockLocation']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-stock-location' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"stock-location-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"stock-location-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', stockLocation.id]\\\"\\r\\n                ><span>{{ stockLocation.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\" [sort]=\\\"sorts.get('description')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <div class=\\\"description\\\" [innerHTML]=\\\"stockLocation.description\\\"></div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let field of customFields\\\"\\r\\n        [customField]=\\\"field\\\"\\r\\n        [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"::ng-deep .description>p{margin-top:0!important}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst GET_TAX_CATEGORY_DETAIL = gql `\r\n    query GetTaxCategoryDetail($id: ID!) {\r\n        taxCategory(id: $id) {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\nclass TaxCategoryDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('TaxCategory');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            isDefault: false,\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxCategory];\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    saveButtonEnabled() {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input = {\n            name: formValue.name,\n            isDefault: formValue.isDefault,\n            customFields: formValue.customFields,\n        };\n        this.dataService.settings.createTaxCategory(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'TaxCategory',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createTaxCategory.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'TaxCategory',\n            });\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(taxCategory => {\n            const input = {\n                id: taxCategory.id,\n                name: formValue.name,\n                isDefault: formValue.isDefault,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.settings.updateTaxCategory(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'TaxCategory',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'TaxCategory',\n            });\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            name: entity.name,\n            isDefault: entity.isDefault,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TaxCategoryDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: TaxCategoryDetailComponent, selector: \"vdr-tax-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-category-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.default-tax-category' | translate\\\" for=\\\"isDefault\\\">\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"isDefault\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"isDefault\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxCategory\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-category-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TaxCategoryDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-tax-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-category-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.default-tax-category' | translate\\\" for=\\\"isDefault\\\">\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"isDefault\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"isDefault\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxCategory\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-category-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteTaxCategoriesBulkAction = createBulkDeleteAction({\n    location: 'tax-category-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\n        userPermissions.includes(Permission.DeleteTaxCategory),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.settings.deleteTaxCategories(ids).pipe(map(res => res.deleteTaxCategories)),\n});\n\nconst GET_TAX_CATEGORY_LIST = gql `\n    query GetTaxCategoryList($options: TaxCategoryListOptions) {\n        taxCategories(options: $options) {\n            items {\n                ...TaxCategory\n            }\n            totalItems\n        }\n    }\n    ${TAX_CATEGORY_FRAGMENT}\n`;\nclass TaxCategoryListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'tax-category-list';\n        this.customFields = this.serverConfigService.getCustomFieldsFor('TaxCategory');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetTaxCategoryListDocument,\n            getItems: data => data.taxCategories,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TaxCategoryListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: TaxCategoryListComponent, selector: \"vdr-tax-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxCategory']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-category' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-category-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-category-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxCategory.id]\\\"\\r\\n                ><span>{{ taxCategory.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.default-tax-category' | translate\\\" id=\\\"default-tax-category\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxCategory.isDefault\\\">{{ 'common.default-tax-category' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TaxCategoryListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-tax-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxCategory']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-category' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-category-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-category-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxCategory.id]\\\"\\r\\n                ><span>{{ taxCategory.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.default-tax-category' | translate\\\" id=\\\"default-tax-category\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxCategory.isDefault\\\">{{ 'common.default-tax-category' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nconst GET_TAX_RATE_DETAIL = gql `\r\n    query GetTaxRateDetail($id: ID!) {\r\n        taxRate(id: $id) {\r\n            ...TaxRate\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\nclass TaxRateDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('TaxRate');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            enabled: [true],\n            value: [0, Validators.required],\n            taxCategoryId: ['', Validators.required],\n            zoneId: ['', Validators.required],\n            customerGroupId: [''],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxRate];\n    }\n    ngOnInit() {\n        this.init();\n        this.taxCategories$ = this.dataService.settings\n            .getTaxCategories({ take: 100 })\n            .mapSingle(data => data.taxCategories.items);\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    saveButtonEnabled() {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const { name, enabled, value, taxCategoryId, zoneId, customerGroupId, customFields } = this.detailForm.value;\n        if (!name || enabled == null || value == null || !taxCategoryId || !zoneId) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input = {\n            name,\n            enabled,\n            value,\n            categoryId: taxCategoryId,\n            zoneId,\n            customerGroupId: formValue.customerGroupId,\n            customFields: formValue.customFields,\n        };\n        this.dataService.settings.createTaxRate(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'TaxRate',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createTaxRate.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'TaxRate',\n            });\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(taxRate => {\n            const input = {\n                id: taxRate.id,\n                name: formValue.name,\n                enabled: formValue.enabled,\n                value: formValue.value,\n                categoryId: formValue.taxCategoryId,\n                zoneId: formValue.zoneId,\n                customerGroupId: formValue.customerGroupId,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.settings.updateTaxRate(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'TaxRate',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'TaxRate',\n            });\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            name: entity.name,\n            enabled: entity.enabled,\n            value: entity.value,\n            taxCategoryId: entity.category ? entity.category.id : '',\n            zoneId: entity.zone ? entity.zone.id : '',\n            customerGroupId: entity.customerGroup ? entity.customerGroup.id : '',\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TaxRateDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: TaxRateDetailComponent, selector: \"vdr-tax-rate-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-rate-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.rate' | translate\\\" for=\\\"value\\\">\\r\\n                        <vdr-affixed-input suffix=\\\"%\\\">\\r\\n                            <input\\r\\n                                id=\\\"value\\\"\\r\\n                                type=\\\"number\\\"\\r\\n                                step=\\\"0.1\\\"\\r\\n                                formControlName=\\\"value\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-affixed-input>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.tax-category' | translate\\\" for=\\\"taxCategoryId\\\">\\r\\n                        <select\\r\\n                            name=\\\"taxCategoryId\\\"\\r\\n                            formControlName=\\\"taxCategoryId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.zone' | translate\\\" for=\\\"zoneId\\\">\\r\\n                        <vdr-zone-selector\\r\\n                            name=\\\"zoneId\\\"\\r\\n                            formControlName=\\\"zoneId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                        </vdr-zone-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxRate\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-rate-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.AffixedInputComponent, selector: \"vdr-affixed-input\", inputs: [\"prefix\", \"suffix\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: i1.ZoneSelectorComponent, selector: \"vdr-zone-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TaxRateDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-tax-rate-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-rate-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.rate' | translate\\\" for=\\\"value\\\">\\r\\n                        <vdr-affixed-input suffix=\\\"%\\\">\\r\\n                            <input\\r\\n                                id=\\\"value\\\"\\r\\n                                type=\\\"number\\\"\\r\\n                                step=\\\"0.1\\\"\\r\\n                                formControlName=\\\"value\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-affixed-input>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.tax-category' | translate\\\" for=\\\"taxCategoryId\\\">\\r\\n                        <select\\r\\n                            name=\\\"taxCategoryId\\\"\\r\\n                            formControlName=\\\"taxCategoryId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.zone' | translate\\\" for=\\\"zoneId\\\">\\r\\n                        <vdr-zone-selector\\r\\n                            name=\\\"zoneId\\\"\\r\\n                            formControlName=\\\"zoneId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                        </vdr-zone-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxRate\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-rate-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteTaxRatesBulkAction = createBulkDeleteAction({\n    location: 'tax-rate-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\n        userPermissions.includes(Permission.DeleteTaxRate),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.settings.deleteTaxRates(ids).pipe(map(res => res.deleteTaxRates)),\n});\n\nconst GET_TAX_RATE_LIST = gql `\n    query GetTaxRateList($options: TaxRateListOptions) {\n        taxRates(options: $options) {\n            items {\n                ...TaxRate\n            }\n            totalItems\n        }\n    }\n    ${TAX_RATE_FRAGMENT}\n`;\nclass TaxRateListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'tax-rate-list';\n        this.customFields = this.getCustomFieldConfig('TaxRate');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addFilter({\n            name: 'enabled',\n            type: { kind: 'boolean' },\n            label: marker('common.enabled'),\n            filterField: 'enabled',\n        })\n            .addFilter({\n            name: 'value',\n            type: { kind: 'number' },\n            label: marker('common.value'),\n            filterField: 'value',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'value' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetTaxRateListDocument,\n            getItems: data => data.taxRates,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TaxRateListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: TaxRateListComponent, selector: \"vdr-tax-rate-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxRate']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-rate' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-rate-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-rate-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxRate.id]\\\"\\r\\n                ><span>{{ taxRate.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-category' | translate\\\" id=\\\"tax-category\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.category.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.zone' | translate\\\" id=\\\"zone\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.zone.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.customer-group' | translate\\\" id=\\\"customer-group\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.customerGroup?.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-rate' | translate\\\" id=\\\"tax-rate\\\" [sort]=\\\"sorts.get('value')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\"> {{ taxRate.value }}% </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxRate.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!taxRate.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TaxRateListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-tax-rate-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxRate']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-rate' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-rate-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-rate-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxRate.id]\\\"\\r\\n                ><span>{{ taxRate.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-category' | translate\\\" id=\\\"tax-category\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.category.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.zone' | translate\\\" id=\\\"zone\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.zone.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.customer-group' | translate\\\" id=\\\"customer-group\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.customerGroup?.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-rate' | translate\\\" id=\\\"tax-rate\\\" [sort]=\\\"sorts.get('value')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\"> {{ taxRate.value }}% </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxRate.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!taxRate.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nclass TestShippingMethodsComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.testDataUpdated = false;\n        this.fetchTestResult$ = new Subject();\n    }\n    ngOnInit() {\n        this.activeChannel$ = this.dataService.settings\n            .getActiveChannel()\n            .mapStream(data => data.activeChannel);\n        this.testResult$ = this.fetchTestResult$.pipe(switchMap$1(([address, lines]) => {\n            const input = {\n                shippingAddress: { ...address, streetLine1: 'test' },\n                lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\n            };\n            return this.dataService.shippingMethod\n                .testEligibleShippingMethods(input)\n                .mapSingle(result => result.testEligibleShippingMethods);\n        }));\n    }\n    setTestOrderLines(event) {\n        this.testOrderLines = event;\n        this.testDataUpdated = true;\n    }\n    setTestAddress(event) {\n        this.testAddress = event;\n        this.testDataUpdated = true;\n    }\n    allTestDataPresent() {\n        return !!(this.testAddress && this.testOrderLines && this.testOrderLines.length);\n    }\n    runTest() {\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\n        this.testDataUpdated = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestShippingMethodsComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: TestShippingMethodsComponent, selector: \"vdr-test-shipping-methods\", ngImport: i0, template: \"<vdr-page-block>\\r\\n    <div class=\\\"test-wrapper\\\">\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-order-builder (orderLinesChange)=\\\"setTestOrderLines($event)\\\"></vdr-test-order-builder>\\r\\n        </div>\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-address-form (addressChange)=\\\"setTestAddress($event)\\\"></vdr-test-address-form>\\r\\n            <vdr-shipping-eligibility-test-result\\r\\n                class=\\\"mt-1\\\"\\r\\n                [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                [okToRun]=\\\"allTestDataPresent()\\\"\\r\\n                [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                [testResult]=\\\"testResult$ | async\\\"\\r\\n                (runTest)=\\\"runTest()\\\"\\r\\n            ></vdr-shipping-eligibility-test-result>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".test-wrapper{display:flex;width:100%;gap:var(--space-unit)}.test-wrapper>div{flex:1}@media screen and (max-width: 992px){.test-wrapper{flex-direction:column}}\\n\"], dependencies: [{ kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: TestOrderBuilderComponent, selector: \"vdr-test-order-builder\", outputs: [\"orderLinesChange\"] }, { kind: \"component\", type: TestAddressFormComponent, selector: \"vdr-test-address-form\", outputs: [\"addressChange\"] }, { kind: \"component\", type: ShippingEligibilityTestResultComponent, selector: \"vdr-shipping-eligibility-test-result\", inputs: [\"testResult\", \"okToRun\", \"testDataUpdated\", \"currencyCode\"], outputs: [\"runTest\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestShippingMethodsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-test-shipping-methods', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <div class=\\\"test-wrapper\\\">\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-order-builder (orderLinesChange)=\\\"setTestOrderLines($event)\\\"></vdr-test-order-builder>\\r\\n        </div>\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-address-form (addressChange)=\\\"setTestAddress($event)\\\"></vdr-test-address-form>\\r\\n            <vdr-shipping-eligibility-test-result\\r\\n                class=\\\"mt-1\\\"\\r\\n                [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                [okToRun]=\\\"allTestDataPresent()\\\"\\r\\n                [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                [testResult]=\\\"testResult$ | async\\\"\\r\\n                (runTest)=\\\"runTest()\\\"\\r\\n            ></vdr-shipping-eligibility-test-result>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".test-wrapper{display:flex;width:100%;gap:var(--space-unit)}.test-wrapper>div{flex:1}@media screen and (max-width: 992px){.test-wrapper{flex-direction:column}}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\nconst GET_ZONE_DETAIL = gql `\r\n    query GetZoneDetail($id: ID!) {\r\n        zone(id: $id) {\r\n            ...ZoneDetail\r\n        }\r\n    }\r\n    fragment ZoneDetail on Zone {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\nclass ZoneDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Zone');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateZone];\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    saveButtonEnabled() {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const { name, customFields } = this.detailForm.value;\n        if (!name) {\n            return;\n        }\n        const input = {\n            name,\n            customFields,\n        };\n        this.dataService.settings.createZone(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Zone',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createZone.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Zone',\n            });\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(zone => {\n            const input = {\n                id: zone.id,\n                name: formValue.name,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.settings.updateZone(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Zone',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Zone',\n            });\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            name: entity.name,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ZoneDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ZoneDetailComponent, selector: \"vdr-zone-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"zone-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Zone\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"zone-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ZoneDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-zone-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"zone-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Zone\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"zone-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteZonesBulkAction = createBulkDeleteAction({\n    location: 'zone-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\n        userPermissions.includes(Permission.DeleteZone),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.settings.deleteZones(ids).pipe(map(res => res.deleteZones)),\n});\n\nconst GET_ZONE_LIST = gql `\n    query GetZoneList($options: ZoneListOptions) {\n        zones(options: $options) {\n            items {\n                ...ZoneListItem\n            }\n            totalItems\n        }\n    }\n    fragment ZoneListItem on Zone {\n        id\n        createdAt\n        updatedAt\n        name\n    }\n`;\nclass ZoneListComponent extends TypedBaseListComponent {\n    constructor(dataService, notificationService, modalService) {\n        super();\n        this.dataService = dataService;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.dataTableListId = 'zone-list';\n        this.selectedMemberIds = [];\n        this.customFields = this.serverConfigService.getCustomFieldsFor('Zone');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetZoneListDocument,\n            getItems: data => data.zones,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    filterOperator: this.searchTermControl.value ? LogicalOperator.OR : LogicalOperator.AND,\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        const activeZoneId$ = this.route.paramMap.pipe(map(pm => pm.get('contents')), distinctUntilChanged(), tap(() => (this.selectedMemberIds = [])));\n        this.activeZone$ = combineLatest(this.items$, activeZoneId$).pipe(map(([zones, activeZoneId]) => {\n            if (activeZoneId) {\n                return zones.find(z => z.id === activeZoneId);\n            }\n        }));\n        this.activeIndex$ = combineLatest(this.items$, activeZoneId$).pipe(map(([zones, activeZoneId]) => {\n            if (activeZoneId) {\n                return zones.findIndex(g => g.id === activeZoneId);\n            }\n            else {\n                return -1;\n            }\n        }));\n    }\n    setLanguage(code) {\n        this.dataService.client.setContentLanguage(code).subscribe();\n    }\n    closeMembers() {\n        const params = { ...this.route.snapshot.params };\n        delete params.contents;\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\n    }\n    addToZone(zone) {\n        this.modalService\n            .fromComponent(AddCountryToZoneDialogComponent, {\n            locals: {\n                zoneName: zone.name,\n                zoneId: zone.id,\n            },\n            size: 'md',\n        })\n            .pipe(switchMap$1(memberIds => memberIds\n            ? this.dataService.settings\n                .addMembersToZone(zone.id, memberIds)\n                .pipe(mapTo(memberIds))\n            : EMPTY))\n            .subscribe({\n            next: result => {\n                this.notificationService.success(marker(`settings.add-countries-to-zone-success`), {\n                    countryCount: result.length,\n                    zoneName: zone.name,\n                });\n                this.refreshMemberList();\n            },\n            error: err => {\n                this.notificationService.error(err);\n            },\n        });\n    }\n    refreshMemberList() {\n        this.zoneMemberList?.refresh();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ZoneListComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }, { token: i1.ModalService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ZoneListComponent, selector: \"vdr-zone-list\", viewQueries: [{ propertyName: \"zoneMemberList\", first: true, predicate: ZoneMemberListComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateZone']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-zone' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"zone-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeZone$ | async\\\" (closeClicked)=\\\"closeMembers()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-data-table-2\\r\\n            [id]=\\\"dataTableListId\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"zone-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            />\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customerGroup.id]\\\"\\r\\n                        ><span>{{ customerGroup.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: customerGroup.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'settings.view-zone-members' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sort]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-data-table-2>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"(activeZone$ | async)?.name\\\">\\r\\n        <ng-container *ngIf=\\\"activeZone$ | async as activeZone\\\">\\r\\n            <button class=\\\"button-ghost ml-4\\\" (click)=\\\"addToZone(activeZone)\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                <span>{{\\r\\n                    'settings.add-countries-to-zone' | translate : { zoneName: activeZone.name }\\r\\n                }}</span>\\r\\n            </button>\\r\\n            <vdr-zone-member-list\\r\\n                *ngIf=\\\"activeZone$ | async as activeZone\\\"\\r\\n                locationId=\\\"zone-members-list\\\"\\r\\n                [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n                [activeZone]=\\\"activeZone\\\"\\r\\n                (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n            />\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\".zone-wrapper{display:flex;height:calc(100% - 50px)}.zone-wrapper .zone-list{flex:1;overflow:auto;margin-top:0}.zone-wrapper .zone-list tr.active{background-color:var(--color-component-bg-200)}.zone-members{height:100%;width:0;opacity:0;visibility:hidden;overflow:auto;transition:width .3s,opacity .2s .3s,visibility 0s .3s}.zone-members.expanded{width:40vw;visibility:visible;opacity:1;padding-inline-start:12px}.zone-members .close-button{margin:0;background:none;border:none;cursor:pointer}.zone-members ::ng-deep table.table{margin-top:0}.zone-members ::ng-deep table.table th{top:0}.zone-members .controls{display:flex;justify-content:space-between}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.SplitViewComponent, selector: \"vdr-split-view\", inputs: [\"rightPanelOpen\"], outputs: [\"closeClicked\"] }, { kind: \"directive\", type: i1.SplitViewLeftDirective, selector: \"[vdrSplitViewLeft]\" }, { kind: \"directive\", type: i1.SplitViewRightDirective, selector: \"[vdrSplitViewRight]\", inputs: [\"splitViewTitle\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: ZoneMemberListComponent, selector: \"vdr-zone-member-list\", inputs: [\"locationId\", \"members\", \"selectedMemberIds\", \"activeZone\"], outputs: [\"selectionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ZoneListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-zone-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateZone']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-zone' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"zone-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeZone$ | async\\\" (closeClicked)=\\\"closeMembers()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-data-table-2\\r\\n            [id]=\\\"dataTableListId\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"zone-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            />\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customerGroup.id]\\\"\\r\\n                        ><span>{{ customerGroup.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: customerGroup.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'settings.view-zone-members' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sort]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-data-table-2>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"(activeZone$ | async)?.name\\\">\\r\\n        <ng-container *ngIf=\\\"activeZone$ | async as activeZone\\\">\\r\\n            <button class=\\\"button-ghost ml-4\\\" (click)=\\\"addToZone(activeZone)\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                <span>{{\\r\\n                    'settings.add-countries-to-zone' | translate : { zoneName: activeZone.name }\\r\\n                }}</span>\\r\\n            </button>\\r\\n            <vdr-zone-member-list\\r\\n                *ngIf=\\\"activeZone$ | async as activeZone\\\"\\r\\n                locationId=\\\"zone-members-list\\\"\\r\\n                [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n                [activeZone]=\\\"activeZone\\\"\\r\\n                (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n            />\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\".zone-wrapper{display:flex;height:calc(100% - 50px)}.zone-wrapper .zone-list{flex:1;overflow:auto;margin-top:0}.zone-wrapper .zone-list tr.active{background-color:var(--color-component-bg-200)}.zone-members{height:100%;width:0;opacity:0;visibility:hidden;overflow:auto;transition:width .3s,opacity .2s .3s,visibility 0s .3s}.zone-members.expanded{width:40vw;visibility:visible;opacity:1;padding-inline-start:12px}.zone-members .close-button{margin:0;background:none;border:none;cursor:pointer}.zone-members ::ng-deep table.table{margin-top:0}.zone-members ::ng-deep table.table th{top:0}.zone-members .controls{display:flex;justify-content:space-between}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.NotificationService }, { type: i1.ModalService }], propDecorators: { zoneMemberList: [{\n                type: ViewChild,\n                args: [ZoneMemberListComponent]\n            }] } });\n\nconst removeZoneMembersBulkAction = {\n    location: 'zone-members-list',\n    label: marker('settings.remove-from-zone'),\n    icon: 'trash',\n    iconClass: 'is-danger',\n    requiresPermission: Permission.UpdateCustomerGroup,\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        const zone = hostComponent.activeZone;\n        const memberIds = selection.map(s => s.id);\n        dataService.settings.removeMembersFromZone(zone.id, memberIds).subscribe({\n            complete: () => {\n                notificationService.success(marker(`settings.remove-countries-from-zone-success`), {\n                    countryCount: memberIds.length,\n                    zoneName: zone.name,\n                });\n                hostComponent.refresh();\n                clearSelection();\n            },\n        });\n    },\n};\n\nclass ProfileResolver extends BaseEntityResolver {\n    constructor(router, dataService) {\n        super(router, {\n            __typename: 'Administrator',\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            emailAddress: '',\n            firstName: '',\n            lastName: '',\n            user: { roles: [] },\n        }, id => dataService.administrator\n            .getActiveAdministrator()\n            .mapStream(data => data.activeAdministrator));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProfileResolver, deps: [{ token: i3$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProfileResolver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ProfileResolver, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i3$1.Router }, { type: i1.DataService }] });\n\nconst createRoutes = (pageService) => [\n    {\n        path: 'profile',\n        component: PageComponent,\n        data: {\n            breadcrumb: marker('breadcrumb.profile'),\n        },\n        resolve: {\n            detail: () => inject(DataService)\n                .query(GetProfileDetailDocument)\n                .mapSingle(data => ({ entity: of(data.activeAdministrator) })),\n        },\n        children: pageService.getPageTabRoutes('profile'),\n    },\n    {\n        path: 'administrators',\n        component: PageComponent,\n        data: {\n            locationId: 'administrator-list',\n            breadcrumb: marker('breadcrumb.administrators'),\n        },\n        children: pageService.getPageTabRoutes('administrator-list'),\n    },\n    {\n        path: 'administrators/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'administrator-detail',\n            breadcrumb: { label: marker('breadcrumb.administrators'), link: ['../', 'administrators'] },\n        },\n        children: pageService.getPageTabRoutes('administrator-detail'),\n    },\n    {\n        path: 'channels',\n        component: PageComponent,\n        data: {\n            locationId: 'channel-list',\n            breadcrumb: marker('breadcrumb.channels'),\n        },\n        children: pageService.getPageTabRoutes('channel-list'),\n    },\n    {\n        path: 'channels/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'channel-detail',\n            breadcrumb: { label: marker('breadcrumb.channels'), link: ['../', 'channels'] },\n        },\n        children: pageService.getPageTabRoutes('channel-detail'),\n    },\n    {\n        path: 'stock-locations',\n        component: PageComponent,\n        data: {\n            locationId: 'stock-location-list',\n            breadcrumb: marker('breadcrumb.stock-locations'),\n        },\n        children: pageService.getPageTabRoutes('stock-location-list'),\n    },\n    {\n        path: 'stock-locations/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'stock-location-detail',\n            breadcrumb: { label: marker('breadcrumb.stock-locations'), link: ['../', 'stock-locations'] },\n        },\n        children: pageService.getPageTabRoutes('stock-location-detail'),\n    },\n    {\n        path: 'sellers',\n        component: PageComponent,\n        data: {\n            locationId: 'seller-list',\n            breadcrumb: marker('breadcrumb.sellers'),\n        },\n        children: pageService.getPageTabRoutes('seller-list'),\n    },\n    {\n        path: 'sellers/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'seller-detail',\n            breadcrumb: { label: marker('breadcrumb.sellers'), link: ['../', 'sellers'] },\n        },\n        children: pageService.getPageTabRoutes('seller-detail'),\n    },\n    {\n        path: 'roles',\n        component: PageComponent,\n        data: {\n            locationId: 'role-list',\n            breadcrumb: marker('breadcrumb.roles'),\n        },\n        children: pageService.getPageTabRoutes('role-list'),\n    },\n    {\n        path: 'roles/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'role-detail',\n            breadcrumb: { label: marker('breadcrumb.roles'), link: ['../', 'roles'] },\n        },\n        children: pageService.getPageTabRoutes('role-detail'),\n    },\n    {\n        path: 'tax-categories',\n        component: PageComponent,\n        data: {\n            locationId: 'tax-category-list',\n            breadcrumb: marker('breadcrumb.tax-categories'),\n        },\n        children: pageService.getPageTabRoutes('tax-category-list'),\n    },\n    {\n        path: 'tax-categories/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'tax-category-detail',\n            breadcrumb: { label: marker('breadcrumb.tax-categories'), link: ['../', 'tax-categories'] },\n        },\n        children: pageService.getPageTabRoutes('tax-category-detail'),\n    },\n    {\n        path: 'tax-rates',\n        component: PageComponent,\n        data: {\n            locationId: 'tax-rate-list',\n            breadcrumb: marker('breadcrumb.tax-rates'),\n        },\n        children: pageService.getPageTabRoutes('tax-rate-list'),\n    },\n    {\n        path: 'tax-rates/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'tax-rate-detail',\n            breadcrumb: { label: marker('breadcrumb.tax-rates'), link: ['../', 'tax-rates'] },\n        },\n        children: pageService.getPageTabRoutes('tax-rate-detail'),\n    },\n    {\n        path: 'countries',\n        component: PageComponent,\n        data: {\n            locationId: 'country-list',\n            breadcrumb: marker('breadcrumb.countries'),\n        },\n        children: pageService.getPageTabRoutes('country-list'),\n    },\n    {\n        path: 'countries/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'country-detail',\n            breadcrumb: { label: marker('breadcrumb.countries'), link: ['../', 'countries'] },\n        },\n        children: pageService.getPageTabRoutes('country-detail'),\n    },\n    {\n        path: 'zones',\n        component: PageComponent,\n        data: {\n            locationId: 'zone-list',\n            breadcrumb: marker('breadcrumb.zones'),\n        },\n        children: pageService.getPageTabRoutes('zone-list'),\n    },\n    {\n        path: 'zones/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'zone-detail',\n            breadcrumb: { label: marker('breadcrumb.zones'), link: ['../', 'zones'] },\n        },\n        children: pageService.getPageTabRoutes('zone-detail'),\n    },\n    {\n        path: 'shipping-methods',\n        component: PageComponent,\n        data: {\n            locationId: 'shipping-method-list',\n            breadcrumb: marker('breadcrumb.shipping-methods'),\n        },\n        children: pageService.getPageTabRoutes('shipping-method-list'),\n    },\n    {\n        path: 'shipping-methods/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'shipping-method-detail',\n            breadcrumb: { label: marker('breadcrumb.shipping-methods'), link: ['../', 'shipping-methods'] },\n        },\n        children: pageService.getPageTabRoutes('shipping-method-detail'),\n    },\n    {\n        path: 'payment-methods',\n        component: PageComponent,\n        data: {\n            locationId: 'payment-method-list',\n            breadcrumb: marker('breadcrumb.payment-methods'),\n        },\n        children: pageService.getPageTabRoutes('payment-method-list'),\n    },\n    {\n        path: 'payment-methods/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'payment-method-detail',\n            breadcrumb: { label: marker('breadcrumb.payment-methods'), link: ['../', 'payment-methods'] },\n        },\n        children: pageService.getPageTabRoutes('payment-method-detail'),\n    },\n    {\n        path: 'global-settings',\n        component: PageComponent,\n        data: {\n            breadcrumb: marker('breadcrumb.global-settings'),\n            locationId: 'global-setting-detail',\n        },\n        resolve: {\n            detail: () => inject(DataService)\n                .query(GetGlobalSettingsDetailDocument)\n                .mapSingle(data => ({ entity: of(data.globalSettings) })),\n        },\n        children: pageService.getPageTabRoutes('global-setting-detail'),\n    },\n];\n\nclass SettingsModule {\n    static { this.hasRegisteredTabsAndBulkActions = false; }\n    constructor(bulkActionRegistryService, pageService) {\n        if (SettingsModule.hasRegisteredTabsAndBulkActions) {\n            return;\n        }\n        bulkActionRegistryService.registerBulkAction(deleteSellersBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteChannelsBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteAdministratorsBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteRolesBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignShippingMethodsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeShippingMethodsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteShippingMethodsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignPaymentMethodsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removePaymentMethodsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deletePaymentMethodsBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteTaxCategoriesBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteTaxRatesBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteCountriesBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteZonesBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeZoneMembersBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignStockLocationsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeStockLocationsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteStockLocationsBulkAction);\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'seller-list',\n            tab: marker('breadcrumb.sellers'),\n            route: '',\n            component: SellerListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'seller-detail',\n            tab: marker('settings.seller'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: SellerDetailComponent,\n                query: GetSellerDetailDocument,\n                entityKey: 'seller',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-seller'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'channel-list',\n            tab: marker('breadcrumb.channels'),\n            route: '',\n            component: ChannelListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'channel-detail',\n            tab: marker('settings.channel'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: ChannelDetailComponent,\n                query: GetChannelDetailDocument,\n                entityKey: 'channel',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity\n                            ? entity.code === DEFAULT_CHANNEL_CODE\n                                ? 'common.default-channel'\n                                : entity.code\n                            : marker('settings.create-new-channel'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'administrator-list',\n            tab: marker('breadcrumb.administrators'),\n            route: '',\n            component: AdministratorListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'administrator-detail',\n            tab: marker('settings.administrator'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: AdminDetailComponent,\n                query: GetAdministratorDetailDocument,\n                entityKey: 'administrator',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity\n                            ? `${entity.firstName} ${entity.lastName}`\n                            : marker('admin.create-new-administrator'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'role-list',\n            tab: marker('breadcrumb.roles'),\n            route: '',\n            component: RoleListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'role-detail',\n            tab: marker('settings.role'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: RoleDetailComponent,\n                query: GetRoleDetailDocument,\n                entityKey: 'role',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.description : marker('settings.create-new-role'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'shipping-method-list',\n            tab: marker('breadcrumb.shipping-methods'),\n            route: '',\n            component: ShippingMethodListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'shipping-method-detail',\n            tab: marker('settings.shipping-method'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: ShippingMethodDetailComponent,\n                query: GetShippingMethodDetailDocument,\n                entityKey: 'shippingMethod',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-shipping-method'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'shipping-method-list',\n            tab: marker('settings.test-shipping-methods'),\n            route: 'test',\n            component: TestShippingMethodsComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'payment-method-list',\n            tab: marker('breadcrumb.payment-methods'),\n            route: '',\n            component: PaymentMethodListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'payment-method-detail',\n            tab: marker('settings.payment-method'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: PaymentMethodDetailComponent,\n                query: GetPaymentMethodDetailDocument,\n                entityKey: 'paymentMethod',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-payment-method'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'tax-category-list',\n            tab: marker('breadcrumb.tax-categories'),\n            route: '',\n            component: TaxCategoryListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'tax-category-detail',\n            tab: marker('settings.tax-category'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: TaxCategoryDetailComponent,\n                query: GetTaxCategoryDetailDocument,\n                entityKey: 'taxCategory',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-tax-category'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'tax-rate-list',\n            tab: marker('breadcrumb.tax-rates'),\n            route: '',\n            component: TaxRateListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'tax-rate-detail',\n            tab: marker('settings.tax-rate'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: TaxRateDetailComponent,\n                query: GetTaxRateDetailDocument,\n                entityKey: 'taxRate',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-tax-rate'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'country-list',\n            tab: marker('breadcrumb.countries'),\n            route: '',\n            component: CountryListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'country-detail',\n            tab: marker('settings.country'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: CountryDetailComponent,\n                query: GetCountryDetailDocument,\n                entityKey: 'country',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-country'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'zone-list',\n            tab: marker('breadcrumb.zones'),\n            route: '',\n            component: ZoneListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'zone-detail',\n            tab: marker('settings.zone'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: ZoneDetailComponent,\n                query: GetZoneDetailDocument,\n                entityKey: 'zone',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-zone'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'global-setting-detail',\n            tab: marker('breadcrumb.global-settings'),\n            route: '',\n            component: GlobalSettingsComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'profile',\n            tab: marker('breadcrumb.profile'),\n            route: '',\n            component: ProfileComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'stock-location-list',\n            tab: marker('catalog.stock-locations'),\n            route: '',\n            component: StockLocationListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'stock-location-detail',\n            tab: marker('catalog.stock-location'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: StockLocationDetailComponent,\n                query: GetStockLocationDetailDocument,\n                entityKey: 'stockLocation',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('catalog.create-new-stock-location'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        SettingsModule.hasRegisteredTabsAndBulkActions = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SettingsModule, deps: [{ token: i1.BulkActionRegistryService }, { token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: SettingsModule, declarations: [TaxCategoryListComponent,\n            TaxCategoryDetailComponent,\n            AdministratorListComponent,\n            RoleListComponent,\n            RoleDetailComponent,\n            AdminDetailComponent,\n            PermissionGridComponent,\n            CountryListComponent,\n            CountryDetailComponent,\n            TaxRateListComponent,\n            TaxRateDetailComponent,\n            ChannelListComponent,\n            ChannelDetailComponent,\n            ShippingMethodListComponent,\n            ShippingMethodDetailComponent,\n            PaymentMethodListComponent,\n            PaymentMethodDetailComponent,\n            GlobalSettingsComponent,\n            TestOrderBuilderComponent,\n            TestAddressFormComponent,\n            SellerDetailComponent,\n            SellerListComponent,\n            ShippingMethodTestResultComponent,\n            ShippingEligibilityTestResultComponent,\n            ZoneListComponent,\n            AddCountryToZoneDialogComponent,\n            ZoneMemberListComponent,\n            ZoneMemberListHeaderDirective,\n            ZoneMemberControlsDirective,\n            ProfileComponent,\n            TestShippingMethodsComponent,\n            ZoneDetailComponent,\n            StockLocationListComponent,\n            StockLocationDetailComponent], imports: [SharedModule, i3$1.RouterModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SettingsModule, providers: [\n            {\n                provide: ROUTES,\n                useFactory: (pageService) => createRoutes(pageService),\n                multi: true,\n                deps: [PageService],\n            },\n        ], imports: [SharedModule, RouterModule.forChild([])] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SettingsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [SharedModule, RouterModule.forChild([])],\n                    providers: [\n                        {\n                            provide: ROUTES,\n                            useFactory: (pageService) => createRoutes(pageService),\n                            multi: true,\n                            deps: [PageService],\n                        },\n                    ],\n                    declarations: [\n                        TaxCategoryListComponent,\n                        TaxCategoryDetailComponent,\n                        AdministratorListComponent,\n                        RoleListComponent,\n                        RoleDetailComponent,\n                        AdminDetailComponent,\n                        PermissionGridComponent,\n                        CountryListComponent,\n                        CountryDetailComponent,\n                        TaxRateListComponent,\n                        TaxRateDetailComponent,\n                        ChannelListComponent,\n                        ChannelDetailComponent,\n                        ShippingMethodListComponent,\n                        ShippingMethodDetailComponent,\n                        PaymentMethodListComponent,\n                        PaymentMethodDetailComponent,\n                        GlobalSettingsComponent,\n                        TestOrderBuilderComponent,\n                        TestAddressFormComponent,\n                        SellerDetailComponent,\n                        SellerListComponent,\n                        ShippingMethodTestResultComponent,\n                        ShippingEligibilityTestResultComponent,\n                        ZoneListComponent,\n                        AddCountryToZoneDialogComponent,\n                        ZoneMemberListComponent,\n                        ZoneMemberListHeaderDirective,\n                        ZoneMemberControlsDirective,\n                        ProfileComponent,\n                        TestShippingMethodsComponent,\n                        ZoneDetailComponent,\n                        StockLocationListComponent,\n                        StockLocationDetailComponent,\n                    ],\n                }]\n        }], ctorParameters: () => [{ type: i1.BulkActionRegistryService }, { type: i1.PageService }] });\n\n// This file was generated by the build-public-api.ts script\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AddCountryToZoneDialogComponent, AdminDetailComponent, AdministratorListComponent, CREATE_STOCK_LOCATION, ChannelDetailComponent, ChannelListComponent, CountryDetailComponent, CountryListComponent, GET_ADMINISTRATOR_DETAIL, GET_ADMINISTRATOR_LIST, GET_CHANNEL_DETAIL, GET_CHANNEL_LIST, GET_COUNTRY_DETAIL, GET_COUNTRY_LIST, GET_GLOBAL_SETTINGS_DETAIL, GET_PAYMENT_METHOD_DETAIL, GET_PAYMENT_METHOD_LIST, GET_PROFILE_DETAIL, GET_ROLE_DETAIL, GET_ROLE_LIST, GET_SELLER_DETAIL, GET_SHIPPING_METHOD_DETAIL, GET_SHIPPING_METHOD_LIST, GET_STOCK_LOCATION_DETAIL, GET_STOCK_LOCATION_LIST, GET_TAX_CATEGORY_DETAIL, GET_TAX_CATEGORY_LIST, GET_TAX_RATE_DETAIL, GET_TAX_RATE_LIST, GET_ZONE_DETAIL, GET_ZONE_LIST, GET_ZONE_MEMBERS, GlobalSettingsComponent, PaymentMethodDetailComponent, PaymentMethodListComponent, PermissionGridComponent, ProfileComponent, ProfileResolver, RoleDetailComponent, RoleListComponent, SellerDetailComponent, SellerListComponent, SettingsModule, ShippingEligibilityTestResultComponent, ShippingMethodDetailComponent, ShippingMethodListComponent, ShippingMethodTestResultComponent, StockLocationDetailComponent, StockLocationListComponent, TaxCategoryDetailComponent, TaxCategoryListComponent, TaxRateDetailComponent, TaxRateListComponent, TestAddressFormComponent, TestOrderBuilderComponent, TestShippingMethodsComponent, UPDATE_STOCK_LOCATION, ZoneDetailComponent, ZoneListComponent, ZoneMemberControlsDirective, ZoneMemberListComponent, ZoneMemberListHeaderDirective, assignPaymentMethodsToChannelBulkAction, assignShippingMethodsToChannelBulkAction, assignStockLocationsToChannelBulkAction, createRoutes, deleteAdministratorsBulkAction, deleteChannelsBulkAction, deleteCountriesBulkAction, deletePaymentMethodsBulkAction, deleteRolesBulkAction, deleteSellersBulkAction, deleteShippingMethodsBulkAction, deleteStockLocationsBulkAction, deleteTaxCategoriesBulkAction, deleteTaxRatesBulkAction, deleteZonesBulkAction, removePaymentMethodsFromChannelBulkAction, removeShippingMethodsFromChannelBulkAction, removeStockLocationsFromChannelBulkAction, removeZoneMembersBulkAction };\n"],"x_google_ignoreList":[0,1]}