{"version":3,"file":"870.872d8c865c7c7f4f.js","mappings":"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","names":["AddManualPaymentDialogComponent_ng_template_0_Template","rf","ctx","i0","AddManualPaymentDialogComponent_ng_template_9_Template","_r1","ctx_r1","cancel","submit","form","invalid","pristine","outstandingAmount","currencyCode","CancelOrderDialogComponent_ng_template_0_Template","CancelOrderDialogComponent_tr_22_input_14_Template","$event","line_r2","$implicit","ctx_r2","lineQuantities","id","checkIfAllSelected","cancelAll","quantity","CancelOrderDialogComponent_tr_22_ng_template_15_Template","CancelOrderDialogComponent_tr_22_Template","nonEditable_r4","featuredAsset","productVariant","name","sku","unitPriceWithTax","order","active","CancelOrderDialogComponent_ng_container_24_Template","_r5","radioChanged","CancelOrderDialogComponent_ng_template_29_ng_container_4_Template","CancelOrderDialogComponent_ng_template_29_ng_container_5_Template","CancelOrderDialogComponent_ng_template_29_Template","_r6","select","reason","selectionCount","CouponCodeSelectorComponent_ng_template_2_Template","item_r1","item","code","promotionName","SelectAddressDialogComponent_ng_template_0_Template","SelectAddressDialogComponent_clr_tabs_1_clr_tab_1_ng_template_4_vdr_radio_card_2_Template","address_r5","SelectAddressDialogComponent_clr_tabs_1_clr_tab_1_ng_template_4_Template","_r3","ctx_r3","selectedAddress","addresses_r6","ngIf","addressIdFn","SelectAddressDialogComponent_clr_tabs_1_clr_tab_1_Template","_r2","useExisting","SelectAddressDialogComponent_clr_tabs_1_ng_template_6_Template","addressForm","availableCountries$","SelectAddressDialogComponent_clr_tabs_1_Template","createNew","customerId","length","SelectAddressDialogComponent_ng_template_3_Template","_r7","SelectCustomerDialogComponent_ng_template_0_Template","ctx_r0","title","SelectCustomerDialogComponent_ng_container_1_ng_container_1_Template","SelectCustomerDialogComponent_ng_container_1_vdr_form_field_2_Template","note","SelectCustomerDialogComponent_ng_container_1_Template","customerSelect_r3","includeNoteInput","SelectCustomerDialogComponent_clr_tabs_2_ng_template_5_ng_container_2_Template","SelectCustomerDialogComponent_clr_tabs_2_ng_template_5_Template","SelectCustomerDialogComponent_clr_tabs_2_clr_tab_6_ng_template_4_Template","customerForm","SelectCustomerDialogComponent_clr_tabs_2_clr_tab_6_Template","SelectCustomerDialogComponent_clr_tabs_2_Template","_r4","canCreateNew","SelectCustomerDialogComponent_ng_template_3_ng_template_2_Template","item_r7","firstName","lastName","emailAddress","SelectCustomerDialogComponent_ng_template_3_ng_template_3_Template","item_r8","SelectCustomerDialogComponent_ng_template_3_Template","selectedCustomer","customers$","trackByFn","isLoading","input$","SelectCustomerDialogComponent_ng_template_5_Template","_r9","SelectShippingMethodDialogComponent_ng_template_0_Template","SelectShippingMethodDialogComponent_vdr_radio_card_2_vdr_object_tree_14_Template","quote_r1","metadata","SelectShippingMethodDialogComponent_vdr_radio_card_2_Template","price","priceWithTax","SelectShippingMethodDialogComponent_ng_template_3_Template","selectedMethod","_c0","a0","state","OrderStateSelectDialogComponent_ng_template_0_Template","OrderStateSelectDialogComponent_option_6_Template","state_r1","OrderStateSelectDialogComponent_ng_template_7_button_0_Template","OrderStateSelectDialogComponent_ng_template_7_Template","cancellable","selectedState","OrderCustomFieldsCardComponent_div_0_button_8_Template","editable","OrderCustomFieldsCardComponent_div_0_button_9_Template","onUpdateClick","customFieldForm","OrderCustomFieldsCardComponent_div_0_button_10_Template","onCancelClick","OrderCustomFieldsCardComponent_div_0_Template","customFieldsConfig","_c1","a1","total","count","_c2","LineFulfillmentComponent_vdr_dropdown_0_clr_icon_2_Template","LineFulfillmentComponent_vdr_dropdown_0_clr_icon_3_Template","LineFulfillmentComponent_vdr_dropdown_0_clr_icon_4_Template","LineFulfillmentComponent_vdr_dropdown_0_label_6_Template","LineFulfillmentComponent_vdr_dropdown_0_label_7_Template","line","fulfilledCount","LineFulfillmentComponent_vdr_dropdown_0_label_8_Template","LineFulfillmentComponent_vdr_dropdown_0_div_9_vdr_labeled_data_12_Template","item_r2","fulfillment","trackingCode","LineFulfillmentComponent_vdr_dropdown_0_div_9_Template","createdAt","method","LineFulfillmentComponent_vdr_dropdown_0_Template","fulfillmentStatus","fulfillments","LineRefundsComponent_span_0_Template","getRefundedCount","_c3","_c4","_c5","a2","a3","itemsPerPage","currentPage","totalItems","_c6","rowItem","_c7","index","OrderDataTableComponent_th_6_Template","onToggleAllClick","selectionManager","areAllCurrentItemsSelected","OrderDataTableComponent_th_7_div_5_clr_icon_2_Template","OrderDataTableComponent_th_7_div_5_clr_icon_3_Template","OrderDataTableComponent_th_7_div_5_clr_icon_4_Template","OrderDataTableComponent_th_7_div_5_div_5_Template","sort_r4","sortOrder","OrderDataTableComponent_th_7_div_5_Template","toggleSortOrder","OrderDataTableComponent_th_7_Template","column_r5","expand","align","heading","sort","OrderDataTableComponent_tr_12_ng_container_6_Template","OrderDataTableComponent_tr_12_ng_container_7_Template","OrderDataTableComponent_tr_12_ng_container_8_vdr_data_table_filters_2_Template","activeFilter_r7","filters","OrderDataTableComponent_tr_12_ng_container_8_vdr_data_table_filters_3_Template","OrderDataTableComponent_tr_12_ng_container_8_Template","activeFilters","OrderDataTableComponent_tr_12_Template","toggleSearchFilterRow","showSearchFilterRow","visibleSortedColumns","searchComponent","template","customSearchTemplate","OrderDataTableComponent_tr_14_td_1_Template","_r8","item_r9","onRowClick","ctx_r9","i_r11","activeIndex","isSelected","OrderDataTableComponent_tr_14_td_2_ng_container_2_ng_container_1_Template","OrderDataTableComponent_tr_14_td_2_ng_container_2_Template","componentConfig_r12","config","component","injector","OrderDataTableComponent_tr_14_td_2_ng_template_3_ng_container_0_Template","OrderDataTableComponent_tr_14_td_2_ng_template_3_Template","column_r13","OrderDataTableComponent_tr_14_td_2_Template","defaultComponent_r14","customComponents","get","OrderDataTableComponent_tr_14_Template","OrderDataTableComponent_tr_17_Template","OrderDataTableComponent_tr_18_Template","surcharge_r15","description","OrderDataTableComponent_ng_container_19_tr_1_vdr_chip_4_Template","couponCode_r16","OrderDataTableComponent_ng_container_19_tr_1_Template","discount_r17","getPromotionLink","getCouponCodeForAdjustment","amountWithTax","amount","OrderDataTableComponent_ng_container_19_Template","type","OrderDataTableComponent_vdr_chip_38_Template","shippingLine_r18","shippingMethod","OrderTableComponent_ng_template_3_Template","line_r1","OrderTableComponent_ng_template_6_Template","OrderTableComponent_ng_template_9_Template","line_r3","updatedAt","OrderTableComponent_ng_template_12_img_1_Template","asset_r4","OrderTableComponent_ng_template_12_ng_template_2_Template","OrderTableComponent_ng_template_12_Template","line_r5","imagePlaceholder_r6","OrderTableComponent_ng_template_15_Template","line_r7","OrderTableComponent_ng_template_18_Template","line_r8","OrderTableComponent_ng_template_21_Template","line_r9","unitPrice","OrderTableComponent_ng_template_24_ng_container_0_div_2_Template","line_r11","orderPlacedQuantity","OrderTableComponent_ng_template_24_ng_container_0_Template","OrderTableComponent_ng_template_24_ng_template_1_Template","_r12","qtyInput_r13","draftInputBlur","valueAsNumber","remove","emit","lineId","OrderTableComponent_ng_template_24_Template","draft_r14","isDraft","payments","OrderTableComponent_vdr_dt2_custom_field_column_25_Template","customField_r15","OrderTableComponent_ng_template_28_ng_container_7_vdr_dropdown_1_div_5_Template","discount_r16","OrderTableComponent_ng_template_28_ng_container_7_vdr_dropdown_1_Template","discounts_r17","OrderTableComponent_ng_template_28_ng_container_7_Template","OrderTableComponent_ng_template_28_Template","line_r18","linePriceWithTax","linePrice","getLineDiscounts","DraftOrderVariantSelectorComponent_div_6_ng_container_30_div_1_Template","field_r4","customFieldsFormGroup","DraftOrderVariantSelectorComponent_div_6_ng_container_30_Template","orderLineCustomFields","DraftOrderVariantSelectorComponent_div_6_Template","selectedVariant_r3","addItemClick","product","stockOnHand","stockAllocated","DraftOrderDetailComponent_vdr_action_bar_1_Template","completeOrder","deleteOrder","order_r3","customer","lines","shippingLines","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_template_4_clr_icon_0_Template","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_template_4_clr_icon_1_Template","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_template_4_Template","order_r5","DraftOrderDetailComponent_vdr_page_detail_layout_3_vdr_customer_label_5_Template","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_template_11_clr_icon_0_Template","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_template_11_clr_icon_1_Template","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_template_11_Template","billingAddress","streetLine1","DraftOrderDetailComponent_vdr_page_detail_layout_3_vdr_formatted_address_12_Template","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_template_18_clr_icon_0_Template","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_template_18_clr_icon_1_Template","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_template_18_Template","shippingAddress","DraftOrderDetailComponent_vdr_page_detail_layout_3_vdr_formatted_address_19_Template","DraftOrderDetailComponent_vdr_page_detail_layout_3_div_23_Template","shippingLine_r6","DraftOrderDetailComponent_vdr_page_detail_layout_3_button_28_Template","displayCouponCodeInput","DraftOrderDetailComponent_vdr_page_detail_layout_3_div_29_Template","applyCouponCode","removeCouponCode","couponCodes","DraftOrderDetailComponent_vdr_page_detail_layout_3_vdr_page_entity_info_31_Template","entity_r9","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_container_39_tr_17_Template","row_r10","taxRate","taxBase","taxTotal","DraftOrderDetailComponent_vdr_page_detail_layout_3_ng_container_39_Template","taxSummary","DraftOrderDetailComponent_vdr_page_detail_layout_3_Template","setCustomer","setBillingAddress","setShippingAddress","setShippingMethod","addItemToOrder","adjustOrderLine","removeOrderLine","updateCustomFields","entity$","detailForm","customFields","FulfillOrderDialogComponent_ng_template_0_Template","FulfillOrderDialogComponent_tr_22_img_2_Template","FulfillOrderDialogComponent_tr_22_input_12_Template","fulfillmentQuantities","fulfillCount","getUnfulfilledCount","max","FulfillOrderDialogComponent_tr_22_Template","FulfillOrderDialogComponent_ng_template_33_Template","canSubmit","SimpleItemListComponent_li_2_div_1_Template","SimpleItemListComponent_li_2_clr_icon_2_Template","SimpleItemListComponent_li_2_Template","FulfillmentDetailComponent_vdr_labeled_data_7_Template","FulfillmentDetailComponent_ng_container_11_vdr_custom_field_control_1_Template","customField_r2","customFieldFormGroup","FulfillmentDetailComponent_ng_container_11_Template","FulfillmentStateLabelComponent_clr_icon_2_Template","FulfillmentCardComponent_vdr_fulfillment_detail_8_Template","FulfillmentCardComponent_div_9_ng_container_1_Template","suggestedState_r3","transitionState","FulfillmentCardComponent_div_9_ng_container_6_ng_container_2_Template","nextState_r5","FulfillmentCardComponent_div_9_ng_container_6_ng_template_3_Template","FulfillmentCardComponent_div_9_ng_container_6_Template","cancel_r6","FulfillmentCardComponent_div_9_Template","nextSuggestedState","nextOtherStates","ModificationDetailComponent_vdr_labeled_data_3_Template","modification","ModificationDetailComponent_vdr_labeled_data_4_Template","tmp_3_0","surcharge_r2","getSurcharge","ModificationDetailComponent_vdr_labeled_data_5_Template","getAddedItems","ModificationDetailComponent_vdr_labeled_data_6_Template","getRemovedItems","ModificationDetailComponent_vdr_labeled_data_7_Template","getModifiedItems","OrderProcessNodeComponent_div_7_Template","cancelledState","OrderProcessGraphComponent_ng_container_0_Template","state_r2","onMouseOver","onMouseOut","i_r4","activeState$","OrderProcessGraphComponent_ng_container_1_Template","edge_r5","from","to","OrderProcessGraphDialogComponent_ng_template_0_Template","PaymentForRefundSelectorComponent_vdr_card_0_ng_template_2_Template","payment_r2","selected","paymentSelected","payment","refundablePayments","PaymentForRefundSelectorComponent_vdr_card_0_Template","transactionId","refundableAmount","amountToRefundControl","_c8","_c9","min","RefundOrderDialogComponent_ng_template_0_Template","RefundOrderDialogComponent_ng_template_5_Template","RefundOrderDialogComponent_ng_template_8_Template","RefundOrderDialogComponent_ng_template_11_Template","RefundOrderDialogComponent_ng_template_14_img_1_Template","RefundOrderDialogComponent_ng_template_14_ng_template_2_Template","RefundOrderDialogComponent_ng_template_14_Template","RefundOrderDialogComponent_ng_template_17_Template","RefundOrderDialogComponent_ng_template_20_Template","RefundOrderDialogComponent_ng_template_23_Template","RefundOrderDialogComponent_ng_template_26_ng_container_2_vdr_dropdown_1_div_5_Template","discount_r11","line_r12","RefundOrderDialogComponent_ng_template_26_ng_container_2_vdr_dropdown_1_Template","discounts_r13","RefundOrderDialogComponent_ng_template_26_ng_container_2_Template","RefundOrderDialogComponent_ng_template_26_Template","discounts","RefundOrderDialogComponent_ng_template_29_Template","line_r14","RefundOrderDialogComponent_ng_template_32_input_0_Template","_r15","line_r16","onRefundQuantityChange","RefundOrderDialogComponent_ng_template_32_Template","lineCanBeRefundedOrCancelled","RefundOrderDialogComponent_ng_template_35_input_2_Template","_r17","RefundOrderDialogComponent_ng_template_35_Template","RefundOrderDialogComponent_label_39_Template","_r19","shippingLine_r20","toggleShippingRefund","discountedPriceWithTax","RefundOrderDialogComponent_ng_template_49_clr_alert_2_Template","totalRefundableAmount","RefundOrderDialogComponent_ng_template_49_clr_alert_3_Template","RefundOrderDialogComponent_ng_template_49_clr_alert_4_Template","RefundOrderDialogComponent_ng_template_49_Template","_r21","refundTotal","amountToRefundTotal","_c10","SettleRefundDialogComponent_ng_template_0_Template","SettleRefundDialogComponent_ng_template_9_Template","PaymentStateLabelComponent_clr_icon_2_Template","RefundStateLabelComponent_clr_icon_2_Template","PaymentDetailComponent_vdr_labeled_data_7_Template","errorMessage","PaymentDetailComponent_vdr_labeled_data_8_Template","OrderPaymentCardComponent_ng_container_5_Template","OrderPaymentCardComponent_ng_container_10_vdr_labeled_data_17_Template","refund_r2","OrderPaymentCardComponent_ng_container_10_vdr_labeled_data_18_Template","OrderPaymentCardComponent_ng_container_10_vdr_labeled_data_19_Template","OrderPaymentCardComponent_ng_container_10_div_20_Template","settleRefund","OrderPaymentCardComponent_ng_container_10_Template","refundHasMetadata","OrderPaymentCardComponent_div_11_button_1_Template","settlePayment","OrderPaymentCardComponent_div_11_ng_container_6_ng_container_2_Template","nextState_r6","OrderPaymentCardComponent_div_11_ng_container_6_ng_template_3_Template","OrderPaymentCardComponent_div_11_ng_container_6_Template","transitionPaymentState","cancel_r7","OrderPaymentCardComponent_div_11_Template","nextStates","includes","_c11","_c12","_c13","_c14","_c15","newCustomerName","_c16","OrderHistoryComponent_span_13_Template","OrderHistoryComponent_span_14_Template","OrderHistoryComponent_ng_container_15_vdr_order_history_entry_host_1_Template","expanded","entry_r3","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_2_div_1_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_2_div_2_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_2_ng_template_3_Template","data","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_2_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_3_div_4_vdr_chip_6_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_3_div_4_vdr_chip_7_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_3_div_4_Template","modification_r5","priceChange","isSettled","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_3_Template","getModification","modificationId","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_4_ng_container_1_vdr_chip_5_Template","payment_r6","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_4_ng_container_1_vdr_history_entry_detail_6_Template","payment_r7","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_4_ng_container_1_Template","getPayment","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_4_ng_template_2_Template","tmp_7_0","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_4_Template","regularPaymentTransition_r8","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_5_ng_container_1_ng_container_1_Template","refund_r9","getCancelledItems","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_5_ng_container_1_Template","getRefund","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_5_ng_template_2_Template","refundId","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_5_Template","regularRefundTransition_r10","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_6_vdr_history_entry_detail_3_Template","items_r11","shippingCancelled","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_6_Template","getCancelledQuantity","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_7_vdr_history_entry_detail_3_Template","fulfillment_r12","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_7_Template","getFulfillment","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_8_ng_container_1_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_8_ng_container_2_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_8_ng_container_3_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_8_vdr_history_entry_detail_4_Template","fulfillment_r13","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_8_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_9_span_3_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_9_span_4_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_9_Template","_r14","updateNote","deleteNote","isPublic","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_10_Template","promotionId","couponCode","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_11_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_12_a_11_Template","previousCustomerId","previousCustomerName","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_12_a_14_Template","newCustomerId","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_12_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_13_vdr_history_entry_detail_4_Template","OrderHistoryComponent_ng_container_15_ng_template_2_ng_container_13_Template","OrderHistoryComponent_ng_container_15_ng_template_2_Template","getDisplayType","getTimelineIcon","getName","isFeatured","ORDER_STATE_TRANSITION","ORDER_MODIFIED","ORDER_PAYMENT_TRANSITION","ORDER_REFUND_TRANSITION","ORDER_CANCELLATION","ORDER_FULFILLMENT","ORDER_FULFILLMENT_TRANSITION","ORDER_NOTE","ORDER_COUPON_APPLIED","ORDER_COUPON_REMOVED","ORDER_CUSTOMER_UPDATED","OrderHistoryComponent_ng_container_15_Template","defaultComponents_r15","hasCustomComponent","_c17","SellerOrdersCardComponent_div_3_vdr_labeled_data_7_Template","seller_r1","SellerOrdersCardComponent_div_3_vdr_labeled_data_8_Template","order_r2","totalWithTax","SellerOrdersCardComponent_div_3_Template","getSeller","_c18","OrderDetailComponent_vdr_action_bar_1_button_4_Template","addManualPayment","outstandingPaymentAmount","OrderDetailComponent_vdr_action_bar_1_button_5_Template","transitionToState","OrderDetailComponent_vdr_action_bar_1_button_6_Template","fulfillOrder","canAddFulfillment","OrderDetailComponent_vdr_action_bar_1_ng_container_8_Template","transitionToModifying","OrderDetailComponent_vdr_action_bar_1_button_9_ng_container_2_Template","OrderDetailComponent_vdr_action_bar_1_button_9_ng_template_3_Template","OrderDetailComponent_vdr_action_bar_1_button_9_Template","cancelOrRefund","cancelOnly_r9","orderHasSettledPayments","OrderDetailComponent_vdr_action_bar_1_ng_container_10_button_2_Template","_r10","nextState_r11","OrderDetailComponent_vdr_action_bar_1_ng_container_10_Template","nextStates$","OrderDetailComponent_vdr_action_bar_1_Template","manuallyTransitionToState","tmp_8_0","hasUnsettledModifications","OrderDetailComponent_vdr_page_detail_layout_3_ng_template_4_Template","_r13","openStateDiagram","OrderDetailComponent_vdr_page_detail_layout_3_ng_template_8_button_0_Template","setOrderCustomer","OrderDetailComponent_vdr_page_detail_layout_3_ng_template_8_Template","OrderDetailComponent_vdr_page_detail_layout_3_vdr_labeled_data_10_Template","order_r15","OrderDetailComponent_vdr_page_detail_layout_3_vdr_labeled_data_11_Template","OrderDetailComponent_vdr_page_detail_layout_3_vdr_card_12_vdr_order_payment_card_2_Template","_r16","payment_r17","OrderDetailComponent_vdr_page_detail_layout_3_vdr_card_12_Template","OrderDetailComponent_vdr_page_detail_layout_3_vdr_card_13_vdr_fulfillment_card_1_Template","_r18","fulfillment_r19","transitionFulfillment","OrderDetailComponent_vdr_page_detail_layout_3_vdr_card_13_Template","OrderDetailComponent_vdr_page_detail_layout_3_vdr_page_entity_info_15_Template","entity_r20","OrderDetailComponent_vdr_page_detail_layout_3_vdr_seller_orders_card_18_Template","OrderDetailComponent_vdr_page_detail_layout_3_tr_39_Template","row_r21","OrderDetailComponent_vdr_page_detail_layout_3_vdr_card_40_Template","_r22","OrderDetailComponent_vdr_page_detail_layout_3_Template","addNote","getOrderAddressLines","sellerOrders","history$","OrderModificationSummaryComponent_vdr_labeled_data_0_div_2_Template","OrderModificationSummaryComponent_vdr_labeled_data_0_Template","modifyOrderInput","adjustOrderLines","adjustedLines","OrderModificationSummaryComponent_vdr_labeled_data_1_div_2_Template","item_r3","OrderModificationSummaryComponent_vdr_labeled_data_1_Template","addItems","addedLines","OrderModificationSummaryComponent_vdr_labeled_data_2_div_2_Template","surcharge_r4","orderSnapshot","OrderModificationSummaryComponent_vdr_labeled_data_2_Template","surcharges","OrderModificationSummaryComponent_vdr_labeled_data_3_Template","updatedShippingFields_r5","OrderModificationSummaryComponent_vdr_labeled_data_4_Template","updatedBillingFields_r6","OrderModificationSummaryComponent_vdr_labeled_data_5_div_2_Template","change_r7","OrderModificationSummaryComponent_vdr_labeled_data_5_Template","couponCodeChanges","OrderModificationSummaryComponent_ng_container_6_vdr_labeled_data_1_div_2_Template","change_r8","OrderModificationSummaryComponent_ng_container_6_vdr_labeled_data_1_Template","updatedShippingMethods_r9","OrderModificationSummaryComponent_ng_container_6_Template","OrderEditsPreviewDialogComponent_ng_template_0_Template","OrderEditsPreviewDialogComponent_vdr_payment_for_refund_selector_4_Template","onPaymentSelected","OrderEditsPreviewDialogComponent_vdr_form_field_12_Template","refundNote","OrderEditsPreviewDialogComponent_ng_template_13_clr_alert_2_Template","OrderEditsPreviewDialogComponent_ng_template_13_Template","priceDifference","refundsCoverDifference","_c19","rate","OrderEditorComponent_vdr_action_bar_1_Template","transitionToPriorState","OrderEditorComponent_vdr_page_detail_layout_3_div_5_Template","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_23_Template","editingShippingAddress","OrderEditorComponent_vdr_page_detail_layout_3_vdr_formatted_address_24_Template","shippingAddressForm","value","OrderEditorComponent_vdr_page_detail_layout_3_vdr_address_form_25_Template","addressCustomFields","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_28_Template","editingBillingAddress","OrderEditorComponent_vdr_page_detail_layout_3_vdr_formatted_address_29_Template","billingAddressForm","OrderEditorComponent_vdr_page_detail_layout_3_vdr_address_form_30_Template","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_36_Template","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_39_Template","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_42_Template","line_r10","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_45_img_1_Template","asset_r11","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_45_ng_template_2_Template","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_45_Template","imagePlaceholder_r13","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_48_Template","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_51_Template","line_r15","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_54_Template","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_57_button_1_Template","removeAddedItem","OrderEditorComponent_vdr_page_detail_layout_3_ng_template_57_Template","updateLineQuantity","target","getInitialLineQuantity","isAddedLine","OrderEditorComponent_vdr_page_detail_layout_3_vdr_dt2_column_58_ng_template_3_Template","index_r20","customField_r21","orderLineCustomFieldsFormArray","at","OrderEditorComponent_vdr_page_detail_layout_3_vdr_dt2_column_58_Template","uiLanguage$","OrderEditorComponent_vdr_page_detail_layout_3_div_64_img_1_Template","asset_r22","OrderEditorComponent_vdr_page_detail_layout_3_div_64_Template","addItemSelectedVariant","productAsset","productVariantName","getSelectedItemPrice","OrderEditorComponent_vdr_page_detail_layout_3_div_65_ng_container_1_Template","customField_r23","addItemCustomFieldsForm","OrderEditorComponent_vdr_page_detail_layout_3_div_65_Template","OrderEditorComponent_vdr_page_detail_layout_3_button_68_Template","_r24","OrderEditorComponent_vdr_page_detail_layout_3_div_71_ng_container_1_Template","_r25","shippingLine_r26","details_r27","OrderEditorComponent_vdr_page_detail_layout_3_div_71_Template","getShippingLineDetails","OrderEditorComponent_vdr_page_detail_layout_3_Template","recalculateShipping","previewAndModify","addSurcharge","surchargeForm","tmp_55_0","tmp_58_0","couponCodesControl","updatedShippingMethods","hasModifications","concat","undefined","_c20","_c21","_c22","_c23","OrderListComponent_ng_container_4_a_1_Template","OrderListComponent_ng_container_4_Template","OrderListComponent_ng_template_16_Template","order_r1","OrderListComponent_ng_template_19_Template","OrderListComponent_ng_template_22_Template","OrderListComponent_ng_template_25_Template","stopPropagation","OrderListComponent_ng_template_28_vdr_chip_0_Template","OrderListComponent_ng_template_28_vdr_chip_1_Template","OrderListComponent_ng_template_28_vdr_chip_2_Template","OrderListComponent_ng_template_28_Template","order_r6","ctx_r6","OrderType","Regular","Aggregate","Seller","OrderListComponent_ng_template_31_Template","order_r8","OrderListComponent_ng_template_34_Template","order_r9","OrderListComponent_ng_template_37_Template","order_r10","OrderListComponent_ng_template_40_Template","order_r11","orderPlacedAt","OrderListComponent_ng_template_43_Template","order_r12","getShippingNames","OrderListComponent_vdr_dt2_custom_field_column_44_Template","customField_r13","sorts","RefundDetailComponent_vdr_labeled_data_4_Template","refund","getRefundablePayments","filter","p","map","summate","refunds","r","FormControl","nonNullable","validators","Validators","gql","AddManualPaymentDialogComponent","constructor","dataService","this","UntypedFormGroup","UntypedFormControl","required","ngOnInit","paymentMethods$","query","GetAddManualPaymentMethodListDocument","options","take","mapSingle","paymentMethods","items","formValue","resolveWith","ɵfac","t","i1","ɵcmp","selectors","decls","vars","consts","dependencies","i2","i5","i2$1","i4","styles","changeDetection","CancelOrderDialogComponent","Object","values","reduce","sum","n","i18nService","reasons","getAppConfig","cancellationReasons","marker","translate","result","entries","quantityInOrder","find","orderId","getLineInputs","cancelShipping","orderLineId","l","i3","GET_COUPON_CODE_SELECTOR_PROMOTION_LIST","CouponCodeSelectorComponent","addCouponCode","EventEmitter","couponCodeInput$","Subject","availableCouponCodes$","pipe","debounceTime","distinctUntilChanged","switchMap","term","GetCouponCodeSelectorPromotionListDocument","skip","contains","single$","promotions","startWith","control","inputs","outputs","SelectAddressDialogComponent","formBuilder","group","fullName","currentAddress","company","streetLine2","city","province","postalCode","countryCode","phoneNumber","addresses$","GetCustomerAddressesDocument","addresses","tap","a","of","settings","getAvailableCountries","countries","pick","country","valid","SelectCustomerDialogComponent","email","getCustomerList","mapStream","customers","catchError","SelectShippingMethodDialogComponent","currentSelectionId","eligibleShippingMethods","m","methodIdFn","OrderStateSelectDialogComponent","message","OrderTransitionService","modalService","notificationService","transitionToPreModifyingState","getPreModifyingState","manualTransitionOptions","retry","transitionToStateOrThrow","err","fromComponent","locals","closable","size","EMPTY","Error","retryWhen","notifier","operate","source","subscriber","innerSub","errors$","syncResub","subscribeForRetryWhen","subscribe","createOperatorSubscriber","innerFrom","next","unsubscribe","errors","delay","getOrderHistory","eq","HistoryEntryType","SortOrder","DESC","history","i","transitionOrderToState","__typename","error","transitionError","ɵprov","token","factory","providedIn","OrderCustomFieldsCardComponent","customFieldValues","updateClick","field","addControl","markAsPristine","dirty","dialog","buttons","label","returnValue","reset","LineFulfillmentComponent","ngOnChanges","changes","getDeliveredCount","getFulfillmentStatus","getFulfillments","fulfillmentLines","fulfillmentLine","lineQuantity","allOrderFulfillments","f","fulfillmentId","notNullOrUndefined","orderState","features","LineRefundsComponent","all","i3$1","OrderTotalColumnComponent","DataTable2ColumnComponent","super","arguments","orderable","ɵOrderTotalColumnComponent_BaseFactory","exportAs","encapsulation","OrderDataTableComponent","DataTable2Component","allColumns","columns","customFieldColumns","totalColumns","promotion","adjustmentSource","split","promotionAdjustment","shippingLine","join","ɵOrderDataTableComponent_BaseFactory","contentQueries","dirIndex","_t","ngContentSelectors","onColumnReorder","onColumnsReset","disableSelect","selection","sortedColumns","subTotalWithTax","subTotal","shippingWithTax","shipping","i1$1","i5$1","OrderTableComponent","adjust","orderLineCustomFieldsVisible","customFieldsForLine","visibleOrderLineCustomFields","showElided","getLineCustomFields","toggleOrderLineCustomFields","AdjustmentType","PROMOTION","formGroup","DraftOrderVariantSelectorComponent","addItem","selectedVariantId$","selectedVariant$","getProductVariant","customField","selectedVariant","productVariantId","DraftOrderDetailComponent","TypedBaseDetailComponent","changeDetector","orderTransitionService","getCustomFieldConfig","fetchHistory","init","eligibleShippingMethods$","getDraftOrderEligibleShippingMethods","eligibleShippingMethodsForDraftOrder","ngOnDestroy","destroy","event","addItemToDraftOrder","adjustDraftOrderLine","removeDraftOrderLine","orderAddress","val","hasId","setCustomerForDraftOrder","input","setDraftOrderShippingAddress","setDraftOrderBillingAddress","applyCouponCodeToDraftOrder","removeCouponCodeFromDraftOrder","combineLatest","methods","setDraftOrderShippingMethod","customFieldsValue","updateOrderCustomFields","deleteDraftOrder","DeletionResult","DELETED","success","entity","router","navigate","setFormValues","FulfillOrderDialogComponent","fulfillmentHandlerControl","getGlobalSettings","globalSettings","getFulfillableCount","trackInventory","markForCheck","getShippingMethodOperations","fulfillmentHandlers","handlers","fulfillmentHandlerDef","h","fulfillmentHandlerCode","fulfillmentHandler","configurableDefinitionToInstance","patchValue","globalTrackInventory","effectiveTracInventory","GlobalFlag","INHERIT","TRUE","unfulfilledCount","Math","fulfilled","flat","row","totalCount","fulfillmentQuantityIsValid","every","configurableOperationValueIsValid","handler","toConfigurableOperationInput","SimpleItemListComponent","FulfillmentDetailComponent","serverConfigService","customFieldConfig","getCustomFieldsFor","buildCustomFieldsFormGroup","fieldDef","customFieldIsObject","Array","isArray","isObject","FulfillmentStateLabelComponent","chipColorType","FulfillmentCardComponent","namedStateOrDefault","targetState","s","suggested","ModificationDetailComponent","addedItems","Map","removedItems","modifiedItems","Set","added","removed","modified","getModifiedLines","modificationLine","add","set","NODE_HEIGHT","OrderProcessNodeComponent","elementRef","active$","BehaviorSubject","activeTarget$","isCancellable","node","getPos","origin","nativeElement","getBoundingClientRect","nodeHeight","querySelector","height","x","y","getStyle","pos","OrderProcessEdgeComponent","asObservable","direction","startPos","endPos","dX","abs","dY","sqrt","transform","OrderProcessGraphComponent","setActiveState$","nodes","edges","outerHeight","initialState","populateNodes","ngAfterViewInit","setTimeout","populateEdges","stateName","getNodeFor","nodeComponents","stateNodeMap","states","stateNode","targets","targetNode","push","nodeCmp","toCmp","viewQuery","hostVars","hostBindings","OrderProcessGraphDialogComponent","getOrderProcessStates","activeState","PaymentForRefundSelectorComponent","RefundOrderDialogComponent","refundShippingLineIds","manuallySetRefundTotal","refundLine","updateRefundTotal","itemTotal","refundCount","proratedUnitPriceWithTax","shippingTotal","refundsAllocated","amountToRefund","setValue","indexOf","splice","selectionLine","previousQuantity","outstandingRefundAmount","isRefunding","isCancelling","refundLines","getOrderLineInput","cancelLines","rp","paymentId","adjustment","filterFn","SettleRefundDialogComponent","PaymentStateLabelComponent","RefundStateLabelComponent","PaymentDetailComponent","OrderPaymentCardComponent","keys","OrderHistoryEntryHostComponent","historyEntryComponentService","expandClick","componentType","getComponent","entry","componentRef","portalRef","createComponent","instance","ViewContainerRef","first","getIconShape","OrderHistoryComponent","noteIsPrivate","cancellationLines","itemMap","cancellationLine","modifications","administrator","addNoteToOrder","GET_SELLER_ORDERS","SellerOrdersCardComponent","channelService","sellerOrders$","channels","channel","DEFAULT_CHANNEL_CODE","seller","navigateToSellerOrder","ORDER_DETAIL_QUERY","ORDER_DETAIL_FRAGMENT","SET_ORDER_CUSTOMER_MUTATION","OrderDetailComponent","FormGroup","getCustomFieldsDefaults","defaultStates","relativeTo","route","isExisting","mutate","SetOrderCustomerDocument","refetchOrder","getOrder","cancelPayment","paymentErrorMessage","transitionPaymentToState","allFulfillmentLines","allItemsFulfilled","getOutstandingModificationAmount","paymentIsValid","amountCovered","refundsTotal","priorState","addManualPaymentToOrder","createFulfillment","mapTo","addFulfillmentToOrder","fulfillmentHandlerError","JSON","stringify","assertNever","transitionFulfillmentToState","isRefundable","refundOrder","cancelOrder","EditNoteDialogComponent","displayPrivacyControls","updateOrderNote","noteId","isPrivate","body","res","deleteOrderNote","forkJoin","results","setCustomFieldFormValues","OrderModificationSummaryComponent","delta","getModifiedFields","controls","key","getUpdatedShippingMethodLines","previousMethod","originalCodes","newCodes","c","OrderEditResultType","Refund","Payment","PriceUnchanged","Cancel","OrderEditsPreviewDialogComponent","forEach","addValidators","OrderEditorComponent","changeDetectorRef","dryRun","updateShippingAddress","updateBillingAddress","minLength","priceIncludesTax","taxDescription","addedVariants","snapshot","paramMap","createOrderSnapshot","addAddressCustomFieldsFormGroup","UntypedFormArray","valueChanges","takeUntil","destroy$","modifyRow","addItemCustomFieldsFormArray","shareReplay","previousState","client","uiState","stream$","language","getSinglePriceValue","variantInfo","getIdForAddedItem","isLineModified","adjustedLine","addedLine","startsWith","updateAddedItemQuantity","trackByProductVariantId","isMatchingAddItemRow","updatedMethod","shippingLineId","currentShippingMethod","getSurchargePrices","surcharge","round","removeSurcharge","transformRelationCustomFieldInputs","simpleDeepClone","shippingMethodIds","modifyOrder","wetRunInput","nextState","parentFormGroup","address","addressCustomFieldsFormGroup","customFieldDef","languageCode","OrderListComponent","TypedBaseListComponent","dataTableListId","orderStates","createFilterCollection","addIdFilter","addDateFilters","addFilter","kind","filterField","inputType","getOrderStateTranslationToken","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSort","addCustomFieldSorts","canCreateDraftOrder","activeChannelIsDefaultChannel","configure","document","GetOrderListDocument","getItems","orders","setVariables","createQueryOptions","searchTermControl","refreshListOnChanges","isDefaultChannel$","defaultChannelIsActive$","isDefault","searchTerm","filterInput","createFilterInput","customerLastName","filterOperator","LogicalOperator","OR","AND","createSortInput","setPageNumber","setItemsPerPage","setVisibleColumns","items$","itemsPerPage$","totalItems$","currentPage$","RefundDetailComponent","GET_CUSTOMER_ADDRESSES","ADDRESS_FRAGMENT","GET_ORDER_STATE","OrderGuard","canActivate","url","isModifying","createDraftOrder","parseUrl","createRoutes","pageService","path","PageComponent","pathMatch","locationId","breadcrumb","children","getPageTabRoutes","link","OrderModule","hasRegisteredTabsAndBulkActions","registerPageTab","priority","location","tab","detailComponentWithResolver","OrderDetailQueryDocument","entityKey","getBreadcrumbs","aggregateOrder","ɵmod","ɵinj","providers","provide","ROUTES","useFactory","multi","deps","PageService","imports","SharedModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-order.mjs","../node_modules/rxjs/dist/esm/internal/operators/retryWhen.js"],"sourcesContent":["import * as i2 from '@angular/forms';\nimport { FormControl, Validators, UntypedFormGroup, UntypedFormControl, FormGroup, UntypedFormArray } from '@angular/forms';\nimport { summate, notNullOrUndefined, isObject, assertNever } from '@vendure/common/lib/shared-utils';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, EventEmitter, Input, Output, Injectable, ContentChildren, ViewChildren, HostBinding, ViewContainerRef, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { GetAddManualPaymentMethodListDocument, getAppConfig, GetCouponCodeSelectorPromotionListDocument, GetCustomerAddressesDocument, HistoryEntryType, SortOrder, DataTable2ColumnComponent, DataTable2Component, AdjustmentType, TypedBaseDetailComponent, DeletionResult, configurableDefinitionToInstance, GlobalFlag, configurableOperationValueIsValid, toConfigurableOperationInput, ORDER_DETAIL_FRAGMENT, getCustomFieldsDefaults, SetOrderCustomerDocument, EditNoteDialogComponent, transformRelationCustomFieldInputs, TypedBaseListComponent, OrderType, getOrderStateTranslationToken, GetOrderListDocument, LogicalOperator, ADDRESS_FRAGMENT, PageComponent, detailComponentWithResolver, OrderDetailQueryDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport * as i5 from '@ng-select/ng-select';\nimport * as i2$1 from '@angular/common';\nimport * as i4 from '@ngx-translate/core';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport * as i3 from '@clr/angular';\nimport { Subject, concat, of, EMPTY, combineLatest, BehaviorSubject, forkJoin } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, map, startWith, tap, catchError, retryWhen, delay, take, mapTo, takeUntil, shareReplay } from 'rxjs/operators';\nimport { pick } from '@vendure/common/lib/pick';\nimport * as i1$1 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport * as i5$1 from 'ngx-pagination';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';\n\nfunction getRefundablePayments(payments) {\n    const settledPayments = (payments || []).filter(p => p.state === 'Settled');\n    return settledPayments.map((payment, index) => {\n        const refundableAmount = payment.amount -\n            summate(payment.refunds.filter(r => r.state !== 'Failed'), 'total');\n        return {\n            ...payment,\n            refundableAmount,\n            amountToRefundControl: new FormControl(0, {\n                nonNullable: true,\n                validators: [Validators.min(0), Validators.max(refundableAmount)],\n            }),\n            selected: index === 0,\n        };\n    });\n}\n\nconst GET_PAYMENT_METHODS_FOR_MANUAL_ADD = gql `\r\n    query GetAddManualPaymentMethodList($options: PaymentMethodListOptions!) {\r\n        paymentMethods(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                code\r\n                description\r\n                enabled\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n`;\nclass AddManualPaymentDialogComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.form = new UntypedFormGroup({\n            method: new UntypedFormControl('', Validators.required),\n            transactionId: new UntypedFormControl('', Validators.required),\n        });\n    }\n    ngOnInit() {\n        this.paymentMethods$ = this.dataService\n            .query(GetAddManualPaymentMethodListDocument, {\n            options: {\n                take: 999,\n            },\n        })\n            .mapSingle(data => data.paymentMethods.items);\n    }\n    submit() {\n        const formValue = this.form.value;\n        this.resolveWith({\n            method: formValue.method,\n            transactionId: formValue.transactionId,\n        });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AddManualPaymentDialogComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: AddManualPaymentDialogComponent, selector: \"vdr-add-manual-payment-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'order.add-payment-to-order' | translate }}</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'order.payment-method' | translate\\\" for=\\\"method\\\">\\r\\n        <ng-select\\r\\n            [items]=\\\"paymentMethods$ | async\\\"\\r\\n            bindLabel=\\\"code\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n            autofocus\\r\\n            bindValue=\\\"code\\\"\\r\\n            [addTag]=\\\"true\\\"\\r\\n            formControlName=\\\"method\\\"\\r\\n        ></ng-select>\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field [label]=\\\"'order.transaction-id' | translate\\\" for=\\\"transactionId\\\">\\r\\n        <input id=\\\"transactionId\\\" type=\\\"text\\\" formControlName=\\\"transactionId\\\" />\\r\\n    </vdr-form-field>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid || form.pristine\\\">\\r\\n        {{ 'order.add-payment' | translate }}  ({{ outstandingAmount | localeCurrency: currencyCode }})\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".ng-select{min-width:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i5.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: AddManualPaymentDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-add-manual-payment-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'order.add-payment-to-order' | translate }}</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'order.payment-method' | translate\\\" for=\\\"method\\\">\\r\\n        <ng-select\\r\\n            [items]=\\\"paymentMethods$ | async\\\"\\r\\n            bindLabel=\\\"code\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n            autofocus\\r\\n            bindValue=\\\"code\\\"\\r\\n            [addTag]=\\\"true\\\"\\r\\n            formControlName=\\\"method\\\"\\r\\n        ></ng-select>\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field [label]=\\\"'order.transaction-id' | translate\\\" for=\\\"transactionId\\\">\\r\\n        <input id=\\\"transactionId\\\" type=\\\"text\\\" formControlName=\\\"transactionId\\\" />\\r\\n    </vdr-form-field>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid || form.pristine\\\">\\r\\n        {{ 'order.add-payment' | translate }}  ({{ outstandingAmount | localeCurrency: currencyCode }})\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".ng-select{min-width:100%}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\nclass CancelOrderDialogComponent {\n    get selectionCount() {\n        return Object.values(this.lineQuantities).reduce((sum, n) => sum + n, 0);\n    }\n    constructor(i18nService) {\n        this.i18nService = i18nService;\n        this.cancelAll = true;\n        this.lineQuantities = {};\n        this.reasons = getAppConfig().cancellationReasons ?? [\n            marker('order.cancel-reason-customer-request'),\n            marker('order.cancel-reason-not-available'),\n        ];\n        this.reasons = this.reasons.map(r => this.i18nService.translate(r));\n    }\n    ngOnInit() {\n        this.lineQuantities = this.order.lines.reduce((result, line) => ({ ...result, [line.id]: line.quantity }), {});\n    }\n    radioChanged() {\n        if (this.cancelAll) {\n            for (const line of this.order.lines) {\n                this.lineQuantities[line.id] = line.quantity;\n            }\n        }\n        else {\n            for (const line of this.order.lines) {\n                this.lineQuantities[line.id] = 0;\n            }\n        }\n    }\n    checkIfAllSelected() {\n        for (const [lineId, quantity] of Object.entries(this.lineQuantities)) {\n            const quantityInOrder = this.order.lines.find(line => line.id === lineId)?.quantity;\n            if (quantityInOrder && quantity < quantityInOrder) {\n                return;\n            }\n        }\n        // If we got here, all of the selected quantities are equal to the order\n        // line quantities, i.e. everything is selected.\n        this.cancelAll = true;\n    }\n    select() {\n        this.resolveWith({\n            orderId: this.order.id,\n            lines: this.getLineInputs(),\n            reason: this.reason,\n            cancelShipping: this.cancelAll,\n        });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    getLineInputs() {\n        if (this.order.active) {\n            return;\n        }\n        return Object.entries(this.lineQuantities)\n            .map(([orderLineId, quantity]) => ({\n            orderLineId,\n            quantity,\n        }))\n            .filter(l => 0 < l.quantity);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CancelOrderDialogComponent, deps: [{ token: i1.I18nService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CancelOrderDialogComponent, selector: \"vdr-cancel-order-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'order.cancel-order' | translate }}</ng-template>\\r\\n\\r\\n<div class=\\\"fulfillment-wrapper\\\">\\r\\n    <div class=\\\"order-lines\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th></th>\\r\\n                    <th>{{ 'order.product-name' | translate }}</th>\\r\\n                    <th>{{ 'order.product-sku' | translate }}</th>\\r\\n                    <th>{{ 'order.quantity' | translate }}</th>\\r\\n                    <th>{{ 'order.unit-price' | translate }}</th>\\r\\n                    <th>{{ 'order.cancel' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let line of order.lines\\\"\\r\\n                class=\\\"order-line\\\"\\r\\n                [class.is-disabled]=\\\"cancelAll\\\"\\r\\n                [class.is-cancelled]=\\\"line.quantity === 0\\\"\\r\\n            >\\r\\n                <td class=\\\"align-middle thumb\\\">\\r\\n                    <img [src]=\\\"line.featuredAsset | assetPreview: 'tiny'\\\" />\\r\\n                </td>\\r\\n                <td class=\\\"align-middle name\\\">{{ line.productVariant.name }}</td>\\r\\n                <td class=\\\"align-middle sku\\\">{{ line.productVariant.sku }}</td>\\r\\n                <td class=\\\"align-middle quantity\\\">{{ line.quantity }}</td>\\r\\n                <td class=\\\"align-middle quantity\\\">\\r\\n                    {{ line.unitPriceWithTax | localeCurrency: order.currencyCode }}\\r\\n                </td>\\r\\n                <td class=\\\"align-middle fulfil\\\">\\r\\n                    <input\\r\\n                        *ngIf=\\\"line.quantity > 0 && !order.active; else nonEditable\\\"\\r\\n                        [(ngModel)]=\\\"lineQuantities[line.id]\\\"\\r\\n                        (input)=\\\"checkIfAllSelected()\\\"\\r\\n                        [disabled]=\\\"cancelAll\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        [max]=\\\"line.quantity\\\"\\r\\n                        min=\\\"0\\\"\\r\\n                    />\\r\\n                    <ng-template #nonEditable>{{ line.quantity }}</ng-template>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n    <div class=\\\"cancellation-details\\\">\\r\\n        <ng-container *ngIf=\\\"order.active !== true\\\">\\r\\n            <clr-radio-wrapper>\\r\\n                <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    clrRadio\\r\\n                    [value]=\\\"true\\\"\\r\\n                    [(ngModel)]=\\\"cancelAll\\\"\\r\\n                    name=\\\"options\\\"\\r\\n                    (ngModelChange)=\\\"radioChanged()\\\"\\r\\n                />\\r\\n                <label>{{ 'order.cancel-entire-order' | translate }}</label>\\r\\n            </clr-radio-wrapper>\\r\\n            <clr-radio-wrapper>\\r\\n                <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    clrRadio\\r\\n                    [value]=\\\"false\\\"\\r\\n                    [(ngModel)]=\\\"cancelAll\\\"\\r\\n                    name=\\\"options\\\"\\r\\n                    (ngModelChange)=\\\"radioChanged()\\\"\\r\\n                />\\r\\n                <label>{{ 'order.cancel-specified-items' | translate }}</label>\\r\\n            </clr-radio-wrapper>\\r\\n        </ng-container>\\r\\n        <label class=\\\"clr-control-label\\\">{{ 'order.cancellation-reason' | translate }}</label>\\r\\n        <ng-select\\r\\n            [items]=\\\"reasons\\\"\\r\\n            bindLabel=\\\"name\\\"\\r\\n            autofocus\\r\\n            bindValue=\\\"id\\\"\\r\\n            [addTag]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"reason\\\"\\r\\n        ></ng-select>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"select()\\\"\\r\\n        [disabled]=\\\"!reason || (!order.active && selectionCount === 0)\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        <ng-container *ngIf=\\\"!order.active\\\">\\r\\n            {{ 'order.cancel-selected-items' | translate }}\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"order.active\\\">\\r\\n            {{ 'order.cancel-order' | translate }}\\r\\n        </ng-container>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\":host{height:100%;display:flex;min-height:64vh}.fulfillment-wrapper{flex:1}@media screen and (min-width: 768px){.fulfillment-wrapper{display:flex;flex-direction:row}}@media screen and (min-width: 768px){.fulfillment-wrapper .cancellation-details{margin-top:0;margin-inline-start:24px;width:250px}}.fulfillment-wrapper .order-lines{flex:1;overflow-y:auto}.fulfillment-wrapper .order-lines table{margin-top:0}.fulfillment-wrapper tr.ignore{color:var(--color-grey-300)}.fulfillment-wrapper .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}.fulfillment-wrapper .is-disabled td,.fulfillment-wrapper .is-disabled td input{background-color:var(--color-component-bg-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrRadio, selector: \"[clrRadio]\" }, { kind: \"component\", type: i3.ClrRadioWrapper, selector: \"clr-radio-wrapper\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: [\"name\", \"formControlName\", \"value\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CancelOrderDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-cancel-order-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'order.cancel-order' | translate }}</ng-template>\\r\\n\\r\\n<div class=\\\"fulfillment-wrapper\\\">\\r\\n    <div class=\\\"order-lines\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th></th>\\r\\n                    <th>{{ 'order.product-name' | translate }}</th>\\r\\n                    <th>{{ 'order.product-sku' | translate }}</th>\\r\\n                    <th>{{ 'order.quantity' | translate }}</th>\\r\\n                    <th>{{ 'order.unit-price' | translate }}</th>\\r\\n                    <th>{{ 'order.cancel' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let line of order.lines\\\"\\r\\n                class=\\\"order-line\\\"\\r\\n                [class.is-disabled]=\\\"cancelAll\\\"\\r\\n                [class.is-cancelled]=\\\"line.quantity === 0\\\"\\r\\n            >\\r\\n                <td class=\\\"align-middle thumb\\\">\\r\\n                    <img [src]=\\\"line.featuredAsset | assetPreview: 'tiny'\\\" />\\r\\n                </td>\\r\\n                <td class=\\\"align-middle name\\\">{{ line.productVariant.name }}</td>\\r\\n                <td class=\\\"align-middle sku\\\">{{ line.productVariant.sku }}</td>\\r\\n                <td class=\\\"align-middle quantity\\\">{{ line.quantity }}</td>\\r\\n                <td class=\\\"align-middle quantity\\\">\\r\\n                    {{ line.unitPriceWithTax | localeCurrency: order.currencyCode }}\\r\\n                </td>\\r\\n                <td class=\\\"align-middle fulfil\\\">\\r\\n                    <input\\r\\n                        *ngIf=\\\"line.quantity > 0 && !order.active; else nonEditable\\\"\\r\\n                        [(ngModel)]=\\\"lineQuantities[line.id]\\\"\\r\\n                        (input)=\\\"checkIfAllSelected()\\\"\\r\\n                        [disabled]=\\\"cancelAll\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        [max]=\\\"line.quantity\\\"\\r\\n                        min=\\\"0\\\"\\r\\n                    />\\r\\n                    <ng-template #nonEditable>{{ line.quantity }}</ng-template>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n    <div class=\\\"cancellation-details\\\">\\r\\n        <ng-container *ngIf=\\\"order.active !== true\\\">\\r\\n            <clr-radio-wrapper>\\r\\n                <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    clrRadio\\r\\n                    [value]=\\\"true\\\"\\r\\n                    [(ngModel)]=\\\"cancelAll\\\"\\r\\n                    name=\\\"options\\\"\\r\\n                    (ngModelChange)=\\\"radioChanged()\\\"\\r\\n                />\\r\\n                <label>{{ 'order.cancel-entire-order' | translate }}</label>\\r\\n            </clr-radio-wrapper>\\r\\n            <clr-radio-wrapper>\\r\\n                <input\\r\\n                    type=\\\"radio\\\"\\r\\n                    clrRadio\\r\\n                    [value]=\\\"false\\\"\\r\\n                    [(ngModel)]=\\\"cancelAll\\\"\\r\\n                    name=\\\"options\\\"\\r\\n                    (ngModelChange)=\\\"radioChanged()\\\"\\r\\n                />\\r\\n                <label>{{ 'order.cancel-specified-items' | translate }}</label>\\r\\n            </clr-radio-wrapper>\\r\\n        </ng-container>\\r\\n        <label class=\\\"clr-control-label\\\">{{ 'order.cancellation-reason' | translate }}</label>\\r\\n        <ng-select\\r\\n            [items]=\\\"reasons\\\"\\r\\n            bindLabel=\\\"name\\\"\\r\\n            autofocus\\r\\n            bindValue=\\\"id\\\"\\r\\n            [addTag]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"reason\\\"\\r\\n        ></ng-select>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"select()\\\"\\r\\n        [disabled]=\\\"!reason || (!order.active && selectionCount === 0)\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        <ng-container *ngIf=\\\"!order.active\\\">\\r\\n            {{ 'order.cancel-selected-items' | translate }}\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"order.active\\\">\\r\\n            {{ 'order.cancel-order' | translate }}\\r\\n        </ng-container>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\":host{height:100%;display:flex;min-height:64vh}.fulfillment-wrapper{flex:1}@media screen and (min-width: 768px){.fulfillment-wrapper{display:flex;flex-direction:row}}@media screen and (min-width: 768px){.fulfillment-wrapper .cancellation-details{margin-top:0;margin-inline-start:24px;width:250px}}.fulfillment-wrapper .order-lines{flex:1;overflow-y:auto}.fulfillment-wrapper .order-lines table{margin-top:0}.fulfillment-wrapper tr.ignore{color:var(--color-grey-300)}.fulfillment-wrapper .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}.fulfillment-wrapper .is-disabled td,.fulfillment-wrapper .is-disabled td input{background-color:var(--color-component-bg-200)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.I18nService }] });\n\nconst GET_COUPON_CODE_SELECTOR_PROMOTION_LIST = gql `\r\n    query GetCouponCodeSelectorPromotionList($options: PromotionListOptions) {\r\n        promotions(options: $options) {\r\n            items {\r\n                id\r\n                name\r\n                couponCode\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n`;\nclass CouponCodeSelectorComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.addCouponCode = new EventEmitter();\n        this.removeCouponCode = new EventEmitter();\n        this.couponCodeInput$ = new Subject();\n    }\n    ngOnInit() {\n        this.availableCouponCodes$ = concat(this.couponCodeInput$.pipe(debounceTime(200), distinctUntilChanged(), switchMap(term => this.dataService.query(GetCouponCodeSelectorPromotionListDocument, {\n            options: {\n                take: 10,\n                skip: 0,\n                filter: {\n                    couponCode: { contains: term },\n                },\n            },\n        }).single$), map(({ promotions }) => \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        promotions.items.map(p => ({ code: p.couponCode, promotionName: p.name }))), startWith([])));\n        if (!this.control) {\n            this.control = new UntypedFormControl(this.couponCodes ?? []);\n        }\n    }\n    remove(code) {\n        this.removeCouponCode.emit(code);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CouponCodeSelectorComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: CouponCodeSelectorComponent, selector: \"vdr-coupon-code-selector\", inputs: { couponCodes: \"couponCodes\", control: \"control\" }, outputs: { addCouponCode: \"addCouponCode\", removeCouponCode: \"removeCouponCode\" }, ngImport: i0, template: \"<ng-select\\r\\n    [items]=\\\"availableCouponCodes$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    bindLabel=\\\"code\\\"\\r\\n    bindValue=\\\"code\\\"\\r\\n    [addTag]=\\\"false\\\"\\r\\n    [multiple]=\\\"true\\\"\\r\\n    [hideSelected]=\\\"true\\\"\\r\\n    [minTermLength]=\\\"2\\\"\\r\\n    typeToSearchText=\\\"\\\"\\r\\n    [typeahead]=\\\"couponCodeInput$\\\"\\r\\n    [formControl]=\\\"control\\\"\\r\\n    (add)=\\\"addCouponCode.emit($event.code)\\\"\\r\\n    (remove)=\\\"remove($event.code)\\\"\\r\\n>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n        <div class=\\\"flex items-center\\\">\\r\\n            <vdr-chip class=\\\"mr-1\\\">{{ item.code }}</vdr-chip>\\r\\n            <span>{{ item.promotionName }}</span>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"component\", type: i5.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"directive\", type: i5.NgOptionTemplateDirective, selector: \"[ng-option-tmp]\" }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: CouponCodeSelectorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-coupon-code-selector', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-select\\r\\n    [items]=\\\"availableCouponCodes$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    bindLabel=\\\"code\\\"\\r\\n    bindValue=\\\"code\\\"\\r\\n    [addTag]=\\\"false\\\"\\r\\n    [multiple]=\\\"true\\\"\\r\\n    [hideSelected]=\\\"true\\\"\\r\\n    [minTermLength]=\\\"2\\\"\\r\\n    typeToSearchText=\\\"\\\"\\r\\n    [typeahead]=\\\"couponCodeInput$\\\"\\r\\n    [formControl]=\\\"control\\\"\\r\\n    (add)=\\\"addCouponCode.emit($event.code)\\\"\\r\\n    (remove)=\\\"remove($event.code)\\\"\\r\\n>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n        <div class=\\\"flex items-center\\\">\\r\\n            <vdr-chip class=\\\"mr-1\\\">{{ item.code }}</vdr-chip>\\r\\n            <span>{{ item.promotionName }}</span>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.DataService }], propDecorators: { couponCodes: [{\n                type: Input\n            }], control: [{\n                type: Input\n            }], addCouponCode: [{\n                type: Output\n            }], removeCouponCode: [{\n                type: Output\n            }] } });\n\nclass SelectAddressDialogComponent {\n    constructor(dataService, formBuilder) {\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.useExisting = true;\n        this.createNew = false;\n    }\n    ngOnInit() {\n        this.addressForm = this.formBuilder.group({\n            fullName: [this.currentAddress?.fullName ?? ''],\n            company: [this.currentAddress?.company ?? ''],\n            streetLine1: [this.currentAddress?.streetLine1 ?? '', Validators.required],\n            streetLine2: [this.currentAddress?.streetLine2 ?? ''],\n            city: [this.currentAddress?.city ?? '', Validators.required],\n            province: [this.currentAddress?.province ?? ''],\n            postalCode: [this.currentAddress?.postalCode ?? '', Validators.required],\n            countryCode: [this.currentAddress?.countryCode ?? '', Validators.required],\n            phoneNumber: [this.currentAddress?.phoneNumber ?? ''],\n        });\n        this.useExisting = !!this.customerId;\n        this.addresses$ = this.customerId\n            ? this.dataService\n                .query(GetCustomerAddressesDocument, { customerId: this.customerId })\n                .mapSingle(({ customer }) => customer?.addresses ?? [])\n                .pipe(tap(addresses => {\n                if (this.currentAddress) {\n                    this.selectedAddress = addresses.find(a => a.streetLine1 === this.currentAddress?.streetLine1 &&\n                        a.postalCode === this.currentAddress?.postalCode);\n                }\n                if (addresses.length === 0) {\n                    this.createNew = true;\n                    this.useExisting = false;\n                }\n            }))\n            : of([]);\n        this.availableCountries$ = this.dataService.settings\n            .getAvailableCountries()\n            .mapSingle(({ countries }) => countries.items);\n    }\n    trackByFn(item) {\n        return item.id;\n    }\n    addressIdFn(item) {\n        return item.streetLine1 + item.postalCode;\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    select() {\n        if (this.useExisting && this.selectedAddress) {\n            this.resolveWith({\n                ...pick(this.selectedAddress, [\n                    'fullName',\n                    'company',\n                    'streetLine1',\n                    'streetLine2',\n                    'city',\n                    'province',\n                    'phoneNumber',\n                    'postalCode',\n                ]),\n                countryCode: this.selectedAddress.country.code,\n            });\n        }\n        if (this.createNew && this.addressForm.valid) {\n            const formValue = this.addressForm.value;\n            this.resolveWith(formValue);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SelectAddressDialogComponent, deps: [{ token: i1.DataService }, { token: i2.UntypedFormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: SelectAddressDialogComponent, selector: \"vdr-select-address-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'order.select-address' | translate }}</ng-template>\\r\\n\\r\\n<clr-tabs *ngIf=\\\"addresses$ | async as addresses\\\">\\r\\n    <clr-tab *ngIf=\\\"customerId && addresses.length\\\">\\r\\n        <button clrTabLink>{{ 'order.existing-address' | translate }}</button>\\r\\n        <ng-template [(clrIfActive)]=\\\"useExisting\\\">\\r\\n            <clr-tab-content>\\r\\n                <vdr-radio-card-fieldset\\r\\n                    class=\\\"block mt-4\\\"\\r\\n                    [idFn]=\\\"addressIdFn\\\"\\r\\n                    [selectedItemId]=\\\"selectedAddress && addressIdFn(selectedAddress)\\\"\\r\\n                    (selectItem)=\\\"selectedAddress = $event\\\"\\r\\n                >\\r\\n                    <vdr-radio-card *ngFor=\\\"let address of addresses\\\" [item]=\\\"address\\\">\\r\\n                        <vdr-formatted-address [address]=\\\"address\\\"></vdr-formatted-address>\\r\\n                    </vdr-radio-card>\\r\\n                </vdr-radio-card-fieldset>\\r\\n            </clr-tab-content>\\r\\n        </ng-template>\\r\\n    </clr-tab>\\r\\n    <clr-tab>\\r\\n        <button clrTabLink>{{ 'customer.create-new-address' | translate }}</button>\\r\\n\\r\\n        <ng-template [(clrIfActive)]=\\\"createNew\\\">\\r\\n            <clr-tab-content>\\r\\n                <vdr-address-form\\r\\n                    [formGroup]=\\\"addressForm\\\"\\r\\n                    [availableCountries]=\\\"availableCountries$ | async\\\"\\r\\n                ></vdr-address-form>\\r\\n            </clr-tab-content>\\r\\n        </ng-template>\\r\\n    </clr-tab>\\r\\n</clr-tabs>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"select()\\\"\\r\\n        [disabled]=\\\"(useExisting && !selectedAddress) || (createNew && addressForm.invalid)\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.okay' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIfActive, selector: \"[clrIfActive]\", inputs: [\"clrIfActive\"], outputs: [\"clrIfActiveChange\"] }, { kind: \"component\", type: i3.ClrTabContent, selector: \"clr-tab-content\", inputs: [\"id\"] }, { kind: \"component\", type: i3.ClrTab, selector: \"clr-tab\" }, { kind: \"component\", type: i3.ClrTabs, selector: \"clr-tabs\", inputs: [\"clrLayout\"] }, { kind: \"directive\", type: i3.ClrTabLink, selector: \"[clrTabLink]\", inputs: [\"id\", \"clrTabLinkInOverflow\"] }, { kind: \"directive\", type: i3.ÇlrTabsWillyWonka, selector: \"clr-tabs\" }, { kind: \"directive\", type: i3.ÇlrActiveOompaLoompa, selector: \"[clrTabLink], clr-tab-content\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.FormattedAddressComponent, selector: \"vdr-formatted-address\", inputs: [\"address\"] }, { kind: \"component\", type: i1.AddressFormComponent, selector: \"vdr-address-form\", inputs: [\"customFields\", \"formGroup\", \"availableCountries\"] }, { kind: \"component\", type: i1.RadioCardComponent, selector: \"vdr-radio-card\", inputs: [\"item\"], exportAs: [\"VdrRadioCard\"] }, { kind: \"component\", type: i1.RadioCardFieldsetComponent, selector: \"vdr-radio-card-fieldset\", inputs: [\"selectedItemId\", \"idFn\"], outputs: [\"selectItem\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SelectAddressDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-select-address-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'order.select-address' | translate }}</ng-template>\\r\\n\\r\\n<clr-tabs *ngIf=\\\"addresses$ | async as addresses\\\">\\r\\n    <clr-tab *ngIf=\\\"customerId && addresses.length\\\">\\r\\n        <button clrTabLink>{{ 'order.existing-address' | translate }}</button>\\r\\n        <ng-template [(clrIfActive)]=\\\"useExisting\\\">\\r\\n            <clr-tab-content>\\r\\n                <vdr-radio-card-fieldset\\r\\n                    class=\\\"block mt-4\\\"\\r\\n                    [idFn]=\\\"addressIdFn\\\"\\r\\n                    [selectedItemId]=\\\"selectedAddress && addressIdFn(selectedAddress)\\\"\\r\\n                    (selectItem)=\\\"selectedAddress = $event\\\"\\r\\n                >\\r\\n                    <vdr-radio-card *ngFor=\\\"let address of addresses\\\" [item]=\\\"address\\\">\\r\\n                        <vdr-formatted-address [address]=\\\"address\\\"></vdr-formatted-address>\\r\\n                    </vdr-radio-card>\\r\\n                </vdr-radio-card-fieldset>\\r\\n            </clr-tab-content>\\r\\n        </ng-template>\\r\\n    </clr-tab>\\r\\n    <clr-tab>\\r\\n        <button clrTabLink>{{ 'customer.create-new-address' | translate }}</button>\\r\\n\\r\\n        <ng-template [(clrIfActive)]=\\\"createNew\\\">\\r\\n            <clr-tab-content>\\r\\n                <vdr-address-form\\r\\n                    [formGroup]=\\\"addressForm\\\"\\r\\n                    [availableCountries]=\\\"availableCountries$ | async\\\"\\r\\n                ></vdr-address-form>\\r\\n            </clr-tab-content>\\r\\n        </ng-template>\\r\\n    </clr-tab>\\r\\n</clr-tabs>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"select()\\\"\\r\\n        [disabled]=\\\"(useExisting && !selectedAddress) || (createNew && addressForm.invalid)\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.okay' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i2.UntypedFormBuilder }] });\n\nclass SelectCustomerDialogComponent {\n    constructor(dataService, formBuilder) {\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        // populated by the dialog service\n        this.canCreateNew = true;\n        this.includeNoteInput = false;\n        this.title = marker('order.set-customer-for-order');\n        this.isLoading = false;\n        this.input$ = new Subject();\n        this.selectedCustomer = [];\n        this.useExisting = true;\n        this.createNew = false;\n        this.note = '';\n        this.customerForm = this.formBuilder.group({\n            title: '',\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            phoneNumber: '',\n            emailAddress: ['', [Validators.required, Validators.email]],\n        });\n    }\n    ngOnInit() {\n        this.customers$ = concat(of([]), // default items\n        this.input$.pipe(debounceTime(200), distinctUntilChanged(), tap(() => (this.isLoading = true)), switchMap(term => this.dataService.customer\n            .getCustomerList(10, 0, term)\n            .mapStream(({ customers }) => customers.items)\n            .pipe(catchError(() => of([])), // empty list on error\n        tap(() => (this.isLoading = false))))));\n    }\n    trackByFn(item) {\n        return item.id;\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    select() {\n        if (this.useExisting && this.selectedCustomer.length === 1) {\n            this.resolveWith({ ...this.selectedCustomer[0], note: this.note });\n        }\n        else if (this.createNew && this.customerForm.valid) {\n            const formValue = this.customerForm.value;\n            this.resolveWith({ ...formValue, note: this.note });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SelectCustomerDialogComponent, deps: [{ token: i1.DataService }, { token: i2.UntypedFormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: SelectCustomerDialogComponent, selector: \"vdr-select-customer-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ title | translate }}</ng-template>\\r\\n\\r\\n<ng-container *ngIf=\\\"!canCreateNew\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"customerSelect\\\"></ng-container>\\r\\n    <vdr-form-field [label]=\\\"'common.add-note' | translate\\\" *ngIf=\\\"includeNoteInput\\\" class=\\\"mt-4\\\">\\r\\n        <textarea [(ngModel)]=\\\"note\\\"></textarea>\\r\\n    </vdr-form-field>\\r\\n</ng-container>\\r\\n\\r\\n<clr-tabs *ngIf=\\\"canCreateNew\\\" class=\\\"pt-1\\\">\\r\\n    <clr-tab>\\r\\n        <button clrTabLink>{{ 'order.existing-customer' | translate }}</button>\\r\\n\\r\\n        <ng-template [(clrIfActive)]=\\\"useExisting\\\">\\r\\n            <clr-tab-content>\\r\\n                <div class=\\\"mt-4\\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"customerSelect\\\"></ng-container>\\r\\n                </div>\\r\\n            </clr-tab-content>\\r\\n        </ng-template>\\r\\n    </clr-tab>\\r\\n    <clr-tab *ngIf=\\\"canCreateNew\\\">\\r\\n        <button clrTabLink>{{ 'customer.create-new-customer' | translate }}</button>\\r\\n\\r\\n        <ng-template [(clrIfActive)]=\\\"createNew\\\">\\r\\n            <clr-tab-content>\\r\\n                <form [formGroup]=\\\"customerForm\\\">\\r\\n                    <vdr-form-field [label]=\\\"'customer.title' | translate\\\" for=\\\"title\\\">\\r\\n                        <input id=\\\"title\\\" type=\\\"text\\\" formControlName=\\\"title\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'customer.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'customer.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'customer.email-address' | translate\\\" for=\\\"emailAddress\\\">\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'customer.phone-number' | translate\\\" for=\\\"phoneNumber\\\">\\r\\n                        <input id=\\\"phoneNumber\\\" type=\\\"text\\\" formControlName=\\\"phoneNumber\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </form>\\r\\n            </clr-tab-content>\\r\\n        </ng-template>\\r\\n    </clr-tab>\\r\\n</clr-tabs>\\r\\n\\r\\n<ng-template #customerSelect>\\r\\n    <ng-select\\r\\n        [items]=\\\"customers$ | async\\\"\\r\\n        appendTo=\\\"body\\\"\\r\\n        bindLabel=\\\"name\\\"\\r\\n        [addTag]=\\\"false\\\"\\r\\n        [multiple]=\\\"true\\\"\\r\\n        [hideSelected]=\\\"true\\\"\\r\\n        [trackByFn]=\\\"trackByFn\\\"\\r\\n        [minTermLength]=\\\"2\\\"\\r\\n        [loading]=\\\"isLoading\\\"\\r\\n        [typeahead]=\\\"input$\\\"\\r\\n        [(ngModel)]=\\\"selectedCustomer\\\"\\r\\n    >\\r\\n        <ng-template ng-label-tmp let-item=\\\"item\\\" let-clear=\\\"clear\\\">\\r\\n            <span class=\\\"item-row\\\">\\r\\n                <clr-icon shape=\\\"user\\\" class=\\\"is-solid\\\"></clr-icon\\r\\n                ><span class=\\\"mx-1\\\">{{ item.firstName }} {{ item.lastName }}</span>\\r\\n                <vdr-chip>{{ item.emailAddress }}</vdr-chip>\\r\\n            </span>\\r\\n        </ng-template>\\r\\n        <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n            <span class=\\\"item-row\\\">\\r\\n                <clr-icon shape=\\\"user\\\" class=\\\"is-solid\\\"></clr-icon\\r\\n                ><span class=\\\"mx-1\\\">{{ item.firstName }} {{ item.lastName }}</span>\\r\\n                <vdr-chip>{{ item.emailAddress }}</vdr-chip>\\r\\n            </span>\\r\\n        </ng-template>\\r\\n    </ng-select>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"select()\\\"\\r\\n        [disabled]=\\\"(useExisting && selectedCustomer.length === 0) || (createNew && customerForm.invalid)\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.okay' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".item-row{display:flex;align-items:center}clr-tabs{display:block}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrIfActive, selector: \"[clrIfActive]\", inputs: [\"clrIfActive\"], outputs: [\"clrIfActiveChange\"] }, { kind: \"component\", type: i3.ClrTabContent, selector: \"clr-tab-content\", inputs: [\"id\"] }, { kind: \"component\", type: i3.ClrTab, selector: \"clr-tab\" }, { kind: \"component\", type: i3.ClrTabs, selector: \"clr-tabs\", inputs: [\"clrLayout\"] }, { kind: \"directive\", type: i3.ClrTabLink, selector: \"[clrTabLink]\", inputs: [\"id\", \"clrTabLinkInOverflow\"] }, { kind: \"directive\", type: i3.ÇlrTabsWillyWonka, selector: \"clr-tabs\" }, { kind: \"directive\", type: i3.ÇlrActiveOompaLoompa, selector: \"[clrTabLink], clr-tab-content\" }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i5.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"directive\", type: i5.NgOptionTemplateDirective, selector: \"[ng-option-tmp]\" }, { kind: \"directive\", type: i5.NgLabelTemplateDirective, selector: \"[ng-label-tmp]\" }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SelectCustomerDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-select-customer-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ title | translate }}</ng-template>\\r\\n\\r\\n<ng-container *ngIf=\\\"!canCreateNew\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"customerSelect\\\"></ng-container>\\r\\n    <vdr-form-field [label]=\\\"'common.add-note' | translate\\\" *ngIf=\\\"includeNoteInput\\\" class=\\\"mt-4\\\">\\r\\n        <textarea [(ngModel)]=\\\"note\\\"></textarea>\\r\\n    </vdr-form-field>\\r\\n</ng-container>\\r\\n\\r\\n<clr-tabs *ngIf=\\\"canCreateNew\\\" class=\\\"pt-1\\\">\\r\\n    <clr-tab>\\r\\n        <button clrTabLink>{{ 'order.existing-customer' | translate }}</button>\\r\\n\\r\\n        <ng-template [(clrIfActive)]=\\\"useExisting\\\">\\r\\n            <clr-tab-content>\\r\\n                <div class=\\\"mt-4\\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"customerSelect\\\"></ng-container>\\r\\n                </div>\\r\\n            </clr-tab-content>\\r\\n        </ng-template>\\r\\n    </clr-tab>\\r\\n    <clr-tab *ngIf=\\\"canCreateNew\\\">\\r\\n        <button clrTabLink>{{ 'customer.create-new-customer' | translate }}</button>\\r\\n\\r\\n        <ng-template [(clrIfActive)]=\\\"createNew\\\">\\r\\n            <clr-tab-content>\\r\\n                <form [formGroup]=\\\"customerForm\\\">\\r\\n                    <vdr-form-field [label]=\\\"'customer.title' | translate\\\" for=\\\"title\\\">\\r\\n                        <input id=\\\"title\\\" type=\\\"text\\\" formControlName=\\\"title\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'customer.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'customer.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'customer.email-address' | translate\\\" for=\\\"emailAddress\\\">\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'customer.phone-number' | translate\\\" for=\\\"phoneNumber\\\">\\r\\n                        <input id=\\\"phoneNumber\\\" type=\\\"text\\\" formControlName=\\\"phoneNumber\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </form>\\r\\n            </clr-tab-content>\\r\\n        </ng-template>\\r\\n    </clr-tab>\\r\\n</clr-tabs>\\r\\n\\r\\n<ng-template #customerSelect>\\r\\n    <ng-select\\r\\n        [items]=\\\"customers$ | async\\\"\\r\\n        appendTo=\\\"body\\\"\\r\\n        bindLabel=\\\"name\\\"\\r\\n        [addTag]=\\\"false\\\"\\r\\n        [multiple]=\\\"true\\\"\\r\\n        [hideSelected]=\\\"true\\\"\\r\\n        [trackByFn]=\\\"trackByFn\\\"\\r\\n        [minTermLength]=\\\"2\\\"\\r\\n        [loading]=\\\"isLoading\\\"\\r\\n        [typeahead]=\\\"input$\\\"\\r\\n        [(ngModel)]=\\\"selectedCustomer\\\"\\r\\n    >\\r\\n        <ng-template ng-label-tmp let-item=\\\"item\\\" let-clear=\\\"clear\\\">\\r\\n            <span class=\\\"item-row\\\">\\r\\n                <clr-icon shape=\\\"user\\\" class=\\\"is-solid\\\"></clr-icon\\r\\n                ><span class=\\\"mx-1\\\">{{ item.firstName }} {{ item.lastName }}</span>\\r\\n                <vdr-chip>{{ item.emailAddress }}</vdr-chip>\\r\\n            </span>\\r\\n        </ng-template>\\r\\n        <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n            <span class=\\\"item-row\\\">\\r\\n                <clr-icon shape=\\\"user\\\" class=\\\"is-solid\\\"></clr-icon\\r\\n                ><span class=\\\"mx-1\\\">{{ item.firstName }} {{ item.lastName }}</span>\\r\\n                <vdr-chip>{{ item.emailAddress }}</vdr-chip>\\r\\n            </span>\\r\\n        </ng-template>\\r\\n    </ng-select>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"select()\\\"\\r\\n        [disabled]=\\\"(useExisting && selectedCustomer.length === 0) || (createNew && customerForm.invalid)\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.okay' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".item-row{display:flex;align-items:center}clr-tabs{display:block}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i2.UntypedFormBuilder }] });\n\nclass SelectShippingMethodDialogComponent {\n    ngOnInit() {\n        if (this.currentSelectionId) {\n            this.selectedMethod = this.eligibleShippingMethods.find(m => m.id === this.currentSelectionId);\n        }\n    }\n    methodIdFn(item) {\n        return item.id;\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    select() {\n        if (this.selectedMethod) {\n            this.resolveWith(this.selectedMethod.id);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SelectShippingMethodDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: SelectShippingMethodDialogComponent, selector: \"vdr-select-shipping-method-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'order.select-shipping-method' | translate }}</ng-template>\\r\\n<vdr-radio-card-fieldset\\r\\n    [idFn]=\\\"methodIdFn\\\"\\r\\n    [selectedItemId]=\\\"selectedMethod?.id\\\"\\r\\n    (selectItem)=\\\"selectedMethod = $event\\\"\\r\\n>\\r\\n    <vdr-radio-card *ngFor=\\\"let quote of eligibleShippingMethods\\\" [item]=\\\"quote\\\">\\r\\n        <div class=\\\"result-details\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.shipping-method' | translate\\\">\\r\\n                {{ quote.name }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data [label]=\\\"'common.price' | translate\\\">\\r\\n                    {{ quote.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n                    {{ quote.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree *ngIf=\\\"quote.metadata\\\" [value]=\\\"quote.metadata\\\"></vdr-object-tree>\\r\\n        </div>\\r\\n    </vdr-radio-card>\\r\\n</vdr-radio-card-fieldset>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"select()\\\"\\r\\n        [disabled]=\\\"!selectedMethod\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.okay' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"component\", type: i1.RadioCardComponent, selector: \"vdr-radio-card\", inputs: [\"item\"], exportAs: [\"VdrRadioCard\"] }, { kind: \"component\", type: i1.RadioCardFieldsetComponent, selector: \"vdr-radio-card-fieldset\", inputs: [\"selectedItemId\", \"idFn\"], outputs: [\"selectItem\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SelectShippingMethodDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-select-shipping-method-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'order.select-shipping-method' | translate }}</ng-template>\\r\\n<vdr-radio-card-fieldset\\r\\n    [idFn]=\\\"methodIdFn\\\"\\r\\n    [selectedItemId]=\\\"selectedMethod?.id\\\"\\r\\n    (selectItem)=\\\"selectedMethod = $event\\\"\\r\\n>\\r\\n    <vdr-radio-card *ngFor=\\\"let quote of eligibleShippingMethods\\\" [item]=\\\"quote\\\">\\r\\n        <div class=\\\"result-details\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.shipping-method' | translate\\\">\\r\\n                {{ quote.name }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data [label]=\\\"'common.price' | translate\\\">\\r\\n                    {{ quote.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n                    {{ quote.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree *ngIf=\\\"quote.metadata\\\" [value]=\\\"quote.metadata\\\"></vdr-object-tree>\\r\\n        </div>\\r\\n    </vdr-radio-card>\\r\\n</vdr-radio-card-fieldset>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"select()\\\"\\r\\n        [disabled]=\\\"!selectedMethod\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.okay' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }] });\n\nclass OrderStateSelectDialogComponent {\n    constructor() {\n        this.nextStates = [];\n        this.message = '';\n        this.selectedState = '';\n    }\n    select() {\n        if (this.selectedState) {\n            this.resolveWith(this.selectedState);\n        }\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderStateSelectDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderStateSelectDialogComponent, selector: \"vdr-order-state-select-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'order.select-state' | translate }}</ng-template>\\r\\n<p>{{ message | translate }}</p>\\r\\n<vdr-form-field>\\r\\n    <select name=\\\"state\\\" [(ngModel)]=\\\"selectedState\\\">\\r\\n        <option *ngFor=\\\"let state of nextStates\\\" [value]=\\\"state\\\">\\r\\n            {{ state | stateI18nToken | translate }}\\r\\n        </option>\\r\\n    </select>\\r\\n</vdr-form-field>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"submit\\\" *ngIf=\\\"cancellable\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">\\r\\n        {{ 'common.cancel' | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"select()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!selectedState\\\">\\r\\n        {{ 'order.transition-to-state' | translate: { state: (selectedState | stateI18nToken | translate) } }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.StateI18nTokenPipe, name: \"stateI18nToken\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderStateSelectDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-state-select-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'order.select-state' | translate }}</ng-template>\\r\\n<p>{{ message | translate }}</p>\\r\\n<vdr-form-field>\\r\\n    <select name=\\\"state\\\" [(ngModel)]=\\\"selectedState\\\">\\r\\n        <option *ngFor=\\\"let state of nextStates\\\" [value]=\\\"state\\\">\\r\\n            {{ state | stateI18nToken | translate }}\\r\\n        </option>\\r\\n    </select>\\r\\n</vdr-form-field>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"submit\\\" *ngIf=\\\"cancellable\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">\\r\\n        {{ 'common.cancel' | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"select()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!selectedState\\\">\\r\\n        {{ 'order.transition-to-state' | translate: { state: (selectedState | stateI18nToken | translate) } }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }] });\n\nclass OrderTransitionService {\n    constructor(dataService, modalService, notificationService, i18nService) {\n        this.dataService = dataService;\n        this.modalService = modalService;\n        this.notificationService = notificationService;\n        this.i18nService = i18nService;\n    }\n    /**\n     * Attempts to transition the Order to the last state it was in before it was transitioned\n     * to the \"Modifying\" state. If this fails, a manual prompt is used.\n     */\n    transitionToPreModifyingState(orderId, nextStates) {\n        return this.getPreModifyingState(orderId).pipe(switchMap(state => {\n            const manualTransitionOptions = {\n                orderId,\n                nextStates,\n                message: this.i18nService.translate(marker('order.unable-to-transition-to-state-try-another'), { state }),\n                cancellable: false,\n                retry: 10,\n            };\n            if (state) {\n                return this.transitionToStateOrThrow(orderId, state).pipe(catchError(err => this.manuallyTransitionToState(manualTransitionOptions)));\n            }\n            else {\n                return this.manuallyTransitionToState(manualTransitionOptions);\n            }\n        }));\n    }\n    /**\n     * Displays a modal for manually selecting the next state.\n     */\n    manuallyTransitionToState(options) {\n        return this.modalService\n            .fromComponent(OrderStateSelectDialogComponent, {\n            locals: {\n                nextStates: options.nextStates,\n                cancellable: options.cancellable,\n                message: options.message,\n            },\n            closable: false,\n            size: 'md',\n        })\n            .pipe(switchMap(result => {\n            if (result) {\n                return this.transitionToStateOrThrow(options.orderId, result);\n            }\n            else {\n                if (!options.cancellable) {\n                    throw new Error(`An order state must be selected`);\n                }\n                else {\n                    return EMPTY;\n                }\n            }\n        }), retryWhen(errors => errors.pipe(delay(2000), take(options.retry))));\n    }\n    /**\n     * Attempts to get the last state the Order was in before it was transitioned\n     * to the \"Modifying\" state.\n     */\n    getPreModifyingState(orderId) {\n        return this.dataService.order\n            .getOrderHistory(orderId, {\n            filter: {\n                type: {\n                    eq: HistoryEntryType.ORDER_STATE_TRANSITION,\n                },\n            },\n            sort: {\n                createdAt: SortOrder.DESC,\n            },\n        })\n            .mapSingle(result => result.order)\n            .pipe(map(result => {\n            const item = result?.history.items.find(i => i.data.to === 'Modifying');\n            if (item) {\n                return item.data.from;\n            }\n            else {\n                return;\n            }\n        }));\n    }\n    transitionToStateOrThrow(orderId, state) {\n        return this.dataService.order.transitionToState(orderId, state).pipe(map(({ transitionOrderToState }) => {\n            switch (transitionOrderToState?.__typename) {\n                case 'Order':\n                    return transitionOrderToState?.state;\n                case 'OrderStateTransitionError':\n                    this.notificationService.error(transitionOrderToState?.transitionError);\n                    throw new Error(transitionOrderToState?.transitionError);\n            }\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderTransitionService, deps: [{ token: i1.DataService }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.I18nService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderTransitionService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderTransitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.I18nService }] });\n\nclass OrderCustomFieldsCardComponent {\n    constructor(formBuilder, modalService) {\n        this.formBuilder = formBuilder;\n        this.modalService = modalService;\n        this.customFieldsConfig = [];\n        this.customFieldValues = {};\n        this.updateClick = new EventEmitter();\n        this.editable = false;\n    }\n    ngOnInit() {\n        this.customFieldForm = this.formBuilder.group({});\n        for (const field of this.customFieldsConfig) {\n            this.customFieldForm.addControl(field.name, this.formBuilder.control(this.customFieldValues[field.name]));\n        }\n    }\n    onUpdateClick() {\n        this.updateClick.emit(this.customFieldForm.value);\n        this.customFieldForm.markAsPristine();\n        this.editable = false;\n    }\n    onCancelClick() {\n        if (this.customFieldForm.dirty) {\n            this.modalService\n                .dialog({\n                title: marker('catalog.confirm-cancel'),\n                buttons: [\n                    { type: 'secondary', label: marker('common.keep-editing') },\n                    { type: 'danger', label: marker('common.discard-changes'), returnValue: true },\n                ],\n            })\n                .subscribe(result => {\n                if (result) {\n                    this.customFieldForm.reset();\n                    this.customFieldForm.markAsPristine();\n                    this.editable = false;\n                }\n            });\n        }\n        else {\n            this.editable = false;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderCustomFieldsCardComponent, deps: [{ token: i2.UntypedFormBuilder }, { token: i1.ModalService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderCustomFieldsCardComponent, selector: \"vdr-order-custom-fields-card\", inputs: { customFieldsConfig: \"customFieldsConfig\", customFieldValues: \"customFieldValues\" }, outputs: { updateClick: \"updateClick\" }, ngImport: i0, template: \"<div class=\\\"card\\\" *ngIf=\\\"customFieldsConfig.length\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'common.custom-fields' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"card-text custom-field-form\\\" [class.editable]=\\\"editable\\\">\\r\\n            <vdr-tabbed-custom-fields\\r\\n                entityName=\\\"Order\\\"\\r\\n                [customFields]=\\\"customFieldsConfig\\\"\\r\\n                [customFieldsFormGroup]=\\\"customFieldForm\\\"\\r\\n                [readonly]=\\\"!editable\\\"\\r\\n                [compact]=\\\"true\\\"\\r\\n            ></vdr-tabbed-custom-fields>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-sm btn-secondary\\\" (click)=\\\"editable = true\\\" *ngIf=\\\"!editable\\\">\\r\\n            <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n            {{ 'common.edit' | translate }}\\r\\n        </button>\\r\\n        <button\\r\\n            class=\\\"btn btn-sm btn-primary\\\"\\r\\n            (click)=\\\"onUpdateClick()\\\"\\r\\n            *ngIf=\\\"editable\\\"\\r\\n            [disabled]=\\\"customFieldForm.pristine || customFieldForm.invalid\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"check\\\"></clr-icon>\\r\\n            {{ 'common.update' | translate }}\\r\\n        </button>\\r\\n        <button\\r\\n            class=\\\"btn btn-sm btn-secondary\\\"\\r\\n            (click)=\\\"onCancelClick()\\\"\\r\\n            *ngIf=\\\"editable\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"times\\\"></clr-icon>\\r\\n            {{ 'common.cancel' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\"vdr-custom-field-control{margin-bottom:6px;display:block}.custom-field-form ::ng-deep .clr-control-label{color:var(--color-grey-400)}.custom-field-form.editable ::ng-deep .clr-control-label{color:inherit}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderCustomFieldsCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-custom-fields-card', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"card\\\" *ngIf=\\\"customFieldsConfig.length\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'common.custom-fields' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"card-text custom-field-form\\\" [class.editable]=\\\"editable\\\">\\r\\n            <vdr-tabbed-custom-fields\\r\\n                entityName=\\\"Order\\\"\\r\\n                [customFields]=\\\"customFieldsConfig\\\"\\r\\n                [customFieldsFormGroup]=\\\"customFieldForm\\\"\\r\\n                [readonly]=\\\"!editable\\\"\\r\\n                [compact]=\\\"true\\\"\\r\\n            ></vdr-tabbed-custom-fields>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-sm btn-secondary\\\" (click)=\\\"editable = true\\\" *ngIf=\\\"!editable\\\">\\r\\n            <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n            {{ 'common.edit' | translate }}\\r\\n        </button>\\r\\n        <button\\r\\n            class=\\\"btn btn-sm btn-primary\\\"\\r\\n            (click)=\\\"onUpdateClick()\\\"\\r\\n            *ngIf=\\\"editable\\\"\\r\\n            [disabled]=\\\"customFieldForm.pristine || customFieldForm.invalid\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"check\\\"></clr-icon>\\r\\n            {{ 'common.update' | translate }}\\r\\n        </button>\\r\\n        <button\\r\\n            class=\\\"btn btn-sm btn-secondary\\\"\\r\\n            (click)=\\\"onCancelClick()\\\"\\r\\n            *ngIf=\\\"editable\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"times\\\"></clr-icon>\\r\\n            {{ 'common.cancel' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\"vdr-custom-field-control{margin-bottom:6px;display:block}.custom-field-form ::ng-deep .clr-control-label{color:var(--color-grey-400)}.custom-field-form.editable ::ng-deep .clr-control-label{color:inherit}\\n\"] }]\n        }], ctorParameters: () => [{ type: i2.UntypedFormBuilder }, { type: i1.ModalService }], propDecorators: { customFieldsConfig: [{\n                type: Input\n            }], customFieldValues: [{\n                type: Input\n            }], updateClick: [{\n                type: Output\n            }] } });\n\nclass LineFulfillmentComponent {\n    constructor() {\n        this.fulfilledCount = 0;\n        this.fulfillments = [];\n    }\n    ngOnChanges(changes) {\n        if (this.line) {\n            this.fulfilledCount = this.getDeliveredCount(this.line);\n            this.fulfillmentStatus = this.getFulfillmentStatus(this.fulfilledCount, this.line.quantity);\n            this.fulfillments = this.getFulfillments(this.line);\n        }\n    }\n    /**\n     * Returns the number of items in an OrderLine which are fulfilled.\n     */\n    getDeliveredCount(line) {\n        return (line.fulfillmentLines?.reduce((sum, fulfillmentLine) => sum + fulfillmentLine.quantity, 0) ?? 0);\n    }\n    getFulfillmentStatus(fulfilledCount, lineQuantity) {\n        if (fulfilledCount === lineQuantity) {\n            return 'full';\n        }\n        if (0 < fulfilledCount && fulfilledCount < lineQuantity) {\n            return 'partial';\n        }\n        return 'none';\n    }\n    getFulfillments(line) {\n        return (line.fulfillmentLines\n            ?.map(fulfillmentLine => {\n            const fulfillment = this.allOrderFulfillments?.find(f => f.id === fulfillmentLine.fulfillmentId);\n            if (!fulfillment) {\n                return;\n            }\n            return {\n                count: fulfillmentLine.quantity,\n                fulfillment,\n            };\n        })\n            .filter(notNullOrUndefined) ?? []);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LineFulfillmentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: LineFulfillmentComponent, selector: \"vdr-line-fulfillment\", inputs: { line: \"line\", allOrderFulfillments: \"allOrderFulfillments\", orderState: \"orderState\" }, usesOnChanges: true, ngImport: i0, template: \"<vdr-dropdown class=\\\"search-settings-menu\\\" *ngIf=\\\"fulfilledCount || orderState === 'PartiallyDelivered'\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n        <clr-icon *ngIf=\\\"fulfillmentStatus === 'full'\\\" class=\\\"item-fulfilled\\\" shape=\\\"check-circle\\\"></clr-icon>\\r\\n        <clr-icon\\r\\n            *ngIf=\\\"fulfillmentStatus === 'partial'\\\"\\r\\n            class=\\\"item-partially-fulfilled\\\"\\r\\n            shape=\\\"check-circle\\\"\\r\\n        ></clr-icon>\\r\\n        <clr-icon\\r\\n            *ngIf=\\\"fulfillmentStatus === 'none'\\\"\\r\\n            class=\\\"item-not-fulfilled\\\"\\r\\n            shape=\\\"exclamation-circle\\\"\\r\\n        ></clr-icon>\\r\\n    </button>\\r\\n    <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n        <label class=\\\"dropdown-header\\\" *ngIf=\\\"fulfillmentStatus === 'full'\\\">\\r\\n            {{ 'order.line-fulfillment-all' | translate }}\\r\\n        </label>\\r\\n        <label class=\\\"dropdown-header\\\" *ngIf=\\\"fulfillmentStatus === 'partial'\\\">\\r\\n            {{\\r\\n                'order.line-fulfillment-partial' | translate: { total: line.quantity, count: fulfilledCount }\\r\\n            }}\\r\\n        </label>\\r\\n        <label class=\\\"dropdown-header\\\" *ngIf=\\\"fulfillmentStatus === 'none'\\\">\\r\\n            {{ 'order.line-fulfillment-none' | translate }}\\r\\n        </label>\\r\\n        <div class=\\\"fulfillment-detail\\\" *ngFor=\\\"let item of fulfillments\\\">\\r\\n            <div class=\\\"fulfillment-title\\\">\\r\\n                {{ 'order.fulfillment' | translate }} #{{ item.fulfillment.id }} ({{\\r\\n                    'order.item-count' | translate: { count: item.count }\\r\\n                }})\\r\\n            </div>\\r\\n            <vdr-labeled-data [label]=\\\"'common.created-at' | translate\\\">\\r\\n                {{ item.fulfillment.createdAt | localeDate: 'medium' }}\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-labeled-data [label]=\\\"'order.fulfillment-method' | translate\\\">\\r\\n                {{ item.fulfillment.method }}\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-labeled-data\\r\\n                *ngIf=\\\"item.fulfillment.trackingCode\\\"\\r\\n                [label]=\\\"'order.tracking-code' | translate\\\"\\r\\n            >\\r\\n                {{ item.fulfillment.trackingCode }}\\r\\n            </vdr-labeled-data>\\r\\n        </div>\\r\\n    </vdr-dropdown-menu>\\r\\n</vdr-dropdown>\\r\\n\", styles: [\".item-fulfilled{color:var(--color-success-700)}.item-partially-fulfilled{color:var(--color-warning-700)}.item-not-fulfilled{color:var(--color-error-700)}.fulfillment-detail{margin:6px 12px}.fulfillment-detail:not(:last-of-type){border-bottom:1px dashed var(--color-component-border-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LineFulfillmentComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-line-fulfillment', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-dropdown class=\\\"search-settings-menu\\\" *ngIf=\\\"fulfilledCount || orderState === 'PartiallyDelivered'\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n        <clr-icon *ngIf=\\\"fulfillmentStatus === 'full'\\\" class=\\\"item-fulfilled\\\" shape=\\\"check-circle\\\"></clr-icon>\\r\\n        <clr-icon\\r\\n            *ngIf=\\\"fulfillmentStatus === 'partial'\\\"\\r\\n            class=\\\"item-partially-fulfilled\\\"\\r\\n            shape=\\\"check-circle\\\"\\r\\n        ></clr-icon>\\r\\n        <clr-icon\\r\\n            *ngIf=\\\"fulfillmentStatus === 'none'\\\"\\r\\n            class=\\\"item-not-fulfilled\\\"\\r\\n            shape=\\\"exclamation-circle\\\"\\r\\n        ></clr-icon>\\r\\n    </button>\\r\\n    <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n        <label class=\\\"dropdown-header\\\" *ngIf=\\\"fulfillmentStatus === 'full'\\\">\\r\\n            {{ 'order.line-fulfillment-all' | translate }}\\r\\n        </label>\\r\\n        <label class=\\\"dropdown-header\\\" *ngIf=\\\"fulfillmentStatus === 'partial'\\\">\\r\\n            {{\\r\\n                'order.line-fulfillment-partial' | translate: { total: line.quantity, count: fulfilledCount }\\r\\n            }}\\r\\n        </label>\\r\\n        <label class=\\\"dropdown-header\\\" *ngIf=\\\"fulfillmentStatus === 'none'\\\">\\r\\n            {{ 'order.line-fulfillment-none' | translate }}\\r\\n        </label>\\r\\n        <div class=\\\"fulfillment-detail\\\" *ngFor=\\\"let item of fulfillments\\\">\\r\\n            <div class=\\\"fulfillment-title\\\">\\r\\n                {{ 'order.fulfillment' | translate }} #{{ item.fulfillment.id }} ({{\\r\\n                    'order.item-count' | translate: { count: item.count }\\r\\n                }})\\r\\n            </div>\\r\\n            <vdr-labeled-data [label]=\\\"'common.created-at' | translate\\\">\\r\\n                {{ item.fulfillment.createdAt | localeDate: 'medium' }}\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-labeled-data [label]=\\\"'order.fulfillment-method' | translate\\\">\\r\\n                {{ item.fulfillment.method }}\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-labeled-data\\r\\n                *ngIf=\\\"item.fulfillment.trackingCode\\\"\\r\\n                [label]=\\\"'order.tracking-code' | translate\\\"\\r\\n            >\\r\\n                {{ item.fulfillment.trackingCode }}\\r\\n            </vdr-labeled-data>\\r\\n        </div>\\r\\n    </vdr-dropdown-menu>\\r\\n</vdr-dropdown>\\r\\n\", styles: [\".item-fulfilled{color:var(--color-success-700)}.item-partially-fulfilled{color:var(--color-warning-700)}.item-not-fulfilled{color:var(--color-error-700)}.fulfillment-detail{margin:6px 12px}.fulfillment-detail:not(:last-of-type){border-bottom:1px dashed var(--color-component-border-200)}\\n\"] }]\n        }], propDecorators: { line: [{\n                type: Input\n            }], allOrderFulfillments: [{\n                type: Input\n            }], orderState: [{\n                type: Input\n            }] } });\n\nclass LineRefundsComponent {\n    getRefundedCount() {\n        const refundLines = this.payments\n            ?.reduce((all, payment) => [...all, ...payment.refunds], [])\n            .filter(refund => refund.state !== 'Failed')\n            .reduce((all, refund) => [...all, ...refund.lines], []) ?? [];\n        return refundLines\n            .filter(i => i.orderLineId === this.line.id)\n            .reduce((sum, i) => sum + i.quantity, 0);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LineRefundsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: LineRefundsComponent, selector: \"vdr-line-refunds\", inputs: { line: \"line\", payments: \"payments\" }, ngImport: i0, template: \"<span *ngIf=\\\"getRefundedCount()\\\" [title]=\\\"'order.refunded-count' | translate: { count: getRefundedCount() }\\\">\\r\\n    <clr-icon shape=\\\"redo\\\" class=\\\"is-solid\\\" dir=\\\"down\\\"></clr-icon>\\r\\n</span>\\r\\n\", styles: [\":host{color:var(--color-error-500)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.Dir, selector: \"[dir]\", inputs: [\"dir\"], outputs: [\"dirChange\"], exportAs: [\"dir\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LineRefundsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-line-refunds', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span *ngIf=\\\"getRefundedCount()\\\" [title]=\\\"'order.refunded-count' | translate: { count: getRefundedCount() }\\\">\\r\\n    <clr-icon shape=\\\"redo\\\" class=\\\"is-solid\\\" dir=\\\"down\\\"></clr-icon>\\r\\n</span>\\r\\n\", styles: [\":host{color:var(--color-error-500)}\\n\"] }]\n        }], propDecorators: { line: [{\n                type: Input\n            }], payments: [{\n                type: Input\n            }] } });\n\nclass OrderTotalColumnComponent extends DataTable2ColumnComponent {\n    constructor() {\n        super(...arguments);\n        this.orderable = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderTotalColumnComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderTotalColumnComponent, selector: \"vdr-order-total-column\", exportAs: [\"row\"], usesInheritance: true, ngImport: i0, template: ``, isInline: true }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderTotalColumnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vdr-order-total-column',\n                    template: ``,\n                    exportAs: 'row',\n                }]\n        }] });\n\nclass OrderDataTableComponent extends DataTable2Component {\n    get allColumns() {\n        return [...(this.columns ?? []), ...(this.customFieldColumns ?? []), ...(this.totalColumns ?? [])];\n    }\n    getPromotionLink(promotion) {\n        const id = promotion.adjustmentSource.split(':')[1];\n        return ['/marketing', 'promotions', id];\n    }\n    getCouponCodeForAdjustment(order, promotionAdjustment) {\n        const id = promotionAdjustment.adjustmentSource.split(':')[1];\n        const promotion = order.promotions.find(p => p.id === id);\n        if (promotion) {\n            return promotion.couponCode || undefined;\n        }\n    }\n    getShippingNames(order) {\n        if (order.shippingLines.length) {\n            return order.shippingLines.map(shippingLine => shippingLine.shippingMethod.name).join(', ');\n        }\n        else {\n            return '';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderDataTableComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderDataTableComponent, selector: \"vdr-order-data-table\", inputs: { order: \"order\" }, queries: [{ propertyName: \"totalColumns\", predicate: OrderTotalColumnComponent }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"bulk-actions\\\">\\r\\n    <ng-content select=\\\"vdr-bulk-action-menu\\\"></ng-content>\\r\\n</div>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n    <table\\r\\n        class=\\\"\\\"\\r\\n        [class.no-select]=\\\"disableSelect\\\"\\r\\n    >\\r\\n        <thead [class.items-selected]=\\\"selectionManager?.selection.length\\\">\\r\\n            <tr class=\\\"heading-row\\\">\\r\\n                <th *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\">\\r\\n                    <input\\r\\n                        type=\\\"checkbox\\\"\\r\\n                        clrCheckbox\\r\\n                        [checked]=\\\"selectionManager?.areAllCurrentItemsSelected()\\\"\\r\\n                        (change)=\\\"onToggleAllClick()\\\"\\r\\n                    />\\r\\n                </th>\\r\\n                <th\\r\\n                    *ngFor=\\\"let column of visibleSortedColumns; last as isLast\\\"\\r\\n                    [class.expand]=\\\"column.expand\\\"\\r\\n                >\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <vdr-ui-extension-point\\r\\n                            [locationId]=\\\"id\\\"\\r\\n                            [metadata]=\\\"column.id\\\"\\r\\n                            api=\\\"dataTable\\\"\\r\\n                            [topPx]=\\\"-6\\\"\\r\\n                            [leftPx]=\\\"-24\\\"\\r\\n                            display=\\\"block\\\"\\r\\n                        >\\r\\n                            <span>{{ column.heading }}</span>\\r\\n                        </vdr-ui-extension-point>\\r\\n                        <div *ngIf=\\\"column.sort as sort\\\" class=\\\"sort-toggle\\\">\\r\\n                            <button (click)=\\\"sort.toggleSortOrder()\\\" [class.active]=\\\"sort.sortOrder\\\">\\r\\n                                <clr-icon *ngIf=\\\"!sort.sortOrder\\\" shape=\\\"two-way-arrows left\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'ASC'\\\" shape=\\\"arrow up\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'DESC'\\\" shape=\\\"arrow down\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <div class=\\\"sort-label\\\" *ngIf=\\\"sort.sortOrder\\\">{{ sort.sortOrder }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <div class=\\\"column-picker\\\">\\r\\n                        <vdr-data-table-colum-picker\\r\\n                            [uiLanguage]=\\\"uiLanguage$ | async\\\"\\r\\n                            [columns]=\\\"sortedColumns\\\"\\r\\n                            (reorder)=\\\"onColumnReorder($event)\\\"\\r\\n                            (resetColumns)=\\\"onColumnsReset()\\\"\\r\\n                        ></vdr-data-table-colum-picker>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"searchComponent || customSearchTemplate || filters?.length\\\">\\r\\n                <th\\r\\n                    [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\"\\r\\n                    class=\\\"filter-row\\\"\\r\\n                    [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                >\\r\\n                    <button\\r\\n                        class=\\\"button-ghost toggle-search-filter-row\\\"\\r\\n                        [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                        (click)=\\\"toggleSearchFilterRow()\\\"\\r\\n                        [title]=\\\"'common.search-and-filter-list' | translate\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"search\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <div class=\\\"filter-row-wrapper\\\" [class.hidden]=\\\"!showSearchFilterRow\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"searchComponent?.template\\\"></ng-container>\\r\\n                        <ng-container *ngTemplateOutlet=\\\"customSearchTemplate\\\"></ng-container>\\r\\n                        <ng-container *ngIf=\\\"filters\\\">\\r\\n                            <div class=\\\"filters\\\">\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngFor=\\\"let activeFilter of filters.activeFilters\\\"\\r\\n                                    [filterWithValue]=\\\"activeFilter\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngIf=\\\"filters.length\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr\\r\\n                *ngFor=\\\"\\r\\n                    let item of items\\r\\n                        | paginate\\r\\n                            : {\\r\\n                                  id: id,\\r\\n                                  itemsPerPage: itemsPerPage,\\r\\n                                  currentPage: currentPage,\\r\\n                                  totalItems: totalItems\\r\\n                              };\\r\\n                    index as i;\\r\\n                    trackBy: trackByFn\\r\\n                \\\"\\r\\n            >\\r\\n                <td *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\" [class.active]=\\\"activeIndex === i\\\">\\r\\n                    <input\\r\\n                        type=\\\"checkbox\\\"\\r\\n                        clrCheckbox\\r\\n                        [checked]=\\\"selectionManager?.isSelected(item)\\\"\\r\\n                        (click)=\\\"onRowClick(item, $event)\\\"\\r\\n                    />\\r\\n                </td>\\r\\n                <td *ngFor=\\\"let column of visibleSortedColumns\\\" [class.active]=\\\"activeIndex === i\\\">\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <ng-container\\r\\n                            *ngIf=\\\"customComponents.get(column.id) as componentConfig; else defaultComponent\\\"\\r\\n                        >\\r\\n                            <ng-container\\r\\n                                *ngComponentOutlet=\\\"\\r\\n                                    componentConfig.config.component;\\r\\n                                    inputs: { rowItem: item };\\r\\n                                    injector: componentConfig.injector\\r\\n                                \\\"\\r\\n                            ></ng-container>\\r\\n                        </ng-container>\\r\\n                        <ng-template #defaultComponent>\\r\\n                            <ng-container\\r\\n                                *ngTemplateOutlet=\\\"column.template; context: { item: item, index: i }\\\"\\r\\n                            ></ng-container>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td [class.active]=\\\"activeIndex === i\\\"><!-- column select --></td>\\r\\n            </tr>\\r\\n            <ng-container>\\r\\n                <tr *ngIf=\\\"!items?.length\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\">\\r\\n                        <vdr-empty-placeholder [emptyStateLabel]=\\\"'order.order-is-empty' | translate\\\"></vdr-empty-placeholder>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n            <tr class=\\\"surcharge\\\" *ngFor=\\\"let surcharge of order.surcharges\\\">\\r\\n                <td class=\\\"align-middle name left\\\" colspan=\\\"2\\\">{{ surcharge.description }}</td>\\r\\n                <td class=\\\"align-middle sku\\\">{{ surcharge.sku }}</td>\\r\\n                <td class=\\\"align-middle\\\" [attr.colspan]=\\\"visibleSortedColumns.length - 4\\\"></td>\\r\\n                <td class=\\\"align-middle total\\\">\\r\\n                    {{ surcharge.priceWithTax | localeCurrency : order.currencyCode }}\\r\\n                    <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                        {{ surcharge.price | localeCurrency : order.currencyCode }}\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td><!-- column select --></td>\\r\\n            </tr>\\r\\n            <ng-container *ngFor=\\\"let discount of order.discounts\\\">\\r\\n                <tr class=\\\"order-adjustment\\\" *ngIf=\\\"discount.type !== 'OTHER'\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length - 1\\\" class=\\\"\\\">\\r\\n                        <a [routerLink]=\\\"getPromotionLink(discount)\\\">{{ discount.description }}</a>\\r\\n                        <vdr-chip *ngIf=\\\"getCouponCodeForAdjustment(order, discount) as couponCode\\\">{{\\r\\n                            couponCode\\r\\n                        }}</vdr-chip>\\r\\n                    </td>\\r\\n                    <td class=\\\"\\\">\\r\\n                        {{ discount.amountWithTax | localeCurrency : order.currencyCode }}\\r\\n                        <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                            {{ discount.amount | localeCurrency : order.currencyCode }}\\r\\n                        </div>\\r\\n                    </td>\\r\\n                    <td><!-- column select --></td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n            <tr class=\\\"sub-total\\\">\\r\\n                <td class=\\\"\\\">{{ 'order.sub-total' | translate }}</td>\\r\\n                <td [attr.colspan]=\\\"visibleSortedColumns.length - 2\\\"></td>\\r\\n                <td class=\\\"clr-align-middle\\\">\\r\\n                    {{ order.subTotalWithTax | localeCurrency : order.currencyCode }}\\r\\n                    <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                        {{ order.subTotal | localeCurrency : order.currencyCode }}\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td><!-- column select --></td>\\r\\n            </tr>\\r\\n            <tr class=\\\"shipping\\\">\\r\\n                <td class=\\\"\\\">{{ 'order.shipping' | translate }}</td>\\r\\n                <td [attr.colspan]=\\\"visibleSortedColumns.length - 2\\\">\\r\\n                    <vdr-chip *ngFor=\\\"let shippingLine of order.shippingLines\\\" class=\\\"shipping-method-name\\\">\\r\\n                        {{ shippingLine.shippingMethod.name }}\\r\\n                    </vdr-chip>\\r\\n                </td>\\r\\n                <td class=\\\"clr-align-middle\\\">\\r\\n                    {{ order.shippingWithTax | localeCurrency : order.currencyCode }}\\r\\n                    <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                        {{ order.shipping | localeCurrency : order.currencyCode }}\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td><!-- column select --></td>\\r\\n            </tr>\\r\\n            <tr class=\\\"total\\\">\\r\\n                <td class=\\\"\\\">{{ 'order.total' | translate }}</td>\\r\\n                <td [attr.colspan]=\\\"visibleSortedColumns.length - 2\\\"></td>\\r\\n                <td class=\\\"clr-align-middle\\\">\\r\\n                    {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n                    <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                        {{ order.total | localeCurrency : order.currencyCode }}\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td><!-- column select --></td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\", styles: [\":host{display:block;max-width:100%;position:relative;margin-bottom:calc(var(--space-unit) * 4);container-type:inline-size}th{border-bottom:1px solid var(--color-table-header-border);color:var(--color-weight-700);font-size:var(--font-size-xs);font-weight:600;text-transform:uppercase;position:relative;white-space:nowrap;background-color:transparent}th,td{padding:calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 1);color:var(--color-text-100)}tr td:first-of-type,tr th:first-of-type{text-align:center}@media screen and (min-width: 992px){tr td:first-of-type,tr th:first-of-type{padding-inline-start:var(--surface-margin-left);text-align:start}}th:last-of-type,td:last-of-type{border-inline-end:1px solid var(--color-table-header-border)}tr:first-of-type th:last-of-type{border-image:linear-gradient(0deg,var(--color-table-header-border),transparent) 1}tr:last-of-type td:last-of-type{border-image:linear-gradient(180deg,var(--color-table-header-border),transparent) 1}tbody td{border-bottom:1px solid var(--color-table-row-separator)}tbody tr:hover{background-color:var(--color-table-row-hover-bg)}.bulk-actions{margin-inline-start:calc(var(--space-unit) * 5);background-color:var(--color-surface-bg);z-index:10;display:flex;position:absolute;top:5px;height:40px}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 8.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 10.5)}}.table-wrapper{display:block;overflow-y:hidden;overflow-x:auto;position:relative;width:100%;max-width:var(--surface-width)}table{width:100%}table.no-select{-webkit-user-select:none;user-select:none}.column-picker{width:24px}.sort-toggle{display:flex;align-items:center;margin-inline-start:calc(var(--space-unit) * .5)}.sort-toggle button{border:0;border-radius:var(--border-radius-lg);color:var(--color-weight-500);padding:0 2px;cursor:pointer;background-color:transparent}.sort-toggle button.active{color:var(--color-primary-700)}.sort-toggle .sort-label{margin-inline-start:calc(var(--space-unit) * .5);font-size:10px;color:var(--color-primary-600);font-weight:400}.toggle-search-filter-row{position:absolute;top:-12px;left:4px}@media screen and (min-width: 1280px){.toggle-search-filter-row{left:8px}}.toggle-search-filter-row.active{background-color:var(--color-primary-700);color:var(--color-primary-100);border-color:var(--color-primary-700)}th.filter-row{position:relative;font-size:var(--font-size-base);font-weight:400;background-color:var(--color-weight-100);box-shadow:var(--data-table-filter-box-shadow);border-left-width:0;border-right-width:0;text-align:initial;padding:0}th.filter-row input{width:100%}th.filter-row.active{border-bottom:1px solid var(--color-table-header-border)}th.filter-row .filters{margin-top:calc(var(--space-unit) * 1);display:flex;flex-wrap:wrap;gap:calc(var(--space-unit) * .5)}.filter-row-wrapper{padding:calc(var(--space-unit) * 4);padding-inline-start:0;max-height:150px;transition:max-height .2s,padding .2s,opacity .2s}.filter-row-wrapper.hidden{max-height:0px;padding-top:0;padding-bottom:0;overflow:hidden;opacity:0}.cell-link{display:block;width:100%;height:100%}td.active{background-color:var(--color-table-row-active-bg)}.cell-content{display:flex;align-items:center;line-height:var(--font-size-sm);color:var(--color-weight-700)}.cell-content.left{justify-content:flex-start}.cell-content.center{justify-content:center}.cell-content.right{justify-content:flex-end}.selection-col{width:calc(var(--space-unit) * 8)}vdr-empty-placeholder{width:100%}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:var(--space-unit);margin-inline-start:var(--surface-margin-left);margin-inline-end:var(--space-unit)}.total-items-count{font-size:var(--font-size-xs)}@container (max-width: 500px){.total-items-count{display:none}}\\n\", \":host .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}:host .sub-total td{border-top:1px dashed var(--color-component-border-200)}:host .total td{font-weight:700;border-top:1px dashed var(--color-component-border-200)}:host td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}:host img{border-radius:var(--border-radius-img)}:host .order-line-custom-fields{display:flex;flex-wrap:wrap}:host .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-inline-end:18px}:host .draft-qty{max-width:48px}:host .order-line-custom-field{background-color:var(--color-component-bg-100)}:host .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}:host .net-price{font-size:11px;color:var(--color-text-300);line-height:14px}:host .promotions-label{text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}:host .thumb img{width:50px;height:50px}:host .shipping-method-name{font-size:var(--font-size-xs);margin-inline-end:2px}:host .order-placed-quantity{text-decoration:line-through;color:var(--color-text-300);margin-inline-end:2px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i2$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2$1.NgComponentOutlet, selector: \"[ngComponentOutlet]\", inputs: [\"ngComponentOutlet\", \"ngComponentOutletInputs\", \"ngComponentOutletInjector\", \"ngComponentOutletContent\", \"ngComponentOutletNgModule\", \"ngComponentOutletNgModuleFactory\"] }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.EmptyPlaceholderComponent, selector: \"vdr-empty-placeholder\", inputs: [\"emptyStateLabel\"] }, { kind: \"component\", type: i1.UiExtensionPointComponent, selector: \"vdr-ui-extension-point\", inputs: [\"locationId\", \"metadata\", \"topPx\", \"leftPx\", \"display\", \"api\"] }, { kind: \"component\", type: i1.DataTableFiltersComponent, selector: \"vdr-data-table-filters\", inputs: [\"filters\", \"filterWithValue\"] }, { kind: \"component\", type: i1.DataTableColumnPickerComponent, selector: \"vdr-data-table-colum-picker\", inputs: [\"columns\", \"uiLanguage\"], outputs: [\"reorder\", \"resetColumns\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$1.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderDataTableComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-data-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"bulk-actions\\\">\\r\\n    <ng-content select=\\\"vdr-bulk-action-menu\\\"></ng-content>\\r\\n</div>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n    <table\\r\\n        class=\\\"\\\"\\r\\n        [class.no-select]=\\\"disableSelect\\\"\\r\\n    >\\r\\n        <thead [class.items-selected]=\\\"selectionManager?.selection.length\\\">\\r\\n            <tr class=\\\"heading-row\\\">\\r\\n                <th *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\">\\r\\n                    <input\\r\\n                        type=\\\"checkbox\\\"\\r\\n                        clrCheckbox\\r\\n                        [checked]=\\\"selectionManager?.areAllCurrentItemsSelected()\\\"\\r\\n                        (change)=\\\"onToggleAllClick()\\\"\\r\\n                    />\\r\\n                </th>\\r\\n                <th\\r\\n                    *ngFor=\\\"let column of visibleSortedColumns; last as isLast\\\"\\r\\n                    [class.expand]=\\\"column.expand\\\"\\r\\n                >\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <vdr-ui-extension-point\\r\\n                            [locationId]=\\\"id\\\"\\r\\n                            [metadata]=\\\"column.id\\\"\\r\\n                            api=\\\"dataTable\\\"\\r\\n                            [topPx]=\\\"-6\\\"\\r\\n                            [leftPx]=\\\"-24\\\"\\r\\n                            display=\\\"block\\\"\\r\\n                        >\\r\\n                            <span>{{ column.heading }}</span>\\r\\n                        </vdr-ui-extension-point>\\r\\n                        <div *ngIf=\\\"column.sort as sort\\\" class=\\\"sort-toggle\\\">\\r\\n                            <button (click)=\\\"sort.toggleSortOrder()\\\" [class.active]=\\\"sort.sortOrder\\\">\\r\\n                                <clr-icon *ngIf=\\\"!sort.sortOrder\\\" shape=\\\"two-way-arrows left\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'ASC'\\\" shape=\\\"arrow up\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'DESC'\\\" shape=\\\"arrow down\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <div class=\\\"sort-label\\\" *ngIf=\\\"sort.sortOrder\\\">{{ sort.sortOrder }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <div class=\\\"column-picker\\\">\\r\\n                        <vdr-data-table-colum-picker\\r\\n                            [uiLanguage]=\\\"uiLanguage$ | async\\\"\\r\\n                            [columns]=\\\"sortedColumns\\\"\\r\\n                            (reorder)=\\\"onColumnReorder($event)\\\"\\r\\n                            (resetColumns)=\\\"onColumnsReset()\\\"\\r\\n                        ></vdr-data-table-colum-picker>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"searchComponent || customSearchTemplate || filters?.length\\\">\\r\\n                <th\\r\\n                    [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\"\\r\\n                    class=\\\"filter-row\\\"\\r\\n                    [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                >\\r\\n                    <button\\r\\n                        class=\\\"button-ghost toggle-search-filter-row\\\"\\r\\n                        [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                        (click)=\\\"toggleSearchFilterRow()\\\"\\r\\n                        [title]=\\\"'common.search-and-filter-list' | translate\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"search\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <div class=\\\"filter-row-wrapper\\\" [class.hidden]=\\\"!showSearchFilterRow\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"searchComponent?.template\\\"></ng-container>\\r\\n                        <ng-container *ngTemplateOutlet=\\\"customSearchTemplate\\\"></ng-container>\\r\\n                        <ng-container *ngIf=\\\"filters\\\">\\r\\n                            <div class=\\\"filters\\\">\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngFor=\\\"let activeFilter of filters.activeFilters\\\"\\r\\n                                    [filterWithValue]=\\\"activeFilter\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngIf=\\\"filters.length\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr\\r\\n                *ngFor=\\\"\\r\\n                    let item of items\\r\\n                        | paginate\\r\\n                            : {\\r\\n                                  id: id,\\r\\n                                  itemsPerPage: itemsPerPage,\\r\\n                                  currentPage: currentPage,\\r\\n                                  totalItems: totalItems\\r\\n                              };\\r\\n                    index as i;\\r\\n                    trackBy: trackByFn\\r\\n                \\\"\\r\\n            >\\r\\n                <td *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\" [class.active]=\\\"activeIndex === i\\\">\\r\\n                    <input\\r\\n                        type=\\\"checkbox\\\"\\r\\n                        clrCheckbox\\r\\n                        [checked]=\\\"selectionManager?.isSelected(item)\\\"\\r\\n                        (click)=\\\"onRowClick(item, $event)\\\"\\r\\n                    />\\r\\n                </td>\\r\\n                <td *ngFor=\\\"let column of visibleSortedColumns\\\" [class.active]=\\\"activeIndex === i\\\">\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <ng-container\\r\\n                            *ngIf=\\\"customComponents.get(column.id) as componentConfig; else defaultComponent\\\"\\r\\n                        >\\r\\n                            <ng-container\\r\\n                                *ngComponentOutlet=\\\"\\r\\n                                    componentConfig.config.component;\\r\\n                                    inputs: { rowItem: item };\\r\\n                                    injector: componentConfig.injector\\r\\n                                \\\"\\r\\n                            ></ng-container>\\r\\n                        </ng-container>\\r\\n                        <ng-template #defaultComponent>\\r\\n                            <ng-container\\r\\n                                *ngTemplateOutlet=\\\"column.template; context: { item: item, index: i }\\\"\\r\\n                            ></ng-container>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td [class.active]=\\\"activeIndex === i\\\"><!-- column select --></td>\\r\\n            </tr>\\r\\n            <ng-container>\\r\\n                <tr *ngIf=\\\"!items?.length\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\">\\r\\n                        <vdr-empty-placeholder [emptyStateLabel]=\\\"'order.order-is-empty' | translate\\\"></vdr-empty-placeholder>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n            <tr class=\\\"surcharge\\\" *ngFor=\\\"let surcharge of order.surcharges\\\">\\r\\n                <td class=\\\"align-middle name left\\\" colspan=\\\"2\\\">{{ surcharge.description }}</td>\\r\\n                <td class=\\\"align-middle sku\\\">{{ surcharge.sku }}</td>\\r\\n                <td class=\\\"align-middle\\\" [attr.colspan]=\\\"visibleSortedColumns.length - 4\\\"></td>\\r\\n                <td class=\\\"align-middle total\\\">\\r\\n                    {{ surcharge.priceWithTax | localeCurrency : order.currencyCode }}\\r\\n                    <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                        {{ surcharge.price | localeCurrency : order.currencyCode }}\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td><!-- column select --></td>\\r\\n            </tr>\\r\\n            <ng-container *ngFor=\\\"let discount of order.discounts\\\">\\r\\n                <tr class=\\\"order-adjustment\\\" *ngIf=\\\"discount.type !== 'OTHER'\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length - 1\\\" class=\\\"\\\">\\r\\n                        <a [routerLink]=\\\"getPromotionLink(discount)\\\">{{ discount.description }}</a>\\r\\n                        <vdr-chip *ngIf=\\\"getCouponCodeForAdjustment(order, discount) as couponCode\\\">{{\\r\\n                            couponCode\\r\\n                        }}</vdr-chip>\\r\\n                    </td>\\r\\n                    <td class=\\\"\\\">\\r\\n                        {{ discount.amountWithTax | localeCurrency : order.currencyCode }}\\r\\n                        <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                            {{ discount.amount | localeCurrency : order.currencyCode }}\\r\\n                        </div>\\r\\n                    </td>\\r\\n                    <td><!-- column select --></td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n            <tr class=\\\"sub-total\\\">\\r\\n                <td class=\\\"\\\">{{ 'order.sub-total' | translate }}</td>\\r\\n                <td [attr.colspan]=\\\"visibleSortedColumns.length - 2\\\"></td>\\r\\n                <td class=\\\"clr-align-middle\\\">\\r\\n                    {{ order.subTotalWithTax | localeCurrency : order.currencyCode }}\\r\\n                    <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                        {{ order.subTotal | localeCurrency : order.currencyCode }}\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td><!-- column select --></td>\\r\\n            </tr>\\r\\n            <tr class=\\\"shipping\\\">\\r\\n                <td class=\\\"\\\">{{ 'order.shipping' | translate }}</td>\\r\\n                <td [attr.colspan]=\\\"visibleSortedColumns.length - 2\\\">\\r\\n                    <vdr-chip *ngFor=\\\"let shippingLine of order.shippingLines\\\" class=\\\"shipping-method-name\\\">\\r\\n                        {{ shippingLine.shippingMethod.name }}\\r\\n                    </vdr-chip>\\r\\n                </td>\\r\\n                <td class=\\\"clr-align-middle\\\">\\r\\n                    {{ order.shippingWithTax | localeCurrency : order.currencyCode }}\\r\\n                    <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                        {{ order.shipping | localeCurrency : order.currencyCode }}\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td><!-- column select --></td>\\r\\n            </tr>\\r\\n            <tr class=\\\"total\\\">\\r\\n                <td class=\\\"\\\">{{ 'order.total' | translate }}</td>\\r\\n                <td [attr.colspan]=\\\"visibleSortedColumns.length - 2\\\"></td>\\r\\n                <td class=\\\"clr-align-middle\\\">\\r\\n                    {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n                    <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                        {{ order.total | localeCurrency : order.currencyCode }}\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td><!-- column select --></td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\", styles: [\":host{display:block;max-width:100%;position:relative;margin-bottom:calc(var(--space-unit) * 4);container-type:inline-size}th{border-bottom:1px solid var(--color-table-header-border);color:var(--color-weight-700);font-size:var(--font-size-xs);font-weight:600;text-transform:uppercase;position:relative;white-space:nowrap;background-color:transparent}th,td{padding:calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 1);color:var(--color-text-100)}tr td:first-of-type,tr th:first-of-type{text-align:center}@media screen and (min-width: 992px){tr td:first-of-type,tr th:first-of-type{padding-inline-start:var(--surface-margin-left);text-align:start}}th:last-of-type,td:last-of-type{border-inline-end:1px solid var(--color-table-header-border)}tr:first-of-type th:last-of-type{border-image:linear-gradient(0deg,var(--color-table-header-border),transparent) 1}tr:last-of-type td:last-of-type{border-image:linear-gradient(180deg,var(--color-table-header-border),transparent) 1}tbody td{border-bottom:1px solid var(--color-table-row-separator)}tbody tr:hover{background-color:var(--color-table-row-hover-bg)}.bulk-actions{margin-inline-start:calc(var(--space-unit) * 5);background-color:var(--color-surface-bg);z-index:10;display:flex;position:absolute;top:5px;height:40px}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 8.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 10.5)}}.table-wrapper{display:block;overflow-y:hidden;overflow-x:auto;position:relative;width:100%;max-width:var(--surface-width)}table{width:100%}table.no-select{-webkit-user-select:none;user-select:none}.column-picker{width:24px}.sort-toggle{display:flex;align-items:center;margin-inline-start:calc(var(--space-unit) * .5)}.sort-toggle button{border:0;border-radius:var(--border-radius-lg);color:var(--color-weight-500);padding:0 2px;cursor:pointer;background-color:transparent}.sort-toggle button.active{color:var(--color-primary-700)}.sort-toggle .sort-label{margin-inline-start:calc(var(--space-unit) * .5);font-size:10px;color:var(--color-primary-600);font-weight:400}.toggle-search-filter-row{position:absolute;top:-12px;left:4px}@media screen and (min-width: 1280px){.toggle-search-filter-row{left:8px}}.toggle-search-filter-row.active{background-color:var(--color-primary-700);color:var(--color-primary-100);border-color:var(--color-primary-700)}th.filter-row{position:relative;font-size:var(--font-size-base);font-weight:400;background-color:var(--color-weight-100);box-shadow:var(--data-table-filter-box-shadow);border-left-width:0;border-right-width:0;text-align:initial;padding:0}th.filter-row input{width:100%}th.filter-row.active{border-bottom:1px solid var(--color-table-header-border)}th.filter-row .filters{margin-top:calc(var(--space-unit) * 1);display:flex;flex-wrap:wrap;gap:calc(var(--space-unit) * .5)}.filter-row-wrapper{padding:calc(var(--space-unit) * 4);padding-inline-start:0;max-height:150px;transition:max-height .2s,padding .2s,opacity .2s}.filter-row-wrapper.hidden{max-height:0px;padding-top:0;padding-bottom:0;overflow:hidden;opacity:0}.cell-link{display:block;width:100%;height:100%}td.active{background-color:var(--color-table-row-active-bg)}.cell-content{display:flex;align-items:center;line-height:var(--font-size-sm);color:var(--color-weight-700)}.cell-content.left{justify-content:flex-start}.cell-content.center{justify-content:center}.cell-content.right{justify-content:flex-end}.selection-col{width:calc(var(--space-unit) * 8)}vdr-empty-placeholder{width:100%}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:var(--space-unit);margin-inline-start:var(--surface-margin-left);margin-inline-end:var(--space-unit)}.total-items-count{font-size:var(--font-size-xs)}@container (max-width: 500px){.total-items-count{display:none}}\\n\", \":host .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}:host .sub-total td{border-top:1px dashed var(--color-component-border-200)}:host .total td{font-weight:700;border-top:1px dashed var(--color-component-border-200)}:host td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}:host img{border-radius:var(--border-radius-img)}:host .order-line-custom-fields{display:flex;flex-wrap:wrap}:host .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-inline-end:18px}:host .draft-qty{max-width:48px}:host .order-line-custom-field{background-color:var(--color-component-bg-100)}:host .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}:host .net-price{font-size:11px;color:var(--color-text-300);line-height:14px}:host .promotions-label{text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}:host .thumb img{width:50px;height:50px}:host .shipping-method-name{font-size:var(--font-size-xs);margin-inline-end:2px}:host .order-placed-quantity{text-decoration:line-through;color:var(--color-text-300);margin-inline-end:2px}\\n\"] }]\n        }], propDecorators: { totalColumns: [{\n                type: ContentChildren,\n                args: [OrderTotalColumnComponent]\n            }], order: [{\n                type: Input\n            }] } });\n\nclass OrderTableComponent {\n    constructor() {\n        this.isDraft = false;\n        this.adjust = new EventEmitter();\n        this.remove = new EventEmitter();\n        this.orderLineCustomFieldsVisible = false;\n        this.customFieldsForLine = {};\n    }\n    get visibleOrderLineCustomFields() {\n        return this.orderLineCustomFieldsVisible ? this.orderLineCustomFields : [];\n    }\n    get showElided() {\n        return !this.orderLineCustomFieldsVisible && 0 < this.orderLineCustomFields.length;\n    }\n    ngOnInit() {\n        this.orderLineCustomFieldsVisible = this.orderLineCustomFields.length < 2;\n        this.getLineCustomFields();\n    }\n    draftInputBlur(line, quantity) {\n        if (line.quantity !== quantity) {\n            this.adjust.emit({ lineId: line.id, quantity });\n        }\n    }\n    toggleOrderLineCustomFields() {\n        this.orderLineCustomFieldsVisible = !this.orderLineCustomFieldsVisible;\n    }\n    getLineDiscounts(line) {\n        return line.discounts.filter(a => a.type === AdjustmentType.PROMOTION);\n    }\n    getLineCustomFields() {\n        for (const line of this.order.lines) {\n            const formGroup = new UntypedFormGroup({});\n            const result = this.orderLineCustomFields\n                .map(config => {\n                const value = line.customFields[config.name];\n                formGroup.addControl(config.name, new UntypedFormControl(value));\n                return {\n                    config,\n                    formGroup,\n                    value,\n                };\n            })\n                .filter(field => this.orderLineCustomFieldsVisible ? true : field.value != null);\n            this.customFieldsForLine[line.id] = result;\n        }\n    }\n    getPromotionLink(promotion) {\n        const id = promotion.adjustmentSource.split(':')[1];\n        return ['/marketing', 'promotions', id];\n    }\n    getCouponCodeForAdjustment(order, promotionAdjustment) {\n        const id = promotionAdjustment.adjustmentSource.split(':')[1];\n        const promotion = order.promotions.find(p => p.id === id);\n        if (promotion) {\n            return promotion.couponCode || undefined;\n        }\n    }\n    getShippingNames(order) {\n        if (order.shippingLines.length) {\n            return order.shippingLines.map(shippingLine => shippingLine.shippingMethod.name).join(', ');\n        }\n        else {\n            return '';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderTableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderTableComponent, selector: \"vdr-order-table\", inputs: { order: \"order\", orderLineCustomFields: \"orderLineCustomFields\", isDraft: \"isDraft\" }, outputs: { adjust: \"adjust\", remove: \"remove\" }, ngImport: i0, template: \"<vdr-order-data-table id=\\\"order-detail-list\\\" [items]=\\\"order.lines\\\" [order]=\\\"order\\\">\\r\\n    <vdr-dt2-column id=\\\"id\\\" [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            {{ line.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n            id=\\\"created-at\\\"\\r\\n            [heading]=\\\"'common.created-at' | translate\\\"\\r\\n            [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            {{ line.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n            id=\\\"updated-at\\\"\\r\\n            [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n            [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            {{ line.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"line.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.product-name' | translate\\\" id=\\\"product-name\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            {{ line.productVariant.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.product-sku' | translate\\\" id=\\\"product-sku\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            {{ line.productVariant.sku }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.unit-price' | translate\\\" id=\\\"unit-price\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            <div class=\\\"unit-price\\\">\\r\\n                {{ line.unitPriceWithTax | localeCurrency : order.currencyCode }}\\r\\n                <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                    {{ line.unitPrice | localeCurrency : order.currencyCode }}\\r\\n                </div>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.quantity' | translate\\\" id=\\\"quantity\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDraft; else draft\\\">\\r\\n                <div class=\\\"flex\\\">\\r\\n                    <div\\r\\n                        *ngIf=\\\"line.orderPlacedQuantity && line.quantity !== line.orderPlacedQuantity\\\"\\r\\n                        class=\\\"order-placed-quantity\\\"\\r\\n                        [title]=\\\"'order.original-quantity-at-checkout' | translate\\\"\\r\\n                    >\\r\\n                        {{ line.orderPlacedQuantity }}\\r\\n                    </div>\\r\\n                    <div>{{ line.quantity }}</div>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <ng-template #draft>\\r\\n                <div class=\\\"flex\\\">\\r\\n                    <input\\r\\n                        class=\\\"draft-qty\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        min=\\\"0\\\"\\r\\n                        #qtyInput\\r\\n                        [value]=\\\"line.quantity\\\"\\r\\n                        (blur)=\\\"draftInputBlur(line, qtyInput.valueAsNumber)\\\"\\r\\n                    />\\r\\n                    <button class=\\\"icon-button\\\" (click)=\\\"remove.emit({ lineId: line.id })\\\">\\r\\n                        <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n            <vdr-line-refunds [line]=\\\"line\\\" [payments]=\\\"order.payments\\\"></vdr-line-refunds>\\r\\n            <vdr-line-fulfillment\\r\\n                [line]=\\\"line\\\"\\r\\n                [orderState]=\\\"order.state\\\"\\r\\n                [allOrderFulfillments]=\\\"order.fulfillments\\\"\\r\\n            ></vdr-line-fulfillment>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of orderLineCustomFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n    />\\r\\n    <vdr-order-total-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            <div class=\\\"unit-price\\\">\\r\\n                {{ line.linePriceWithTax | localeCurrency : order.currencyCode }}\\r\\n                <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                    {{ line.linePrice | localeCurrency : order.currencyCode }}\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <ng-container *ngIf=\\\"getLineDiscounts(line) as discounts\\\">\\r\\n                <vdr-dropdown *ngIf=\\\"discounts.length\\\">\\r\\n                    <div class=\\\"promotions-label\\\" vdrDropdownTrigger>\\r\\n                        {{ 'order.promotions-applied' | translate }}\\r\\n                    </div>\\r\\n                    <vdr-dropdown-menu>\\r\\n                        <div class=\\\"line-promotion\\\" *ngFor=\\\"let discount of discounts\\\">\\r\\n                            <a class=\\\"promotion-name\\\" [routerLink]=\\\"getPromotionLink(discount)\\\">{{\\r\\n                                discount.description\\r\\n                            }}</a>\\r\\n                            <div class=\\\"promotion-amount\\\">\\r\\n                                {{ discount.amountWithTax | localeCurrency : order.currencyCode }}\\r\\n                                <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                                    {{ discount.amount | localeCurrency : order.currencyCode }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </vdr-dropdown-menu>\\r\\n                </vdr-dropdown>\\r\\n            </ng-container>\\r\\n        </ng-template>\\r\\n    </vdr-order-total-column>\\r\\n</vdr-order-data-table>\\r\\n\", styles: [\":host .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}:host .sub-total td{border-top:1px dashed var(--color-component-border-200)}:host .total td{font-weight:700;border-top:1px dashed var(--color-component-border-200)}:host td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}:host img{border-radius:var(--border-radius-img)}:host .order-line-custom-fields{display:flex;flex-wrap:wrap}:host .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-inline-end:18px}:host .draft-qty{max-width:48px}:host .order-line-custom-field{background-color:var(--color-component-bg-100)}:host .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}:host .net-price{font-size:11px;color:var(--color-text-300);line-height:14px}:host .promotions-label{text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}:host .thumb img{width:50px;height:50px}:host .shipping-method-name{font-size:var(--font-size-xs);margin-inline-end:2px}:host .order-placed-quantity{text-decoration:line-through;color:var(--color-text-300);margin-inline-end:2px}::ng-deep .line-promotion{display:flex;justify-content:space-between;padding:6px 12px}::ng-deep .line-promotion .promotion-amount{margin-inline-start:12px}::ng-deep .line-promotion .net-price{font-size:11px;color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: LineFulfillmentComponent, selector: \"vdr-line-fulfillment\", inputs: [\"line\", \"allOrderFulfillments\", \"orderState\"] }, { kind: \"component\", type: LineRefundsComponent, selector: \"vdr-line-refunds\", inputs: [\"line\", \"payments\"] }, { kind: \"component\", type: OrderDataTableComponent, selector: \"vdr-order-data-table\", inputs: [\"order\"] }, { kind: \"component\", type: OrderTotalColumnComponent, selector: \"vdr-order-total-column\", exportAs: [\"row\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderTableComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-order-data-table id=\\\"order-detail-list\\\" [items]=\\\"order.lines\\\" [order]=\\\"order\\\">\\r\\n    <vdr-dt2-column id=\\\"id\\\" [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            {{ line.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n            id=\\\"created-at\\\"\\r\\n            [heading]=\\\"'common.created-at' | translate\\\"\\r\\n            [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            {{ line.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n            id=\\\"updated-at\\\"\\r\\n            [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n            [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            {{ line.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"line.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.product-name' | translate\\\" id=\\\"product-name\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            {{ line.productVariant.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.product-sku' | translate\\\" id=\\\"product-sku\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            {{ line.productVariant.sku }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.unit-price' | translate\\\" id=\\\"unit-price\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            <div class=\\\"unit-price\\\">\\r\\n                {{ line.unitPriceWithTax | localeCurrency : order.currencyCode }}\\r\\n                <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                    {{ line.unitPrice | localeCurrency : order.currencyCode }}\\r\\n                </div>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.quantity' | translate\\\" id=\\\"quantity\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDraft; else draft\\\">\\r\\n                <div class=\\\"flex\\\">\\r\\n                    <div\\r\\n                        *ngIf=\\\"line.orderPlacedQuantity && line.quantity !== line.orderPlacedQuantity\\\"\\r\\n                        class=\\\"order-placed-quantity\\\"\\r\\n                        [title]=\\\"'order.original-quantity-at-checkout' | translate\\\"\\r\\n                    >\\r\\n                        {{ line.orderPlacedQuantity }}\\r\\n                    </div>\\r\\n                    <div>{{ line.quantity }}</div>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <ng-template #draft>\\r\\n                <div class=\\\"flex\\\">\\r\\n                    <input\\r\\n                        class=\\\"draft-qty\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        min=\\\"0\\\"\\r\\n                        #qtyInput\\r\\n                        [value]=\\\"line.quantity\\\"\\r\\n                        (blur)=\\\"draftInputBlur(line, qtyInput.valueAsNumber)\\\"\\r\\n                    />\\r\\n                    <button class=\\\"icon-button\\\" (click)=\\\"remove.emit({ lineId: line.id })\\\">\\r\\n                        <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n            <vdr-line-refunds [line]=\\\"line\\\" [payments]=\\\"order.payments\\\"></vdr-line-refunds>\\r\\n            <vdr-line-fulfillment\\r\\n                [line]=\\\"line\\\"\\r\\n                [orderState]=\\\"order.state\\\"\\r\\n                [allOrderFulfillments]=\\\"order.fulfillments\\\"\\r\\n            ></vdr-line-fulfillment>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of orderLineCustomFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n    />\\r\\n    <vdr-order-total-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-line=\\\"item\\\">\\r\\n            <div class=\\\"unit-price\\\">\\r\\n                {{ line.linePriceWithTax | localeCurrency : order.currencyCode }}\\r\\n                <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                    {{ line.linePrice | localeCurrency : order.currencyCode }}\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <ng-container *ngIf=\\\"getLineDiscounts(line) as discounts\\\">\\r\\n                <vdr-dropdown *ngIf=\\\"discounts.length\\\">\\r\\n                    <div class=\\\"promotions-label\\\" vdrDropdownTrigger>\\r\\n                        {{ 'order.promotions-applied' | translate }}\\r\\n                    </div>\\r\\n                    <vdr-dropdown-menu>\\r\\n                        <div class=\\\"line-promotion\\\" *ngFor=\\\"let discount of discounts\\\">\\r\\n                            <a class=\\\"promotion-name\\\" [routerLink]=\\\"getPromotionLink(discount)\\\">{{\\r\\n                                discount.description\\r\\n                            }}</a>\\r\\n                            <div class=\\\"promotion-amount\\\">\\r\\n                                {{ discount.amountWithTax | localeCurrency : order.currencyCode }}\\r\\n                                <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                                    {{ discount.amount | localeCurrency : order.currencyCode }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </vdr-dropdown-menu>\\r\\n                </vdr-dropdown>\\r\\n            </ng-container>\\r\\n        </ng-template>\\r\\n    </vdr-order-total-column>\\r\\n</vdr-order-data-table>\\r\\n\", styles: [\":host .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}:host .sub-total td{border-top:1px dashed var(--color-component-border-200)}:host .total td{font-weight:700;border-top:1px dashed var(--color-component-border-200)}:host td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}:host img{border-radius:var(--border-radius-img)}:host .order-line-custom-fields{display:flex;flex-wrap:wrap}:host .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-inline-end:18px}:host .draft-qty{max-width:48px}:host .order-line-custom-field{background-color:var(--color-component-bg-100)}:host .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}:host .net-price{font-size:11px;color:var(--color-text-300);line-height:14px}:host .promotions-label{text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}:host .thumb img{width:50px;height:50px}:host .shipping-method-name{font-size:var(--font-size-xs);margin-inline-end:2px}:host .order-placed-quantity{text-decoration:line-through;color:var(--color-text-300);margin-inline-end:2px}::ng-deep .line-promotion{display:flex;justify-content:space-between;padding:6px 12px}::ng-deep .line-promotion .promotion-amount{margin-inline-start:12px}::ng-deep .line-promotion .net-price{font-size:11px;color:var(--color-text-300)}\\n\"] }]\n        }], propDecorators: { order: [{\n                type: Input\n            }], orderLineCustomFields: [{\n                type: Input\n            }], isDraft: [{\n                type: Input\n            }], adjust: [{\n                type: Output\n            }], remove: [{\n                type: Output\n            }] } });\n\nclass DraftOrderVariantSelectorComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.addItem = new EventEmitter();\n        this.customFieldsFormGroup = new UntypedFormGroup({});\n        this.selectedVariantId$ = new Subject();\n        this.quantity = 1;\n    }\n    ngOnInit() {\n        this.selectedVariant$ = this.selectedVariantId$.pipe(switchMap(id => {\n            if (id) {\n                return this.dataService.product\n                    .getProductVariant(id)\n                    .mapSingle(({ productVariant }) => productVariant);\n            }\n            else {\n                return [undefined];\n            }\n        }));\n        for (const customField of this.orderLineCustomFields) {\n            this.customFieldsFormGroup.addControl(customField.name, new UntypedFormControl(''));\n        }\n    }\n    addItemClick(selectedVariant) {\n        if (selectedVariant) {\n            this.addItem.emit({\n                productVariantId: selectedVariant.id,\n                quantity: this.quantity,\n                customFields: this.orderLineCustomFields.length\n                    ? this.customFieldsFormGroup.value\n                    : undefined,\n            });\n            this.selectedVariantId$.next(undefined);\n            this.customFieldsFormGroup.reset();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DraftOrderVariantSelectorComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: DraftOrderVariantSelectorComponent, selector: \"vdr-draft-order-variant-selector\", inputs: { currencyCode: \"currencyCode\", orderLineCustomFields: \"orderLineCustomFields\" }, outputs: { addItem: \"addItem\" }, ngImport: i0, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <h4 class=\\\"card-title\\\">{{ 'order.add-item-to-order' | translate }}</h4>\\r\\n        <vdr-product-variant-selector\\r\\n            (productSelected)=\\\"selectedVariantId$.next($event.productVariantId)\\\"\\r\\n        ></vdr-product-variant-selector>\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\" *ngIf=\\\"selectedVariant$ | async as selectedVariant\\\">\\r\\n        <div class=\\\"variant-details\\\">\\r\\n            <img class=\\\"mr-2\\\" [src]=\\\"selectedVariant.featuredAsset || selectedVariant.product.featuredAsset | assetPreview: 32\\\">\\r\\n            <div class=\\\"details\\\">\\r\\n                <div>{{ selectedVariant?.name }}</div>\\r\\n                <div class=\\\"small\\\">{{ selectedVariant?.sku }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"details ml-4\\\">\\r\\n                <div class=\\\"small\\\">\\r\\n                    {{ 'catalog.stock-on-hand' | translate }}: {{ selectedVariant.stockOnHand }}\\r\\n                </div>\\r\\n                <div class=\\\"small\\\">\\r\\n                    {{ 'catalog.stock-allocated' | translate }}: {{ selectedVariant.stockAllocated }}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"flex-spacer\\\"></div>\\r\\n            <div class=\\\"details\\\">\\r\\n                <div>{{ selectedVariant?.priceWithTax | localeCurrency: currencyCode }}</div>\\r\\n                <div class=\\\"small\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                    {{ selectedVariant?.price | localeCurrency: currencyCode }}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>\\r\\n                <input [disabled]=\\\"!selectedVariant\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"quantity\\\" />\\r\\n            </div>\\r\\n            <button\\r\\n                [disabled]=\\\"!selectedVariant\\\"\\r\\n                class=\\\"btn btn-small btn-primary\\\"\\r\\n                (click)=\\\"addItemClick(selectedVariant)\\\"\\r\\n            >\\r\\n                {{ 'order.add-item-to-order' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <ng-container *ngIf=\\\"orderLineCustomFields.length\\\">\\r\\n            <div class=\\\"custom-field\\\" *ngFor=\\\"let field of orderLineCustomFields\\\">\\r\\n                <vdr-custom-field-control\\r\\n                    [compact]=\\\"true\\\"\\r\\n                    [readonly]=\\\"false\\\"\\r\\n                    [customField]=\\\"field\\\"\\r\\n                    [customFieldsFormGroup]=\\\"customFieldsFormGroup\\\"\\r\\n                ></vdr-custom-field-control>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".variant-details{display:flex;align-items:center}.variant-details img{border-radius:var(--border-radius-img);width:32px;height:32px}.variant-details .details{font-size:.65rem;line-height:.7rem}.variant-details input{width:48px;margin:0 6px}.variant-details .small{font-size:11px;color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.CustomFieldControlComponent, selector: \"vdr-custom-field-control\", inputs: [\"entityName\", \"customFieldsFormGroup\", \"customField\", \"compact\", \"showLabel\", \"readonly\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.ProductVariantSelectorComponent, selector: \"vdr-product-variant-selector\", outputs: [\"productSelected\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DraftOrderVariantSelectorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-draft-order-variant-selector', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <h4 class=\\\"card-title\\\">{{ 'order.add-item-to-order' | translate }}</h4>\\r\\n        <vdr-product-variant-selector\\r\\n            (productSelected)=\\\"selectedVariantId$.next($event.productVariantId)\\\"\\r\\n        ></vdr-product-variant-selector>\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\" *ngIf=\\\"selectedVariant$ | async as selectedVariant\\\">\\r\\n        <div class=\\\"variant-details\\\">\\r\\n            <img class=\\\"mr-2\\\" [src]=\\\"selectedVariant.featuredAsset || selectedVariant.product.featuredAsset | assetPreview: 32\\\">\\r\\n            <div class=\\\"details\\\">\\r\\n                <div>{{ selectedVariant?.name }}</div>\\r\\n                <div class=\\\"small\\\">{{ selectedVariant?.sku }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"details ml-4\\\">\\r\\n                <div class=\\\"small\\\">\\r\\n                    {{ 'catalog.stock-on-hand' | translate }}: {{ selectedVariant.stockOnHand }}\\r\\n                </div>\\r\\n                <div class=\\\"small\\\">\\r\\n                    {{ 'catalog.stock-allocated' | translate }}: {{ selectedVariant.stockAllocated }}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"flex-spacer\\\"></div>\\r\\n            <div class=\\\"details\\\">\\r\\n                <div>{{ selectedVariant?.priceWithTax | localeCurrency: currencyCode }}</div>\\r\\n                <div class=\\\"small\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                    {{ selectedVariant?.price | localeCurrency: currencyCode }}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>\\r\\n                <input [disabled]=\\\"!selectedVariant\\\" type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"quantity\\\" />\\r\\n            </div>\\r\\n            <button\\r\\n                [disabled]=\\\"!selectedVariant\\\"\\r\\n                class=\\\"btn btn-small btn-primary\\\"\\r\\n                (click)=\\\"addItemClick(selectedVariant)\\\"\\r\\n            >\\r\\n                {{ 'order.add-item-to-order' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <ng-container *ngIf=\\\"orderLineCustomFields.length\\\">\\r\\n            <div class=\\\"custom-field\\\" *ngFor=\\\"let field of orderLineCustomFields\\\">\\r\\n                <vdr-custom-field-control\\r\\n                    [compact]=\\\"true\\\"\\r\\n                    [readonly]=\\\"false\\\"\\r\\n                    [customField]=\\\"field\\\"\\r\\n                    [customFieldsFormGroup]=\\\"customFieldsFormGroup\\\"\\r\\n                ></vdr-custom-field-control>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".variant-details{display:flex;align-items:center}.variant-details img{border-radius:var(--border-radius-img);width:32px;height:32px}.variant-details .details{font-size:.65rem;line-height:.7rem}.variant-details input{width:48px;margin:0 6px}.variant-details .small{font-size:11px;color:var(--color-text-300)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }], propDecorators: { currencyCode: [{\n                type: Input\n            }], orderLineCustomFields: [{\n                type: Input\n            }], addItem: [{\n                type: Output\n            }] } });\n\nclass DraftOrderDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, notificationService, modalService, orderTransitionService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.orderTransitionService = orderTransitionService;\n        this.customFields = this.getCustomFieldConfig('Order');\n        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');\n        this.detailForm = new UntypedFormGroup({});\n        this.fetchHistory = new Subject();\n        this.displayCouponCodeInput = false;\n    }\n    ngOnInit() {\n        this.init();\n        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');\n        this.eligibleShippingMethods$ = this.entity$.pipe(switchMap(order => this.dataService.order\n            .getDraftOrderEligibleShippingMethods(order.id)\n            .mapSingle(({ eligibleShippingMethodsForDraftOrder }) => eligibleShippingMethodsForDraftOrder)));\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    addItemToOrder(event) {\n        this.dataService.order.addItemToDraftOrder(this.id, event).subscribe(result => {\n            if (result.addItemToDraftOrder.__typename !== 'Order') {\n                this.notificationService.error(result.addItemToDraftOrder.message);\n            }\n        });\n    }\n    adjustOrderLine(event) {\n        this.dataService.order\n            .adjustDraftOrderLine(this.id, { orderLineId: event.lineId, quantity: event.quantity })\n            .subscribe(result => {\n            if (result.adjustDraftOrderLine.__typename !== 'Order') {\n                this.notificationService.error(result.adjustDraftOrderLine.message);\n            }\n        });\n    }\n    removeOrderLine(event) {\n        this.dataService.order.removeDraftOrderLine(this.id, event.lineId).subscribe(result => {\n            if (result.removeDraftOrderLine.__typename !== 'Order') {\n                this.notificationService.error(result.removeDraftOrderLine.message);\n            }\n        });\n    }\n    getOrderAddressLines(orderAddress) {\n        if (!orderAddress) {\n            return [];\n        }\n        return Object.values(orderAddress)\n            .filter(val => val !== 'OrderAddress')\n            .filter(line => !!line);\n    }\n    setCustomer() {\n        this.modalService.fromComponent(SelectCustomerDialogComponent).subscribe(result => {\n            if (this.hasId(result)) {\n                this.dataService.order\n                    .setCustomerForDraftOrder(this.id, { customerId: result.id })\n                    .subscribe();\n            }\n            else if (result) {\n                const { note, ...input } = result;\n                this.dataService.order.setCustomerForDraftOrder(this.id, { input }).subscribe();\n            }\n        });\n    }\n    setShippingAddress() {\n        this.entity$\n            .pipe(take(1), switchMap(order => this.modalService.fromComponent(SelectAddressDialogComponent, {\n            locals: {\n                customerId: order.customer?.id,\n                currentAddress: order.shippingAddress ?? undefined,\n            },\n        })))\n            .subscribe(result => {\n            if (result) {\n                this.dataService.order.setDraftOrderShippingAddress(this.id, result).subscribe();\n            }\n        });\n    }\n    setBillingAddress() {\n        this.entity$\n            .pipe(take(1), switchMap(order => this.modalService.fromComponent(SelectAddressDialogComponent, {\n            locals: {\n                customerId: order.customer?.id,\n                currentAddress: order.billingAddress ?? undefined,\n            },\n        })))\n            .subscribe(result => {\n            if (result) {\n                this.dataService.order.setDraftOrderBillingAddress(this.id, result).subscribe();\n            }\n        });\n    }\n    applyCouponCode(couponCode) {\n        this.dataService.order.applyCouponCodeToDraftOrder(this.id, couponCode).subscribe();\n    }\n    removeCouponCode(couponCode) {\n        this.dataService.order.removeCouponCodeFromDraftOrder(this.id, couponCode).subscribe();\n    }\n    setShippingMethod() {\n        combineLatest(this.entity$, this.eligibleShippingMethods$)\n            .pipe(take(1), switchMap(([order, methods]) => this.modalService.fromComponent(SelectShippingMethodDialogComponent, {\n            locals: {\n                eligibleShippingMethods: methods,\n                currencyCode: order.currencyCode,\n                currentSelectionId: order.shippingLines?.[0]?.shippingMethod.id,\n            },\n        })))\n            .subscribe(result => {\n            if (result) {\n                this.dataService.order.setDraftOrderShippingMethod(this.id, result).subscribe();\n            }\n        });\n    }\n    updateCustomFields(customFieldsValue) {\n        this.dataService.order\n            .updateOrderCustomFields({\n            id: this.id,\n            customFields: customFieldsValue,\n        })\n            .subscribe();\n    }\n    deleteOrder() {\n        this.dataService.order.deleteDraftOrder(this.id).subscribe(({ deleteDraftOrder }) => {\n            if (deleteDraftOrder.result === DeletionResult.DELETED) {\n                this.notificationService.success(marker('common.notify-delete-success'), {\n                    entity: 'Order',\n                });\n                this.router.navigate(['/orders']);\n            }\n            else if (deleteDraftOrder.message) {\n                this.notificationService.error(deleteDraftOrder.message);\n            }\n        });\n    }\n    completeOrder() {\n        this.dataService.order\n            .transitionToState(this.id, 'ArrangingPayment')\n            .subscribe(({ transitionOrderToState }) => {\n            if (transitionOrderToState?.__typename === 'Order') {\n                this.router.navigate(['/orders', this.id]);\n            }\n            else if (transitionOrderToState?.__typename === 'OrderStateTransitionError') {\n                this.notificationService.error(transitionOrderToState.transitionError);\n            }\n        });\n    }\n    hasId(input) {\n        return typeof input === 'object' && !!input.id;\n    }\n    setFormValues(entity) {\n        // empty\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DraftOrderDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: OrderTransitionService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: DraftOrderDetailComponent, selector: \"vdr-draft-order-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar *ngIf=\\\"entity$ | async as order\\\">\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-align-items-center\\\">\\r\\n                <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"draft-order-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"completeOrder()\\\"\\r\\n                [disabled]=\\\"!order.customer || !order.lines.length || !order.shippingLines.length\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"check\\\"></clr-icon>\\r\\n                {{ 'order.complete-draft-order' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu [alwaysShow]=\\\"true\\\" locationId=\\\"draft-order-detail\\\">\\r\\n                <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"deleteOrder()\\\">\\r\\n                    <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                    {{ 'order.delete-draft-order' | translate }}\\r\\n                </button>\\r\\n            </vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-page-detail-layout *ngIf=\\\"entity$ | async as order\\\">\\r\\n    <vdr-page-detail-sidebar>\\r\\n        <vdr-card [title]=\\\"'order.customer' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <clr-icon *ngIf=\\\"!order.customer\\\" shape=\\\"unknown-status\\\" class=\\\"is-warning\\\"></clr-icon>\\r\\n                <clr-icon *ngIf=\\\"order.customer\\\" shape=\\\"check\\\" class=\\\"is-success\\\"></clr-icon>\\r\\n            </ng-template>\\r\\n            <vdr-customer-label\\r\\n                class=\\\"block mb-2\\\"\\r\\n                *ngIf=\\\"order.customer\\\"\\r\\n                [customer]=\\\"order.customer\\\"\\r\\n            ></vdr-customer-label>\\r\\n            <button class=\\\"button-small\\\" (click)=\\\"setCustomer()\\\">\\r\\n                {{ 'order.set-customer-for-order' | translate }}\\r\\n            </button>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.billing-address' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <clr-icon\\r\\n                    *ngIf=\\\"!order.billingAddress.streetLine1\\\"\\r\\n                    shape=\\\"unknown-status\\\"\\r\\n                    class=\\\"is-warning\\\"\\r\\n                ></clr-icon>\\r\\n                <clr-icon\\r\\n                    *ngIf=\\\"order.billingAddress.streetLine1\\\"\\r\\n                    shape=\\\"check\\\"\\r\\n                    class=\\\"is-success\\\"\\r\\n                ></clr-icon>\\r\\n            </ng-template>\\r\\n            <vdr-formatted-address\\r\\n                class=\\\"block mb-2\\\"\\r\\n                *ngIf=\\\"order.billingAddress\\\"\\r\\n                [address]=\\\"order.billingAddress\\\"\\r\\n            ></vdr-formatted-address>\\r\\n            <button class=\\\"button-small\\\" (click)=\\\"setBillingAddress()\\\">\\r\\n                {{ 'order.set-billing-address' | translate }}\\r\\n            </button>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.shipping' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <clr-icon\\r\\n                    *ngIf=\\\"!order.shippingAddress.streetLine1 || !order.shippingLines.length\\\"\\r\\n                    shape=\\\"unknown-status\\\"\\r\\n                    class=\\\"is-warning\\\"\\r\\n                ></clr-icon>\\r\\n                <clr-icon\\r\\n                    *ngIf=\\\"order.shippingAddress.streetLine1 && order.shippingLines.length\\\"\\r\\n                    shape=\\\"check\\\"\\r\\n                    class=\\\"is-success\\\"\\r\\n                ></clr-icon>\\r\\n            </ng-template>\\r\\n            <vdr-formatted-address\\r\\n                class=\\\"block mb-2\\\"\\r\\n                *ngIf=\\\"order.shippingAddress\\\"\\r\\n                [address]=\\\"order.shippingAddress\\\"\\r\\n            ></vdr-formatted-address>\\r\\n            <button class=\\\"button-small mr-2\\\" (click)=\\\"setShippingAddress()\\\">\\r\\n                {{ 'order.set-shipping-address' | translate }}\\r\\n            </button>\\r\\n\\r\\n            <div *ngFor=\\\"let shippingLine of order.shippingLines\\\">\\r\\n                {{ shippingLine.shippingMethod.name }}\\r\\n            </div>\\r\\n            <button class=\\\"button-small\\\" (click)=\\\"setShippingMethod()\\\">\\r\\n                {{ 'order.set-shipping-method' | translate }}\\r\\n            </button>\\r\\n        </vdr-card>\\r\\n        <vdr-card>\\r\\n            <button\\r\\n                *ngIf=\\\"order.couponCodes.length === 0 && !displayCouponCodeInput\\\"\\r\\n                class=\\\"button-small\\\"\\r\\n                (click)=\\\"displayCouponCodeInput = !displayCouponCodeInput\\\"\\r\\n            >\\r\\n                {{ 'order.set-coupon-codes' | translate }}\\r\\n            </button>\\r\\n            <div *ngIf=\\\"order.couponCodes.length || displayCouponCodeInput\\\">\\r\\n                <label>{{ 'order.set-coupon-codes' | translate }}</label>\\r\\n                <vdr-coupon-code-selector\\r\\n                    [couponCodes]=\\\"order.couponCodes\\\"\\r\\n                    (addCouponCode)=\\\"applyCouponCode($event)\\\"\\r\\n                    (removeCouponCode)=\\\"removeCouponCode($event)\\\"\\r\\n                ></vdr-coupon-code-selector>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card>\\r\\n            <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n        </vdr-card>\\r\\n    </vdr-page-detail-sidebar>\\r\\n    <vdr-page-block>\\r\\n        <vdr-card>\\r\\n            <vdr-draft-order-variant-selector\\r\\n                [orderLineCustomFields]=\\\"orderLineCustomFields\\\"\\r\\n                [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                (addItem)=\\\"addItemToOrder($event)\\\"\\r\\n            ></vdr-draft-order-variant-selector>\\r\\n            <vdr-order-table\\r\\n                [order]=\\\"order\\\"\\r\\n                [orderLineCustomFields]=\\\"orderLineCustomFields\\\"\\r\\n                [isDraft]=\\\"true\\\"\\r\\n                (adjust)=\\\"adjustOrderLine($event)\\\"\\r\\n                (remove)=\\\"removeOrderLine($event)\\\"\\r\\n            ></vdr-order-table>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.tax-summary' | translate\\\">\\r\\n            <ng-container *ngIf=\\\"order.taxSummary.length\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>{{ 'common.description' | translate }}</th>\\r\\n                            <th>{{ 'order.tax-rate' | translate }}</th>\\r\\n                            <th>{{ 'order.tax-base' | translate }}</th>\\r\\n                            <th>{{ 'order.tax-total' | translate }}</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let row of order.taxSummary\\\">\\r\\n                            <td>{{ row.description }}</td>\\r\\n                            <td>{{ row.taxRate / 100 | percent }}</td>\\r\\n                            <td>{{ row.taxBase | localeCurrency : order.currencyCode }}</td>\\r\\n                            <td>{{ row.taxTotal | localeCurrency : order.currencyCode }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-container>\\r\\n        </vdr-card>\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"draft-order-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n\\r\\n        <vdr-order-custom-fields-card\\r\\n            [customFieldsConfig]=\\\"customFields\\\"\\r\\n            [customFieldValues]=\\\"order.customFields\\\"\\r\\n            (updateClick)=\\\"updateCustomFields($event)\\\"\\r\\n        ></vdr-order-custom-fields-card>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-detail-layout>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.CustomerLabelComponent, selector: \"vdr-customer-label\", inputs: [\"customer\"] }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"component\", type: i1.OrderStateLabelComponent, selector: \"vdr-order-state-label\", inputs: [\"state\"] }, { kind: \"component\", type: i1.FormattedAddressComponent, selector: \"vdr-formatted-address\", inputs: [\"address\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"directive\", type: i1.CardControlsDirective, selector: \"[vdrCardControls]\" }, { kind: \"component\", type: OrderCustomFieldsCardComponent, selector: \"vdr-order-custom-fields-card\", inputs: [\"customFieldsConfig\", \"customFieldValues\"], outputs: [\"updateClick\"] }, { kind: \"component\", type: OrderTableComponent, selector: \"vdr-order-table\", inputs: [\"order\", \"orderLineCustomFields\", \"isDraft\"], outputs: [\"adjust\", \"remove\"] }, { kind: \"component\", type: DraftOrderVariantSelectorComponent, selector: \"vdr-draft-order-variant-selector\", inputs: [\"currencyCode\", \"orderLineCustomFields\"], outputs: [\"addItem\"] }, { kind: \"component\", type: CouponCodeSelectorComponent, selector: \"vdr-coupon-code-selector\", inputs: [\"couponCodes\", \"control\"], outputs: [\"addCouponCode\", \"removeCouponCode\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2$1.PercentPipe, name: \"percent\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DraftOrderDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-draft-order-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar *ngIf=\\\"entity$ | async as order\\\">\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-align-items-center\\\">\\r\\n                <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"draft-order-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"completeOrder()\\\"\\r\\n                [disabled]=\\\"!order.customer || !order.lines.length || !order.shippingLines.length\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"check\\\"></clr-icon>\\r\\n                {{ 'order.complete-draft-order' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu [alwaysShow]=\\\"true\\\" locationId=\\\"draft-order-detail\\\">\\r\\n                <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"deleteOrder()\\\">\\r\\n                    <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                    {{ 'order.delete-draft-order' | translate }}\\r\\n                </button>\\r\\n            </vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-page-detail-layout *ngIf=\\\"entity$ | async as order\\\">\\r\\n    <vdr-page-detail-sidebar>\\r\\n        <vdr-card [title]=\\\"'order.customer' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <clr-icon *ngIf=\\\"!order.customer\\\" shape=\\\"unknown-status\\\" class=\\\"is-warning\\\"></clr-icon>\\r\\n                <clr-icon *ngIf=\\\"order.customer\\\" shape=\\\"check\\\" class=\\\"is-success\\\"></clr-icon>\\r\\n            </ng-template>\\r\\n            <vdr-customer-label\\r\\n                class=\\\"block mb-2\\\"\\r\\n                *ngIf=\\\"order.customer\\\"\\r\\n                [customer]=\\\"order.customer\\\"\\r\\n            ></vdr-customer-label>\\r\\n            <button class=\\\"button-small\\\" (click)=\\\"setCustomer()\\\">\\r\\n                {{ 'order.set-customer-for-order' | translate }}\\r\\n            </button>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.billing-address' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <clr-icon\\r\\n                    *ngIf=\\\"!order.billingAddress.streetLine1\\\"\\r\\n                    shape=\\\"unknown-status\\\"\\r\\n                    class=\\\"is-warning\\\"\\r\\n                ></clr-icon>\\r\\n                <clr-icon\\r\\n                    *ngIf=\\\"order.billingAddress.streetLine1\\\"\\r\\n                    shape=\\\"check\\\"\\r\\n                    class=\\\"is-success\\\"\\r\\n                ></clr-icon>\\r\\n            </ng-template>\\r\\n            <vdr-formatted-address\\r\\n                class=\\\"block mb-2\\\"\\r\\n                *ngIf=\\\"order.billingAddress\\\"\\r\\n                [address]=\\\"order.billingAddress\\\"\\r\\n            ></vdr-formatted-address>\\r\\n            <button class=\\\"button-small\\\" (click)=\\\"setBillingAddress()\\\">\\r\\n                {{ 'order.set-billing-address' | translate }}\\r\\n            </button>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.shipping' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <clr-icon\\r\\n                    *ngIf=\\\"!order.shippingAddress.streetLine1 || !order.shippingLines.length\\\"\\r\\n                    shape=\\\"unknown-status\\\"\\r\\n                    class=\\\"is-warning\\\"\\r\\n                ></clr-icon>\\r\\n                <clr-icon\\r\\n                    *ngIf=\\\"order.shippingAddress.streetLine1 && order.shippingLines.length\\\"\\r\\n                    shape=\\\"check\\\"\\r\\n                    class=\\\"is-success\\\"\\r\\n                ></clr-icon>\\r\\n            </ng-template>\\r\\n            <vdr-formatted-address\\r\\n                class=\\\"block mb-2\\\"\\r\\n                *ngIf=\\\"order.shippingAddress\\\"\\r\\n                [address]=\\\"order.shippingAddress\\\"\\r\\n            ></vdr-formatted-address>\\r\\n            <button class=\\\"button-small mr-2\\\" (click)=\\\"setShippingAddress()\\\">\\r\\n                {{ 'order.set-shipping-address' | translate }}\\r\\n            </button>\\r\\n\\r\\n            <div *ngFor=\\\"let shippingLine of order.shippingLines\\\">\\r\\n                {{ shippingLine.shippingMethod.name }}\\r\\n            </div>\\r\\n            <button class=\\\"button-small\\\" (click)=\\\"setShippingMethod()\\\">\\r\\n                {{ 'order.set-shipping-method' | translate }}\\r\\n            </button>\\r\\n        </vdr-card>\\r\\n        <vdr-card>\\r\\n            <button\\r\\n                *ngIf=\\\"order.couponCodes.length === 0 && !displayCouponCodeInput\\\"\\r\\n                class=\\\"button-small\\\"\\r\\n                (click)=\\\"displayCouponCodeInput = !displayCouponCodeInput\\\"\\r\\n            >\\r\\n                {{ 'order.set-coupon-codes' | translate }}\\r\\n            </button>\\r\\n            <div *ngIf=\\\"order.couponCodes.length || displayCouponCodeInput\\\">\\r\\n                <label>{{ 'order.set-coupon-codes' | translate }}</label>\\r\\n                <vdr-coupon-code-selector\\r\\n                    [couponCodes]=\\\"order.couponCodes\\\"\\r\\n                    (addCouponCode)=\\\"applyCouponCode($event)\\\"\\r\\n                    (removeCouponCode)=\\\"removeCouponCode($event)\\\"\\r\\n                ></vdr-coupon-code-selector>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card>\\r\\n            <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n        </vdr-card>\\r\\n    </vdr-page-detail-sidebar>\\r\\n    <vdr-page-block>\\r\\n        <vdr-card>\\r\\n            <vdr-draft-order-variant-selector\\r\\n                [orderLineCustomFields]=\\\"orderLineCustomFields\\\"\\r\\n                [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                (addItem)=\\\"addItemToOrder($event)\\\"\\r\\n            ></vdr-draft-order-variant-selector>\\r\\n            <vdr-order-table\\r\\n                [order]=\\\"order\\\"\\r\\n                [orderLineCustomFields]=\\\"orderLineCustomFields\\\"\\r\\n                [isDraft]=\\\"true\\\"\\r\\n                (adjust)=\\\"adjustOrderLine($event)\\\"\\r\\n                (remove)=\\\"removeOrderLine($event)\\\"\\r\\n            ></vdr-order-table>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.tax-summary' | translate\\\">\\r\\n            <ng-container *ngIf=\\\"order.taxSummary.length\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>{{ 'common.description' | translate }}</th>\\r\\n                            <th>{{ 'order.tax-rate' | translate }}</th>\\r\\n                            <th>{{ 'order.tax-base' | translate }}</th>\\r\\n                            <th>{{ 'order.tax-total' | translate }}</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let row of order.taxSummary\\\">\\r\\n                            <td>{{ row.description }}</td>\\r\\n                            <td>{{ row.taxRate / 100 | percent }}</td>\\r\\n                            <td>{{ row.taxBase | localeCurrency : order.currencyCode }}</td>\\r\\n                            <td>{{ row.taxTotal | localeCurrency : order.currencyCode }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-container>\\r\\n        </vdr-card>\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"draft-order-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n\\r\\n        <vdr-order-custom-fields-card\\r\\n            [customFieldsConfig]=\\\"customFields\\\"\\r\\n            [customFieldValues]=\\\"order.customFields\\\"\\r\\n            (updateClick)=\\\"updateCustomFields($event)\\\"\\r\\n        ></vdr-order-custom-fields-card>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-detail-layout>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: OrderTransitionService }] });\n\nclass FulfillOrderDialogComponent {\n    constructor(dataService, changeDetector) {\n        this.dataService = dataService;\n        this.changeDetector = changeDetector;\n        this.fulfillmentHandlerControl = new UntypedFormControl();\n        this.fulfillmentQuantities = {};\n    }\n    ngOnInit() {\n        this.dataService.settings.getGlobalSettings().single$.subscribe(({ globalSettings }) => {\n            this.fulfillmentQuantities = this.order.lines.reduce((result, line) => {\n                const fulfillCount = this.getFulfillableCount(line, globalSettings.trackInventory);\n                return {\n                    ...result,\n                    [line.id]: { fulfillCount, max: fulfillCount },\n                };\n            }, {});\n            this.changeDetector.markForCheck();\n        });\n        this.dataService.shippingMethod\n            .getShippingMethodOperations()\n            .mapSingle(data => data.fulfillmentHandlers)\n            .subscribe(handlers => {\n            this.fulfillmentHandlerDef =\n                handlers.find(h => h.code === this.order.shippingLines[0]?.shippingMethod?.fulfillmentHandlerCode) || handlers[0];\n            this.fulfillmentHandler = configurableDefinitionToInstance(this.fulfillmentHandlerDef);\n            this.fulfillmentHandlerControl.patchValue(this.fulfillmentHandler);\n            this.changeDetector.markForCheck();\n        });\n    }\n    getFulfillableCount(line, globalTrackInventory) {\n        const { trackInventory, stockOnHand } = line.productVariant;\n        const effectiveTracInventory = trackInventory === GlobalFlag.INHERIT ? globalTrackInventory : trackInventory === GlobalFlag.TRUE;\n        const unfulfilledCount = this.getUnfulfilledCount(line);\n        return effectiveTracInventory ? Math.min(unfulfilledCount, stockOnHand) : unfulfilledCount;\n    }\n    getUnfulfilledCount(line) {\n        const fulfilled = this.order.fulfillments\n            ?.filter(f => f.state !== 'Cancelled')\n            .map(f => f.lines)\n            .flat()\n            .filter(row => row.orderLineId === line.id)\n            .reduce((sum, row) => sum + row.quantity, 0) ?? 0;\n        return line.quantity - fulfilled;\n    }\n    canSubmit() {\n        const totalCount = Object.values(this.fulfillmentQuantities).reduce((total, { fulfillCount }) => total + fulfillCount, 0);\n        const fulfillmentQuantityIsValid = Object.values(this.fulfillmentQuantities).every(({ fulfillCount, max }) => fulfillCount <= max);\n        const formIsValid = configurableOperationValueIsValid(this.fulfillmentHandlerDef, this.fulfillmentHandlerControl.value) && this.fulfillmentHandlerControl.valid;\n        return formIsValid && 0 < totalCount && fulfillmentQuantityIsValid;\n    }\n    select() {\n        const lines = Object.entries(this.fulfillmentQuantities).map(([orderLineId, { fulfillCount }]) => ({\n            orderLineId,\n            quantity: fulfillCount,\n        }));\n        this.resolveWith({\n            lines,\n            handler: toConfigurableOperationInput(this.fulfillmentHandler, this.fulfillmentHandlerControl.value),\n        });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FulfillOrderDialogComponent, deps: [{ token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: FulfillOrderDialogComponent, selector: \"vdr-fulfill-order-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'order.fulfill-order' | translate }}</ng-template>\\r\\n\\r\\n<div class=\\\"fulfillment-wrapper\\\">\\r\\n    <div class=\\\"order-table\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th></th>\\r\\n                    <th>{{ 'order.product-name' | translate }}</th>\\r\\n                    <th>{{ 'order.product-sku' | translate }}</th>\\r\\n                    <th>{{ 'order.unfulfilled' | translate }}</th>\\r\\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n                    <th>{{ 'order.fulfill' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let line of order.lines\\\"\\r\\n                class=\\\"order-line\\\"\\r\\n                [class.ignore]=\\\"getUnfulfilledCount(line) === 0\\\"\\r\\n            >\\r\\n                <td class=\\\"align-middle thumb\\\">\\r\\n                    <img *ngIf=\\\"line.featuredAsset\\\" [src]=\\\"line.featuredAsset | assetPreview: 'tiny'\\\" />\\r\\n                </td>\\r\\n                <td class=\\\"align-middle name\\\">{{ line.productVariant.name }}</td>\\r\\n                <td class=\\\"align-middle sku\\\">{{ line.productVariant.sku }}</td>\\r\\n                <td class=\\\"align-middle quantity\\\">{{ getUnfulfilledCount(line) }}</td>\\r\\n                <td class=\\\"align-middle quantity\\\">{{ line.productVariant.stockOnHand }}</td>\\r\\n                <td class=\\\"align-middle fulfil\\\">\\r\\n                    <input\\r\\n                        *ngIf=\\\"fulfillmentQuantities[line.id]\\\"\\r\\n                        [disabled]=\\\"getUnfulfilledCount(line) === 0\\\"\\r\\n                        [(ngModel)]=\\\"fulfillmentQuantities[line.id].fulfillCount\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        [max]=\\\"fulfillmentQuantities[line.id].max\\\"\\r\\n                        min=\\\"0\\\"\\r\\n                    />\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n    <div class=\\\"shipping-details\\\">\\r\\n        <vdr-formatted-address [address]=\\\"order.shippingAddress\\\"></vdr-formatted-address>\\r\\n        <h6>{{ 'order.shipping-method' | translate }}</h6>\\r\\n        {{ order.shippingLines[0]?.shippingMethod?.name }}\\r\\n        <strong>{{ order.shipping | localeCurrency: order.currencyCode }}</strong>\\r\\n        <vdr-configurable-input\\r\\n            [operationDefinition]=\\\"fulfillmentHandlerDef\\\"\\r\\n            [operation]=\\\"fulfillmentHandler\\\"\\r\\n            [formControl]=\\\"fulfillmentHandlerControl\\\"\\r\\n            [removable]=\\\"false\\\"\\r\\n        ></vdr-configurable-input>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"select()\\\" [disabled]=\\\"!canSubmit()\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'order.create-fulfillment' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\":host{height:100%;display:flex;min-height:64vh}:host .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}:host .sub-total td{border-top:1px dashed var(--color-component-border-200)}:host .total td{font-weight:700;border-top:1px dashed var(--color-component-border-200)}:host td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}:host img{border-radius:var(--border-radius-img)}:host .order-line-custom-fields{display:flex;flex-wrap:wrap}:host .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-inline-end:18px}:host .draft-qty{max-width:48px}:host .order-line-custom-field{background-color:var(--color-component-bg-100)}:host .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}:host .net-price{font-size:11px;color:var(--color-text-300);line-height:14px}:host .promotions-label{text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}:host .thumb img{width:50px;height:50px}:host .shipping-method-name{font-size:var(--font-size-xs);margin-inline-end:2px}:host .order-placed-quantity{text-decoration:line-through;color:var(--color-text-300);margin-inline-end:2px}.fulfillment-wrapper{flex:1}@media screen and (min-width: 768px){.fulfillment-wrapper{display:flex;flex-direction:row}}.fulfillment-wrapper .shipping-details{margin-top:24px}@media screen and (min-width: 768px){.fulfillment-wrapper .shipping-details{margin-top:0;margin-inline-start:24px;width:250px}}.fulfillment-wrapper .shipping-details clr-input-container{margin-top:24px}.fulfillment-wrapper .order-table{flex:1;overflow-y:auto}.fulfillment-wrapper .order-table table{margin-top:0}.fulfillment-wrapper tr.ignore{color:var(--color-grey-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\", \"hideDescription\"], outputs: [\"remove\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.FormattedAddressComponent, selector: \"vdr-formatted-address\", inputs: [\"address\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FulfillOrderDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-fulfill-order-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'order.fulfill-order' | translate }}</ng-template>\\r\\n\\r\\n<div class=\\\"fulfillment-wrapper\\\">\\r\\n    <div class=\\\"order-table\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th></th>\\r\\n                    <th>{{ 'order.product-name' | translate }}</th>\\r\\n                    <th>{{ 'order.product-sku' | translate }}</th>\\r\\n                    <th>{{ 'order.unfulfilled' | translate }}</th>\\r\\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n                    <th>{{ 'order.fulfill' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let line of order.lines\\\"\\r\\n                class=\\\"order-line\\\"\\r\\n                [class.ignore]=\\\"getUnfulfilledCount(line) === 0\\\"\\r\\n            >\\r\\n                <td class=\\\"align-middle thumb\\\">\\r\\n                    <img *ngIf=\\\"line.featuredAsset\\\" [src]=\\\"line.featuredAsset | assetPreview: 'tiny'\\\" />\\r\\n                </td>\\r\\n                <td class=\\\"align-middle name\\\">{{ line.productVariant.name }}</td>\\r\\n                <td class=\\\"align-middle sku\\\">{{ line.productVariant.sku }}</td>\\r\\n                <td class=\\\"align-middle quantity\\\">{{ getUnfulfilledCount(line) }}</td>\\r\\n                <td class=\\\"align-middle quantity\\\">{{ line.productVariant.stockOnHand }}</td>\\r\\n                <td class=\\\"align-middle fulfil\\\">\\r\\n                    <input\\r\\n                        *ngIf=\\\"fulfillmentQuantities[line.id]\\\"\\r\\n                        [disabled]=\\\"getUnfulfilledCount(line) === 0\\\"\\r\\n                        [(ngModel)]=\\\"fulfillmentQuantities[line.id].fulfillCount\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        [max]=\\\"fulfillmentQuantities[line.id].max\\\"\\r\\n                        min=\\\"0\\\"\\r\\n                    />\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n    <div class=\\\"shipping-details\\\">\\r\\n        <vdr-formatted-address [address]=\\\"order.shippingAddress\\\"></vdr-formatted-address>\\r\\n        <h6>{{ 'order.shipping-method' | translate }}</h6>\\r\\n        {{ order.shippingLines[0]?.shippingMethod?.name }}\\r\\n        <strong>{{ order.shipping | localeCurrency: order.currencyCode }}</strong>\\r\\n        <vdr-configurable-input\\r\\n            [operationDefinition]=\\\"fulfillmentHandlerDef\\\"\\r\\n            [operation]=\\\"fulfillmentHandler\\\"\\r\\n            [formControl]=\\\"fulfillmentHandlerControl\\\"\\r\\n            [removable]=\\\"false\\\"\\r\\n        ></vdr-configurable-input>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"select()\\\" [disabled]=\\\"!canSubmit()\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'order.create-fulfillment' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\":host{height:100%;display:flex;min-height:64vh}:host .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}:host .sub-total td{border-top:1px dashed var(--color-component-border-200)}:host .total td{font-weight:700;border-top:1px dashed var(--color-component-border-200)}:host td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}:host img{border-radius:var(--border-radius-img)}:host .order-line-custom-fields{display:flex;flex-wrap:wrap}:host .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-inline-end:18px}:host .draft-qty{max-width:48px}:host .order-line-custom-field{background-color:var(--color-component-bg-100)}:host .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}:host .net-price{font-size:11px;color:var(--color-text-300);line-height:14px}:host .promotions-label{text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}:host .thumb img{width:50px;height:50px}:host .shipping-method-name{font-size:var(--font-size-xs);margin-inline-end:2px}:host .order-placed-quantity{text-decoration:line-through;color:var(--color-text-300);margin-inline-end:2px}.fulfillment-wrapper{flex:1}@media screen and (min-width: 768px){.fulfillment-wrapper{display:flex;flex-direction:row}}.fulfillment-wrapper .shipping-details{margin-top:24px}@media screen and (min-width: 768px){.fulfillment-wrapper .shipping-details{margin-top:0;margin-inline-start:24px;width:250px}}.fulfillment-wrapper .shipping-details clr-input-container{margin-top:24px}.fulfillment-wrapper .order-table{flex:1;overflow-y:auto}.fulfillment-wrapper .order-table table{margin-top:0}.fulfillment-wrapper tr.ignore{color:var(--color-grey-300)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i0.ChangeDetectorRef }] });\n\nclass SimpleItemListComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SimpleItemListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: SimpleItemListComponent, selector: \"vdr-simple-item-list\", inputs: { items: \"items\" }, ngImport: i0, template: \"<div class=\\\"items-list\\\">\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let item of items\\\" [title]=\\\"item.name\\\">\\r\\n            <div class=\\\"quantity\\\" *ngIf=\\\"item.quantity != null\\\">{{ item.quantity }}</div>\\r\\n            <clr-icon shape=\\\"times\\\" size=\\\"12\\\" *ngIf=\\\"item.quantity != null\\\"></clr-icon>\\r\\n            {{ item.name }}\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\", styles: [\".items-list{font-size:12px}.items-list ul{margin-top:6px;list-style-type:none;margin-inline-start:2px}.items-list ul li{line-height:14px;text-overflow:ellipsis;overflow:hidden}.items-list .quantity{min-width:16px;display:inline-block}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SimpleItemListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-simple-item-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"items-list\\\">\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let item of items\\\" [title]=\\\"item.name\\\">\\r\\n            <div class=\\\"quantity\\\" *ngIf=\\\"item.quantity != null\\\">{{ item.quantity }}</div>\\r\\n            <clr-icon shape=\\\"times\\\" size=\\\"12\\\" *ngIf=\\\"item.quantity != null\\\"></clr-icon>\\r\\n            {{ item.name }}\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\", styles: [\".items-list{font-size:12px}.items-list ul{margin-top:6px;list-style-type:none;margin-inline-start:2px}.items-list ul li{line-height:14px;text-overflow:ellipsis;overflow:hidden}.items-list .quantity{min-width:16px;display:inline-block}\\n\"] }]\n        }], propDecorators: { items: [{\n                type: Input\n            }] } });\n\nclass FulfillmentDetailComponent {\n    constructor(serverConfigService) {\n        this.serverConfigService = serverConfigService;\n        this.customFieldConfig = [];\n        this.customFieldFormGroup = new UntypedFormGroup({});\n    }\n    ngOnInit() {\n        this.customFieldConfig = this.serverConfigService.getCustomFieldsFor('Fulfillment');\n    }\n    ngOnChanges(changes) {\n        this.buildCustomFieldsFormGroup();\n    }\n    get fulfillment() {\n        return this.order.fulfillments && this.order.fulfillments.find(f => f.id === this.fulfillmentId);\n    }\n    get items() {\n        return (this.fulfillment?.lines.map(row => ({\n            name: this.order.lines.find(line => line.id === row.orderLineId)?.productVariant.name ?? '',\n            quantity: row.quantity,\n        })) ?? []);\n    }\n    buildCustomFieldsFormGroup() {\n        const customFields = this.fulfillment.customFields;\n        for (const fieldDef of this.serverConfigService.getCustomFieldsFor('Fulfillment')) {\n            this.customFieldFormGroup.addControl(fieldDef.name, new UntypedFormControl(customFields[fieldDef.name]));\n        }\n    }\n    customFieldIsObject(customField) {\n        return Array.isArray(customField) || isObject(customField);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FulfillmentDetailComponent, deps: [{ token: i1.ServerConfigService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: FulfillmentDetailComponent, selector: \"vdr-fulfillment-detail\", inputs: { fulfillmentId: \"fulfillmentId\", order: \"order\" }, usesOnChanges: true, ngImport: i0, template: \"<vdr-labeled-data [label]=\\\"'common.created-at' | translate\\\">\\r\\n    {{ fulfillment?.createdAt | localeDate: 'medium' }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data [label]=\\\"'order.fulfillment-method' | translate\\\">\\r\\n    {{ fulfillment?.method }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"fulfillment?.trackingCode\\\" [label]=\\\"'order.tracking-code' | translate\\\">\\r\\n    {{ fulfillment?.trackingCode }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data [label]=\\\"'order.contents' | translate\\\">\\r\\n    <vdr-simple-item-list [items]=\\\"items\\\"></vdr-simple-item-list>\\r\\n</vdr-labeled-data>\\r\\n<ng-container *ngFor=\\\"let customField of customFieldConfig\\\">\\r\\n    <vdr-custom-field-control\\r\\n        *ngIf=\\\"customFieldFormGroup.get(customField.name)\\\"\\r\\n        [readonly]=\\\"true\\\"\\r\\n        [compact]=\\\"true\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [customFieldsFormGroup]=\\\"customFieldFormGroup\\\"\\r\\n    ></vdr-custom-field-control>\\r\\n</ng-container>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.CustomFieldControlComponent, selector: \"vdr-custom-field-control\", inputs: [\"entityName\", \"customFieldsFormGroup\", \"customField\", \"compact\", \"showLabel\", \"readonly\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: SimpleItemListComponent, selector: \"vdr-simple-item-list\", inputs: [\"items\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FulfillmentDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-fulfillment-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-labeled-data [label]=\\\"'common.created-at' | translate\\\">\\r\\n    {{ fulfillment?.createdAt | localeDate: 'medium' }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data [label]=\\\"'order.fulfillment-method' | translate\\\">\\r\\n    {{ fulfillment?.method }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"fulfillment?.trackingCode\\\" [label]=\\\"'order.tracking-code' | translate\\\">\\r\\n    {{ fulfillment?.trackingCode }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data [label]=\\\"'order.contents' | translate\\\">\\r\\n    <vdr-simple-item-list [items]=\\\"items\\\"></vdr-simple-item-list>\\r\\n</vdr-labeled-data>\\r\\n<ng-container *ngFor=\\\"let customField of customFieldConfig\\\">\\r\\n    <vdr-custom-field-control\\r\\n        *ngIf=\\\"customFieldFormGroup.get(customField.name)\\\"\\r\\n        [readonly]=\\\"true\\\"\\r\\n        [compact]=\\\"true\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [customFieldsFormGroup]=\\\"customFieldFormGroup\\\"\\r\\n    ></vdr-custom-field-control>\\r\\n</ng-container>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.ServerConfigService }], propDecorators: { fulfillmentId: [{\n                type: Input\n            }], order: [{\n                type: Input\n            }] } });\n\nclass FulfillmentStateLabelComponent {\n    get chipColorType() {\n        switch (this.state) {\n            case 'Pending':\n            case 'Shipped':\n                return 'warning';\n            case 'Delivered':\n                return 'success';\n            case 'Cancelled':\n                return 'error';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FulfillmentStateLabelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: FulfillmentStateLabelComponent, selector: \"vdr-fulfillment-state-label\", inputs: { state: \"state\" }, ngImport: i0, template: \"<vdr-chip [title]=\\\"'order.payment-state' | translate\\\" [colorType]=\\\"chipColorType\\\">\\r\\n    <clr-icon shape=\\\"check-circle\\\" *ngIf=\\\"state === 'Delivered'\\\"></clr-icon>\\r\\n    {{ state | stateI18nToken | translate }}\\r\\n</vdr-chip>\\r\\n\", styles: [\":host{font-size:14px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.StateI18nTokenPipe, name: \"stateI18nToken\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FulfillmentStateLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-fulfillment-state-label', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-chip [title]=\\\"'order.payment-state' | translate\\\" [colorType]=\\\"chipColorType\\\">\\r\\n    <clr-icon shape=\\\"check-circle\\\" *ngIf=\\\"state === 'Delivered'\\\"></clr-icon>\\r\\n    {{ state | stateI18nToken | translate }}\\r\\n</vdr-chip>\\r\\n\", styles: [\":host{font-size:14px}\\n\"] }]\n        }], propDecorators: { state: [{\n                type: Input\n            }] } });\n\nclass FulfillmentCardComponent {\n    constructor() {\n        this.transitionState = new EventEmitter();\n    }\n    nextSuggestedState() {\n        if (!this.fulfillment) {\n            return;\n        }\n        const { nextStates } = this.fulfillment;\n        const namedStateOrDefault = (targetState) => nextStates.includes(targetState) ? targetState : nextStates[0];\n        switch (this.fulfillment?.state) {\n            case 'Pending':\n                return namedStateOrDefault('Shipped');\n            case 'Shipped':\n                return namedStateOrDefault('Delivered');\n            default:\n                return nextStates.find(s => s !== 'Cancelled');\n        }\n    }\n    nextOtherStates() {\n        if (!this.fulfillment) {\n            return [];\n        }\n        const suggested = this.nextSuggestedState();\n        return this.fulfillment.nextStates.filter(s => s !== suggested);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FulfillmentCardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: FulfillmentCardComponent, selector: \"vdr-fulfillment-card\", inputs: { fulfillment: \"fulfillment\", order: \"order\" }, outputs: { transitionState: \"transitionState\" }, ngImport: i0, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header fulfillment-header\\\">\\r\\n        <div>{{ 'order.fulfillment' | translate }}</div>\\r\\n        <div class=\\\"fulfillment-state\\\">\\r\\n            <vdr-fulfillment-state-label [state]=\\\"fulfillment?.state\\\"></vdr-fulfillment-state-label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <vdr-fulfillment-detail\\r\\n            *ngIf=\\\"!!fulfillment\\\"\\r\\n            [fulfillmentId]=\\\"fulfillment?.id\\\"\\r\\n            [order]=\\\"order\\\"\\r\\n        ></vdr-fulfillment-detail>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\" *ngIf=\\\"fulfillment?.nextStates.length\\\">\\r\\n        <ng-container *ngIf=\\\"nextSuggestedState() as suggestedState\\\">\\r\\n            <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"transitionState.emit(suggestedState)\\\">\\r\\n                {{ 'order.set-fulfillment-state' | translate: { state: (suggestedState | stateI18nToken | translate) } }}\\r\\n            </button>\\r\\n        </ng-container>\\r\\n        <vdr-dropdown>\\r\\n            <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n            </button>\\r\\n            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                <ng-container *ngFor=\\\"let nextState of nextOtherStates()\\\">\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"transitionState.emit(nextState)\\\"\\r\\n                    >\\r\\n                        <ng-container *ngIf=\\\"nextState !== 'Cancelled'; else cancel\\\">\\r\\n                            <clr-icon shape=\\\"step-forward-2\\\"></clr-icon>\\r\\n                            {{ 'order.transition-to-state' | translate: { state: (nextState | stateI18nToken | translate) } }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #cancel>\\r\\n                            <clr-icon shape=\\\"error-standard\\\" class=\\\"is-error\\\"></clr-icon>\\r\\n                            {{ 'order.cancel-fulfillment' | translate }}\\r\\n                        </ng-template>\\r\\n                    </button>\\r\\n                </ng-container>\\r\\n            </vdr-dropdown-menu>\\r\\n        </vdr-dropdown>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".fulfillment-header{display:flex;justify-content:space-between;align-items:center}.card-footer{display:flex;align-items:center;justify-content:flex-end}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"component\", type: FulfillmentDetailComponent, selector: \"vdr-fulfillment-detail\", inputs: [\"fulfillmentId\", \"order\"] }, { kind: \"component\", type: FulfillmentStateLabelComponent, selector: \"vdr-fulfillment-state-label\", inputs: [\"state\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.StateI18nTokenPipe, name: \"stateI18nToken\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: FulfillmentCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-fulfillment-card', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header fulfillment-header\\\">\\r\\n        <div>{{ 'order.fulfillment' | translate }}</div>\\r\\n        <div class=\\\"fulfillment-state\\\">\\r\\n            <vdr-fulfillment-state-label [state]=\\\"fulfillment?.state\\\"></vdr-fulfillment-state-label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <vdr-fulfillment-detail\\r\\n            *ngIf=\\\"!!fulfillment\\\"\\r\\n            [fulfillmentId]=\\\"fulfillment?.id\\\"\\r\\n            [order]=\\\"order\\\"\\r\\n        ></vdr-fulfillment-detail>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\" *ngIf=\\\"fulfillment?.nextStates.length\\\">\\r\\n        <ng-container *ngIf=\\\"nextSuggestedState() as suggestedState\\\">\\r\\n            <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"transitionState.emit(suggestedState)\\\">\\r\\n                {{ 'order.set-fulfillment-state' | translate: { state: (suggestedState | stateI18nToken | translate) } }}\\r\\n            </button>\\r\\n        </ng-container>\\r\\n        <vdr-dropdown>\\r\\n            <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n            </button>\\r\\n            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                <ng-container *ngFor=\\\"let nextState of nextOtherStates()\\\">\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"transitionState.emit(nextState)\\\"\\r\\n                    >\\r\\n                        <ng-container *ngIf=\\\"nextState !== 'Cancelled'; else cancel\\\">\\r\\n                            <clr-icon shape=\\\"step-forward-2\\\"></clr-icon>\\r\\n                            {{ 'order.transition-to-state' | translate: { state: (nextState | stateI18nToken | translate) } }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #cancel>\\r\\n                            <clr-icon shape=\\\"error-standard\\\" class=\\\"is-error\\\"></clr-icon>\\r\\n                            {{ 'order.cancel-fulfillment' | translate }}\\r\\n                        </ng-template>\\r\\n                    </button>\\r\\n                </ng-container>\\r\\n            </vdr-dropdown-menu>\\r\\n        </vdr-dropdown>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".fulfillment-header{display:flex;justify-content:space-between;align-items:center}.card-footer{display:flex;align-items:center;justify-content:flex-end}\\n\"] }]\n        }], propDecorators: { fulfillment: [{\n                type: Input\n            }], order: [{\n                type: Input\n            }], transitionState: [{\n                type: Output\n            }] } });\n\nclass ModificationDetailComponent {\n    constructor() {\n        this.addedItems = new Map();\n        this.removedItems = new Map();\n        this.modifiedItems = new Set();\n    }\n    ngOnChanges() {\n        const { added, removed, modified } = this.getModifiedLines();\n        this.addedItems = added;\n        this.removedItems = removed;\n        this.modifiedItems = modified;\n    }\n    getSurcharge(id) {\n        return this.order.surcharges.find(m => m.id === id);\n    }\n    getAddedItems() {\n        return [...this.addedItems.entries()].map(([line, count]) => ({\n            name: line.productVariant.name,\n            quantity: count,\n        }));\n    }\n    getRemovedItems() {\n        return [...this.removedItems.entries()].map(([line, count]) => ({\n            name: line.productVariant.name,\n            quantity: count,\n        }));\n    }\n    getModifiedItems() {\n        return [...this.modifiedItems].map(line => ({\n            name: line.productVariant.name,\n        }));\n    }\n    getModifiedLines() {\n        const added = new Map();\n        const removed = new Map();\n        const modified = new Set();\n        for (const modificationLine of this.modification.lines || []) {\n            const line = this.order.lines.find(l => l.id === modificationLine.orderLineId);\n            if (!line) {\n                continue;\n            }\n            if (modificationLine.quantity === 0) {\n                modified.add(line);\n            }\n            else if (modificationLine.quantity < 0) {\n                removed.set(line, -modificationLine.quantity);\n            }\n            else {\n                added.set(line, modificationLine.quantity);\n            }\n        }\n        return { added, removed, modified };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ModificationDetailComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: ModificationDetailComponent, selector: \"vdr-modification-detail\", inputs: { order: \"order\", modification: \"modification\" }, usesOnChanges: true, ngImport: i0, template: \"<vdr-labeled-data [label]=\\\"'common.ID' | translate\\\">{{ modification.id }}</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"modification.note\\\" [label]=\\\"'order.note' | translate\\\">{{\\r\\n    modification.note\\r\\n}}</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngFor=\\\"let surcharge of modification.surcharges\\\" [label]=\\\"'order.surcharges' | translate\\\">\\r\\n    {{ getSurcharge(surcharge.id)?.description }}\\r\\n    {{ getSurcharge(surcharge.id)?.priceWithTax | localeCurrency: order.currencyCode }}</vdr-labeled-data\\r\\n>\\r\\n<vdr-labeled-data *ngIf=\\\"getAddedItems().length\\\" [label]=\\\"'order.added-items' | translate\\\">\\r\\n    <vdr-simple-item-list [items]=\\\"getAddedItems()\\\"></vdr-simple-item-list>\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"getRemovedItems().length\\\" [label]=\\\"'order.removed-items' | translate\\\">\\r\\n    <vdr-simple-item-list [items]=\\\"getRemovedItems()\\\"></vdr-simple-item-list>\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"getModifiedItems().length\\\" [label]=\\\"'order.modified-items' | translate\\\">\\r\\n    <vdr-simple-item-list [items]=\\\"getModifiedItems()\\\"></vdr-simple-item-list>\\r\\n</vdr-labeled-data>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: SimpleItemListComponent, selector: \"vdr-simple-item-list\", inputs: [\"items\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: ModificationDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-modification-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-labeled-data [label]=\\\"'common.ID' | translate\\\">{{ modification.id }}</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"modification.note\\\" [label]=\\\"'order.note' | translate\\\">{{\\r\\n    modification.note\\r\\n}}</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngFor=\\\"let surcharge of modification.surcharges\\\" [label]=\\\"'order.surcharges' | translate\\\">\\r\\n    {{ getSurcharge(surcharge.id)?.description }}\\r\\n    {{ getSurcharge(surcharge.id)?.priceWithTax | localeCurrency: order.currencyCode }}</vdr-labeled-data\\r\\n>\\r\\n<vdr-labeled-data *ngIf=\\\"getAddedItems().length\\\" [label]=\\\"'order.added-items' | translate\\\">\\r\\n    <vdr-simple-item-list [items]=\\\"getAddedItems()\\\"></vdr-simple-item-list>\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"getRemovedItems().length\\\" [label]=\\\"'order.removed-items' | translate\\\">\\r\\n    <vdr-simple-item-list [items]=\\\"getRemovedItems()\\\"></vdr-simple-item-list>\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"getModifiedItems().length\\\" [label]=\\\"'order.modified-items' | translate\\\">\\r\\n    <vdr-simple-item-list [items]=\\\"getModifiedItems()\\\"></vdr-simple-item-list>\\r\\n</vdr-labeled-data>\\r\\n\" }]\n        }], propDecorators: { order: [{\n                type: Input\n            }], modification: [{\n                type: Input\n            }] } });\n\nconst NODE_HEIGHT = 72;\n\nclass OrderProcessNodeComponent {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.active$ = new BehaviorSubject(false);\n        this.activeTarget$ = new BehaviorSubject(false);\n        this.isCancellable = false;\n        // We use a class field here to prevent the\n        // i18n extractor from extracting a \"Cancelled\" key\n        this.cancelledState = 'Cancelled';\n    }\n    ngOnChanges(changes) {\n        this.isCancellable = !!this.node.to.find((s) => s.name === 'Cancelled');\n        if (changes.active) {\n            this.active$.next(this.active);\n        }\n    }\n    getPos(origin = 'top') {\n        const rect = this.elementRef.nativeElement.getBoundingClientRect();\n        const nodeHeight = this.elementRef.nativeElement.querySelector('.node')?.getBoundingClientRect().height ?? 0;\n        return {\n            x: 10,\n            y: this.index * NODE_HEIGHT + (origin === 'bottom' ? nodeHeight : 0),\n        };\n    }\n    getStyle() {\n        const pos = this.getPos();\n        return {\n            'top.px': pos.y,\n            'left.px': pos.x,\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderProcessNodeComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderProcessNodeComponent, selector: \"vdr-order-process-node\", inputs: { node: \"node\", index: \"index\", active: \"active\" }, usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"node-wrapper\\\" [ngStyle]=\\\"getStyle()\\\" [class.active]=\\\"active$ | async\\\">\\r\\n    <div\\r\\n        class=\\\"node\\\"\\r\\n        [class.active-target]=\\\"activeTarget$ | async\\\"\\r\\n    >\\r\\n        {{ node.name | stateI18nToken | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"cancelled-wrapper\\\" *ngIf=\\\"isCancellable\\\">\\r\\n        <div class=\\\"cancelled-edge\\\">\\r\\n        </div>\\r\\n        <clr-icon shape=\\\"dot-circle\\\"></clr-icon>\\r\\n        <div class=\\\"cancelled-node\\\">\\r\\n            {{ cancelledState | stateI18nToken | translate }}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.node-wrapper{position:absolute;z-index:1;display:flex;align-items:center}.node{display:inline-block;border:2px solid var(--color-component-border-200);border-radius:3px;padding:3px 6px;z-index:1;background-color:var(--color-component-bg-100);opacity:.7;transition:opacity .2s,background-color .2s,color .2s;cursor:default}.node.active-target{border-color:var(--color-primary-500);opacity:.9}.cancelled-wrapper{display:flex;align-items:center;color:var(--color-grey-300);transition:color .2s,opacity .2s;opacity:.7}.cancelled-edge{width:48px;height:2px;background-color:var(--color-component-bg-300);transition:background-color .2s}clr-icon{margin-inline-start:-1px}.cancelled-node{margin-inline-start:6px}.active .cancelled-wrapper{opacity:1}.active .node{opacity:1;background-color:var(--color-primary-600);border-color:var(--color-primary-600);color:var(--color-primary-100)}.active .cancelled-wrapper{color:var(--color-error-500)}.active .cancelled-edge{background-color:var(--color-error-500)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.StateI18nTokenPipe, name: \"stateI18nToken\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderProcessNodeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-process-node', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"node-wrapper\\\" [ngStyle]=\\\"getStyle()\\\" [class.active]=\\\"active$ | async\\\">\\r\\n    <div\\r\\n        class=\\\"node\\\"\\r\\n        [class.active-target]=\\\"activeTarget$ | async\\\"\\r\\n    >\\r\\n        {{ node.name | stateI18nToken | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"cancelled-wrapper\\\" *ngIf=\\\"isCancellable\\\">\\r\\n        <div class=\\\"cancelled-edge\\\">\\r\\n        </div>\\r\\n        <clr-icon shape=\\\"dot-circle\\\"></clr-icon>\\r\\n        <div class=\\\"cancelled-node\\\">\\r\\n            {{ cancelledState | stateI18nToken | translate }}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.node-wrapper{position:absolute;z-index:1;display:flex;align-items:center}.node{display:inline-block;border:2px solid var(--color-component-border-200);border-radius:3px;padding:3px 6px;z-index:1;background-color:var(--color-component-bg-100);opacity:.7;transition:opacity .2s,background-color .2s,color .2s;cursor:default}.node.active-target{border-color:var(--color-primary-500);opacity:.9}.cancelled-wrapper{display:flex;align-items:center;color:var(--color-grey-300);transition:color .2s,opacity .2s;opacity:.7}.cancelled-edge{width:48px;height:2px;background-color:var(--color-component-bg-300);transition:background-color .2s}clr-icon{margin-inline-start:-1px}.cancelled-node{margin-inline-start:6px}.active .cancelled-wrapper{opacity:1}.active .node{opacity:1;background-color:var(--color-primary-600);border-color:var(--color-primary-600);color:var(--color-primary-100)}.active .cancelled-wrapper{color:var(--color-error-500)}.active .cancelled-edge{background-color:var(--color-error-500)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { node: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }] } });\n\nclass OrderProcessEdgeComponent {\n    ngOnInit() {\n        this.active$ = this.from.active$\n            .asObservable()\n            .pipe(tap((active) => this.to.activeTarget$.next(active)));\n    }\n    getStyle() {\n        const direction = this.from.index < this.to.index ? 'down' : 'up';\n        const startPos = this.from.getPos(direction === 'down' ? 'bottom' : 'top');\n        const endPos = this.to.getPos(direction === 'down' ? 'top' : 'bottom');\n        const dX = Math.abs(startPos.x - endPos.x);\n        const dY = Math.abs(startPos.y - endPos.y);\n        const length = Math.sqrt(dX ** 2 + dY ** 2);\n        return {\n            'top.px': startPos.y,\n            'left.px': startPos.x + (direction === 'down' ? 10 : 40) + this.index * 12,\n            'height.px': length,\n            'width.px': 1,\n            ...(direction === 'up'\n                ? {\n                    transform: 'rotateZ(180deg)',\n                    'transform-origin': 'top',\n                }\n                : {}),\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderProcessEdgeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderProcessEdgeComponent, selector: \"vdr-order-process-edge\", inputs: { from: \"from\", to: \"to\", index: \"index\" }, ngImport: i0, template: \"<div\\r\\n    [attr.data-from]=\\\"from.node.name\\\"\\r\\n    [attr.data-to]=\\\"to.node.name\\\"\\r\\n    [ngStyle]=\\\"getStyle()\\\"\\r\\n    [class.active]=\\\"active$ | async\\\"\\r\\n    class=\\\"edge\\\">\\r\\n    <clr-icon shape=\\\"arrow\\\" flip=\\\"vertical\\\" class=\\\"arrow\\\"></clr-icon>\\r\\n</div>\\r\\n\", styles: [\".edge{position:absolute;border:1px solid var(--color-component-border-200);background-color:var(--color-component-bg-300);opacity:.3;transition:border .2s,opacity .2s,background-color .2s}.edge.active{border-color:var(--color-primary-500);background-color:var(--color-primary-500);opacity:1}.edge.active .arrow{color:var(--color-primary-500)}.edge .arrow{position:absolute;bottom:-4px;left:-8px;color:var(--color-grey-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderProcessEdgeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-process-edge', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\r\\n    [attr.data-from]=\\\"from.node.name\\\"\\r\\n    [attr.data-to]=\\\"to.node.name\\\"\\r\\n    [ngStyle]=\\\"getStyle()\\\"\\r\\n    [class.active]=\\\"active$ | async\\\"\\r\\n    class=\\\"edge\\\">\\r\\n    <clr-icon shape=\\\"arrow\\\" flip=\\\"vertical\\\" class=\\\"arrow\\\"></clr-icon>\\r\\n</div>\\r\\n\", styles: [\".edge{position:absolute;border:1px solid var(--color-component-border-200);background-color:var(--color-component-bg-300);opacity:.3;transition:border .2s,opacity .2s,background-color .2s}.edge.active{border-color:var(--color-primary-500);background-color:var(--color-primary-500);opacity:1}.edge.active .arrow{color:var(--color-primary-500)}.edge .arrow{position:absolute;bottom:-4px;left:-8px;color:var(--color-grey-300)}\\n\"] }]\n        }], propDecorators: { from: [{\n                type: Input\n            }], to: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }] } });\n\nclass OrderProcessGraphComponent {\n    constructor(changeDetector) {\n        this.changeDetector = changeDetector;\n        this.setActiveState$ = new BehaviorSubject(undefined);\n        this.nodes = [];\n        this.edges = [];\n    }\n    get outerHeight() {\n        return this.nodes.length * NODE_HEIGHT;\n    }\n    ngOnInit() {\n        this.setActiveState$.next(this.initialState);\n        this.activeState$ = this.setActiveState$.pipe(debounceTime(150));\n    }\n    ngOnChanges(changes) {\n        this.populateNodes();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.populateEdges());\n    }\n    onMouseOver(stateName) {\n        this.setActiveState$.next(stateName);\n    }\n    onMouseOut() {\n        this.setActiveState$.next(this.initialState);\n    }\n    getNodeFor(state) {\n        if (this.nodeComponents) {\n            return this.nodeComponents.find((n) => n.node.name === state);\n        }\n    }\n    populateNodes() {\n        const stateNodeMap = new Map();\n        for (const state of this.states) {\n            stateNodeMap.set(state.name, {\n                name: state.name,\n                to: [],\n            });\n        }\n        for (const [name, stateNode] of stateNodeMap.entries()) {\n            const targets = this.states.find((s) => s.name === name)?.to ?? [];\n            for (const target of targets) {\n                const targetNode = stateNodeMap.get(target);\n                if (targetNode) {\n                    stateNode.to.push(targetNode);\n                }\n            }\n        }\n        this.nodes = [...stateNodeMap.values()].filter((n) => n.name !== 'Cancelled');\n    }\n    populateEdges() {\n        for (const node of this.nodes) {\n            const nodeCmp = this.getNodeFor(node.name);\n            let index = 0;\n            for (const to of node.to) {\n                const toCmp = this.getNodeFor(to.name);\n                if (nodeCmp && toCmp && nodeCmp !== toCmp) {\n                    this.edges.push({\n                        to: toCmp,\n                        from: nodeCmp,\n                        index,\n                    });\n                    index++;\n                }\n            }\n        }\n        this.edges = [...this.edges];\n        this.changeDetector.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderProcessGraphComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderProcessGraphComponent, selector: \"vdr-order-process-graph\", inputs: { states: \"states\", initialState: \"initialState\" }, host: { properties: { \"style.height.px\": \"this.outerHeight\" } }, viewQueries: [{ propertyName: \"nodeComponents\", predicate: OrderProcessNodeComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<ng-container *ngFor=\\\"let state of nodes; let i = index\\\">\\r\\n    <vdr-order-process-node\\r\\n        [node]=\\\"state\\\"\\r\\n        [index]=\\\"i\\\"\\r\\n        [active]=\\\"(activeState$ | async) === state.name\\\"\\r\\n        (mouseenter)=\\\"onMouseOver(state.name)\\\"\\r\\n        (mouseleave)=\\\"onMouseOut()\\\"\\r\\n    ></vdr-order-process-node>\\r\\n</ng-container>\\r\\n<ng-container *ngFor=\\\"let edge of edges\\\">\\r\\n    <vdr-order-process-edge [from]=\\\"edge.from\\\" [to]=\\\"edge.to\\\" [index]=\\\"edge.index\\\"></vdr-order-process-edge>\\r\\n</ng-container>\\r\\n\", styles: [\":host{display:block;border:1px hotpink;margin:20px;padding:12px;position:relative}.state-row{display:flex}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"component\", type: OrderProcessNodeComponent, selector: \"vdr-order-process-node\", inputs: [\"node\", \"index\", \"active\"] }, { kind: \"component\", type: OrderProcessEdgeComponent, selector: \"vdr-order-process-edge\", inputs: [\"from\", \"to\", \"index\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderProcessGraphComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-process-graph', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngFor=\\\"let state of nodes; let i = index\\\">\\r\\n    <vdr-order-process-node\\r\\n        [node]=\\\"state\\\"\\r\\n        [index]=\\\"i\\\"\\r\\n        [active]=\\\"(activeState$ | async) === state.name\\\"\\r\\n        (mouseenter)=\\\"onMouseOver(state.name)\\\"\\r\\n        (mouseleave)=\\\"onMouseOut()\\\"\\r\\n    ></vdr-order-process-node>\\r\\n</ng-container>\\r\\n<ng-container *ngFor=\\\"let edge of edges\\\">\\r\\n    <vdr-order-process-edge [from]=\\\"edge.from\\\" [to]=\\\"edge.to\\\" [index]=\\\"edge.index\\\"></vdr-order-process-edge>\\r\\n</ng-container>\\r\\n\", styles: [\":host{display:block;border:1px hotpink;margin:20px;padding:12px;position:relative}.state-row{display:flex}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { states: [{\n                type: Input\n            }], initialState: [{\n                type: Input\n            }], nodeComponents: [{\n                type: ViewChildren,\n                args: [OrderProcessNodeComponent]\n            }], outerHeight: [{\n                type: HostBinding,\n                args: ['style.height.px']\n            }] } });\n\nclass OrderProcessGraphDialogComponent {\n    constructor(serverConfigService) {\n        this.serverConfigService = serverConfigService;\n        this.states = [];\n    }\n    ngOnInit() {\n        this.states = this.serverConfigService.getOrderProcessStates();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderProcessGraphDialogComponent, deps: [{ token: i1.ServerConfigService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderProcessGraphDialogComponent, selector: \"vdr-order-process-graph-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'order.order-state-diagram' | translate }}</ng-template>\\r\\n\\r\\n<vdr-order-process-graph [states]=\\\"states\\\" [initialState]=\\\"activeState\\\"></vdr-order-process-graph>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: OrderProcessGraphComponent, selector: \"vdr-order-process-graph\", inputs: [\"states\", \"initialState\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderProcessGraphDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-process-graph-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'order.order-state-diagram' | translate }}</ng-template>\\r\\n\\r\\n<vdr-order-process-graph [states]=\\\"states\\\" [initialState]=\\\"activeState\\\"></vdr-order-process-graph>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.ServerConfigService }] });\n\nclass PaymentForRefundSelectorComponent {\n    constructor() {\n        this.paymentSelected = new EventEmitter();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PaymentForRefundSelectorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: PaymentForRefundSelectorComponent, selector: \"vdr-payment-for-refund-selector\", inputs: { refundablePayments: \"refundablePayments\", order: \"order\" }, outputs: { paymentSelected: \"paymentSelected\" }, ngImport: i0, template: \"<vdr-card\\r\\n        [title]=\\\"'order.payment' | translate\\\"\\r\\n        [class.selected]=\\\"payment.selected\\\"\\r\\n        [class.unselected]=\\\"!payment.selected\\\"\\r\\n        *ngFor=\\\"let payment of refundablePayments\\\"\\r\\n>\\r\\n    <ng-template vdrCardControls>\\r\\n        <vdr-select-toggle\\r\\n                size=\\\"small\\\"\\r\\n                [title]=\\\"'order.refund-this-payment' | translate\\\"\\r\\n                [label]=\\\"'order.refund-this-payment' | translate\\\"\\r\\n                [disabled]=\\\"refundablePayments.length === 1\\\"\\r\\n                [(selected)]=\\\"payment.selected\\\"\\r\\n                (selectedChange)=\\\"paymentSelected.emit({ payment: payment, selected: $event })\\\"\\r\\n        ></vdr-select-toggle>\\r\\n    </ng-template>\\r\\n    <div class=\\\"form-grid\\\">\\r\\n        <vdr-labeled-data [label]=\\\"'order.payment-method' | translate\\\">\\r\\n            {{ payment.method }}\\r\\n        </vdr-labeled-data>\\r\\n        <vdr-labeled-data [label]=\\\"'order.transaction-id' | translate\\\">\\r\\n            {{ payment.transactionId }}\\r\\n        </vdr-labeled-data>\\r\\n        <vdr-labeled-data [label]=\\\"'order.payment-amount' | translate\\\">\\r\\n            {{ payment.amount | localeCurrency : order.currencyCode }}\\r\\n        </vdr-labeled-data>\\r\\n        <vdr-labeled-data [label]=\\\"'order.refundable-amount' | translate\\\">\\r\\n            {{ payment.refundableAmount | localeCurrency : order.currencyCode }}\\r\\n        </vdr-labeled-data>\\r\\n    </div>\\r\\n    <vdr-form-field [label]=\\\"'order.refund-amount' | translate\\\">\\r\\n        <vdr-currency-input\\r\\n                [readonly]=\\\"!payment.selected\\\"\\r\\n                [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                [formControl]=\\\"payment.amountToRefundControl\\\"\\r\\n        ></vdr-currency-input>\\r\\n    </vdr-form-field>\\r\\n</vdr-card>\", styles: [\":host{display:block}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.SelectToggleComponent, selector: \"vdr-select-toggle\", inputs: [\"size\", \"selected\", \"hiddenWhenOff\", \"disabled\", \"label\"], outputs: [\"selectedChange\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"directive\", type: i1.CardControlsDirective, selector: \"[vdrCardControls]\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PaymentForRefundSelectorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-payment-for-refund-selector', changeDetection: ChangeDetectionStrategy.Default, template: \"<vdr-card\\r\\n        [title]=\\\"'order.payment' | translate\\\"\\r\\n        [class.selected]=\\\"payment.selected\\\"\\r\\n        [class.unselected]=\\\"!payment.selected\\\"\\r\\n        *ngFor=\\\"let payment of refundablePayments\\\"\\r\\n>\\r\\n    <ng-template vdrCardControls>\\r\\n        <vdr-select-toggle\\r\\n                size=\\\"small\\\"\\r\\n                [title]=\\\"'order.refund-this-payment' | translate\\\"\\r\\n                [label]=\\\"'order.refund-this-payment' | translate\\\"\\r\\n                [disabled]=\\\"refundablePayments.length === 1\\\"\\r\\n                [(selected)]=\\\"payment.selected\\\"\\r\\n                (selectedChange)=\\\"paymentSelected.emit({ payment: payment, selected: $event })\\\"\\r\\n        ></vdr-select-toggle>\\r\\n    </ng-template>\\r\\n    <div class=\\\"form-grid\\\">\\r\\n        <vdr-labeled-data [label]=\\\"'order.payment-method' | translate\\\">\\r\\n            {{ payment.method }}\\r\\n        </vdr-labeled-data>\\r\\n        <vdr-labeled-data [label]=\\\"'order.transaction-id' | translate\\\">\\r\\n            {{ payment.transactionId }}\\r\\n        </vdr-labeled-data>\\r\\n        <vdr-labeled-data [label]=\\\"'order.payment-amount' | translate\\\">\\r\\n            {{ payment.amount | localeCurrency : order.currencyCode }}\\r\\n        </vdr-labeled-data>\\r\\n        <vdr-labeled-data [label]=\\\"'order.refundable-amount' | translate\\\">\\r\\n            {{ payment.refundableAmount | localeCurrency : order.currencyCode }}\\r\\n        </vdr-labeled-data>\\r\\n    </div>\\r\\n    <vdr-form-field [label]=\\\"'order.refund-amount' | translate\\\">\\r\\n        <vdr-currency-input\\r\\n                [readonly]=\\\"!payment.selected\\\"\\r\\n                [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                [formControl]=\\\"payment.amountToRefundControl\\\"\\r\\n        ></vdr-currency-input>\\r\\n    </vdr-form-field>\\r\\n</vdr-card>\", styles: [\":host{display:block}\\n\"] }]\n        }], propDecorators: { refundablePayments: [{\n                type: Input\n            }], order: [{\n                type: Input\n            }], paymentSelected: [{\n                type: Output\n            }] } });\n\nclass RefundOrderDialogComponent {\n    constructor(i18nService) {\n        this.i18nService = i18nService;\n        this.lineQuantities = {};\n        this.refundablePayments = [];\n        this.refundShippingLineIds = [];\n        this.reasons = getAppConfig().cancellationReasons ?? [\n            marker('order.refund-reason-customer-request'),\n            marker('order.refund-reason-not-available'),\n        ];\n        this.manuallySetRefundTotal = false;\n        this.refundTotal = 0;\n        this.reasons = this.reasons.map(r => this.i18nService.translate(r));\n    }\n    get totalRefundableAmount() {\n        return summate(this.refundablePayments, 'refundableAmount');\n    }\n    get amountToRefundTotal() {\n        return this.refundablePayments.reduce((total, payment) => total + payment.amountToRefundControl.value, 0);\n    }\n    lineCanBeRefundedOrCancelled(line) {\n        const refundedCount = this.order.payments\n            ?.reduce((all, payment) => [...all, ...payment.refunds], [])\n            .filter(refund => refund.state !== 'Failed')\n            .reduce((all, refund) => [...all, ...refund.lines], [])\n            .filter(refundLine => refundLine.orderLineId === line.id)\n            .reduce((sum, refundLine) => sum + refundLine.quantity, 0) ?? 0;\n        return refundedCount < line.orderPlacedQuantity;\n    }\n    ngOnInit() {\n        this.lineQuantities = this.order.lines.reduce((result, line) => ({\n            ...result,\n            [line.id]: {\n                quantity: 0,\n                refund: true,\n                cancel: false,\n            },\n        }), {});\n        this.refundablePayments = getRefundablePayments(this.order.payments);\n    }\n    updateRefundTotal() {\n        if (!this.manuallySetRefundTotal) {\n            const itemTotal = this.order.lines.reduce((total, line) => {\n                const lineRef = this.lineQuantities[line.id];\n                const refundCount = lineRef.quantity || 0;\n                return total + line.proratedUnitPriceWithTax * refundCount;\n            }, 0);\n            const shippingTotal = this.order.shippingLines.reduce((total, line) => {\n                if (this.refundShippingLineIds.includes(line.id)) {\n                    return total + line.discountedPriceWithTax;\n                }\n                else {\n                    return total;\n                }\n            }, 0);\n            this.refundTotal = itemTotal + shippingTotal;\n        }\n        // allocate the refund total across the refundable payments\n        const refundablePayments = this.refundablePayments.filter(p => p.selected);\n        let refundsAllocated = 0;\n        for (const payment of refundablePayments) {\n            const amountToRefund = Math.min(payment.refundableAmount, this.refundTotal - refundsAllocated);\n            payment.amountToRefundControl.setValue(amountToRefund);\n            refundsAllocated += amountToRefund;\n        }\n    }\n    toggleShippingRefund(lineId) {\n        const index = this.refundShippingLineIds.indexOf(lineId);\n        if (index === -1) {\n            this.refundShippingLineIds.push(lineId);\n        }\n        else {\n            this.refundShippingLineIds.splice(index, 1);\n        }\n        this.updateRefundTotal();\n    }\n    onRefundQuantityChange(orderLineId, quantity) {\n        this.manuallySetRefundTotal = false;\n        const selectionLine = this.lineQuantities[orderLineId];\n        if (selectionLine) {\n            const previousQuantity = selectionLine.quantity;\n            if (quantity === 0) {\n                selectionLine.cancel = false;\n            }\n            else if (previousQuantity === 0 && quantity > 0) {\n                selectionLine.cancel = true;\n            }\n            selectionLine.quantity = quantity;\n            this.updateRefundTotal();\n        }\n    }\n    onPaymentSelected(payment, selected) {\n        if (selected) {\n            const outstandingRefundAmount = this.refundTotal -\n                this.refundablePayments\n                    .filter(p => p.id !== payment.id)\n                    .reduce((total, p) => total + p.amountToRefundControl.value, 0);\n            if (0 < outstandingRefundAmount) {\n                payment.amountToRefundControl.setValue(Math.min(outstandingRefundAmount, payment.refundableAmount));\n            }\n        }\n        else {\n            payment.amountToRefundControl.setValue(0);\n        }\n    }\n    isRefunding() {\n        const result = Object.values(this.lineQuantities).reduce((isRefunding, line) => isRefunding || 0 < line.quantity, false);\n        return result;\n    }\n    isCancelling() {\n        const result = Object.values(this.lineQuantities).reduce((isCancelling, line) => isCancelling || (0 < line.quantity && line.cancel), false);\n        return result;\n    }\n    canSubmit() {\n        return 0 < this.refundTotal && this.amountToRefundTotal === this.refundTotal && !!this.reason;\n    }\n    select() {\n        const refundLines = this.getOrderLineInput(() => true);\n        const cancelLines = this.getOrderLineInput(line => line.cancel);\n        this.resolveWith({\n            refunds: this.refundablePayments\n                .filter(rp => rp.selected && 0 < rp.amountToRefundControl.value)\n                .map(payment => {\n                return {\n                    lines: refundLines,\n                    reason: this.reason,\n                    paymentId: payment.id,\n                    amount: payment.amountToRefundControl.value,\n                    shipping: 0,\n                    adjustment: 0,\n                };\n            }),\n            cancel: {\n                lines: cancelLines,\n                orderId: this.order.id,\n                reason: this.reason,\n                cancelShipping: this.refundShippingLineIds.length > 0,\n            },\n        });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    getOrderLineInput(filterFn) {\n        return Object.entries(this.lineQuantities)\n            .filter(([orderLineId, line]) => 0 < line.quantity && filterFn(line))\n            .map(([orderLineId, line]) => ({\n            orderLineId,\n            quantity: line.quantity,\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: RefundOrderDialogComponent, deps: [{ token: i1.I18nService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: RefundOrderDialogComponent, selector: \"vdr-refund-order-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'order.refund-and-cancel-order' | translate }}</ng-template>\\r\\n\\r\\n<div class=\\\"refund-wrapper\\\">\\r\\n    <vdr-data-table-2 id=\\\"refund-order\\\" [items]=\\\"order.lines\\\">\\r\\n        <!-- Here we define all the available columns -->\\r\\n        <vdr-dt2-column id=\\\"id\\\" [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.id }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"created-at\\\" [heading]=\\\"'common.created-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.createdAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"updated-at\\\" [heading]=\\\"'common.updated-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.updatedAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                <div class=\\\"image-placeholder\\\">\\r\\n                    <img\\r\\n                        *ngIf=\\\"line.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                        [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                    />\\r\\n                    <ng-template #imagePlaceholder>\\r\\n                        <div class=\\\"placeholder\\\">\\r\\n                            <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"product-name\\\" [heading]=\\\"'order.product-name' | translate\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.productVariant.name }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"product-sku\\\" [heading]=\\\"'order.product-sku' | translate\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.productVariant.sku }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"unit-price\\\" [heading]=\\\"'order.unit-price' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.unitPriceWithTax | localeCurrency : order.currencyCode }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"prorated-unit-price\\\" [heading]=\\\"'order.prorated-unit-price' | translate\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.unitPriceWithTax | localeCurrency : order.currencyCode }}\\r\\n                <ng-container *ngIf=\\\"line.discounts as discounts\\\">\\r\\n                    <vdr-dropdown *ngIf=\\\"discounts.length\\\">\\r\\n                        <div class=\\\"promotions-label\\\" vdrDropdownTrigger>\\r\\n                            <button class=\\\"icon-button\\\"><clr-icon shape=\\\"info\\\"></clr-icon></button>\\r\\n                        </div>\\r\\n                        <vdr-dropdown-menu>\\r\\n                            <div class=\\\"line-promotion\\\" *ngFor=\\\"let discount of discounts\\\">\\r\\n                                {{ discount.description }}\\r\\n                                <div class=\\\"promotion-amount\\\">\\r\\n                                    {{\\r\\n                                        discount.amount / 100 / line.quantity\\r\\n                                            | number : '1.0-2'\\r\\n                                            | currency : order.currencyCode\\r\\n                                    }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </ng-container>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"quantity\\\" [heading]=\\\"'order.quantity' | translate\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.quantity }}\\r\\n                <vdr-line-refunds [line]=\\\"line\\\" [payments]=\\\"order.payments\\\"></vdr-line-refunds>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"refund-quantity\\\" [heading]=\\\"'order.refund' | translate\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                <input\\r\\n                    *ngIf=\\\"lineCanBeRefundedOrCancelled(line)\\\"\\r\\n                    [ngModel]=\\\"lineQuantities[line.id].quantity\\\"\\r\\n                    type=\\\"number\\\"\\r\\n                    [max]=\\\"line.quantity\\\"\\r\\n                    min=\\\"0\\\"\\r\\n                    (ngModelChange)=\\\"onRefundQuantityChange(line.id, $event)\\\"\\r\\n                />\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"cancel\\\" [heading]=\\\"'order.return-to-stock' | translate\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                <div class=\\\"cancel-checkbox-wrapper\\\">\\r\\n                    <label class=\\\"flex center\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            *ngIf=\\\"lineCanBeRefundedOrCancelled(line)\\\"\\r\\n                            clrCheckbox\\r\\n                            [disabled]=\\\"0 === lineQuantities[line.id].quantity\\\"\\r\\n                            [(ngModel)]=\\\"lineQuantities[line.id].cancel\\\"\\r\\n                        />\\r\\n                        <span class=\\\"ml-1\\\">{{ 'order.return-to-stock' | translate }}</span></label\\r\\n                    >\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n    </vdr-data-table-2>\\r\\n\\r\\n    <div class=\\\"refund-details mt-4\\\">\\r\\n        <div>\\r\\n            <vdr-card>\\r\\n                <label class=\\\"flex mb-2\\\" *ngFor=\\\"let shippingLine of order.shippingLines\\\">\\r\\n                    <input type=\\\"checkbox\\\" clrCheckbox (change)=\\\"toggleShippingRefund(shippingLine.id)\\\" />\\r\\n                    <div class=\\\"ml-1\\\">\\r\\n                        {{ 'order.refund-shipping' | translate }}\\r\\n                        <span>{{ shippingLine.shippingMethod.name }}:</span>\\r\\n                        <span class=\\\"ml-1\\\"\\r\\n                            >{{ shippingLine.discountedPriceWithTax | localeCurrency : order.currencyCode }}\\r\\n                        </span>\\r\\n                    </div></label\\r\\n                >\\r\\n                <vdr-form-field [label]=\\\"'order.refund-cancellation-reason' | translate\\\" class=\\\"mb-2\\\">\\r\\n                    <ng-select\\r\\n                        [items]=\\\"reasons\\\"\\r\\n                        bindLabel=\\\"name\\\"\\r\\n                        autofocus\\r\\n                        [placeholder]=\\\"'order.refund-cancellation-reason-required' | translate\\\"\\r\\n                        bindValue=\\\"id\\\"\\r\\n                        [addTag]=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"reason\\\"\\r\\n                    ></ng-select>\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'order.refund-total' | translate\\\"\\r\\n                    [readOnlyToggle]=\\\"true\\\"\\r\\n                    (readOnlyToggleChange)=\\\"manuallySetRefundTotal = !$event\\\"\\r\\n                >\\r\\n                    <vdr-currency-input\\r\\n                        [readonly]=\\\"!manuallySetRefundTotal\\\"\\r\\n                        [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                        [(ngModel)]=\\\"refundTotal\\\"\\r\\n                        (ngModelChange)=\\\"updateRefundTotal()\\\"\\r\\n                    ></vdr-currency-input>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n        </div>\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-payment-for-refund-selector\\r\\n                [refundablePayments]=\\\"refundablePayments\\\"\\r\\n                (paymentSelected)=\\\"onPaymentSelected($event.payment, $event.selected)\\\"\\r\\n                [order]=\\\"order\\\"\\r\\n            ></vdr-payment-for-refund-selector>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <div>\\r\\n        <div class=\\\"errors\\\">\\r\\n            <clr-alert\\r\\n                *ngIf=\\\"refundTotal < 0 || totalRefundableAmount < refundTotal\\\"\\r\\n                [clrAlertType]=\\\"'danger'\\\"\\r\\n                [clrAlertClosable]=\\\"false\\\"\\r\\n            >\\r\\n                <clr-alert-item>\\r\\n                    {{\\r\\n                        'order.refund-total-error'\\r\\n                            | translate\\r\\n                                : {\\r\\n                                      min: 0 | currency : order.currencyCode,\\r\\n                                      max: totalRefundableAmount | localeCurrency : order.currencyCode\\r\\n                                  }\\r\\n                    }}\\r\\n                </clr-alert-item>\\r\\n            </clr-alert>\\r\\n            <clr-alert\\r\\n                *ngIf=\\\"amountToRefundTotal < refundTotal || refundTotal < amountToRefundTotal\\\"\\r\\n                [clrAlertType]=\\\"'danger'\\\"\\r\\n                [clrAlertClosable]=\\\"false\\\"\\r\\n            >\\r\\n                <clr-alert-item>\\r\\n                    {{ 'order.refund-total-warning' | translate }}\\r\\n                </clr-alert-item>\\r\\n            </clr-alert>\\r\\n            <clr-alert\\r\\n                *ngIf=\\\"amountToRefundTotal && !reason\\\"\\r\\n                [clrAlertType]=\\\"'danger'\\\"\\r\\n                [clrAlertClosable]=\\\"false\\\"\\r\\n            >\\r\\n                <clr-alert-item>\\r\\n                    {{ 'order.refund-cancellation-reason-required' | translate }}\\r\\n                </clr-alert-item>\\r\\n            </clr-alert>\\r\\n        </div>\\r\\n        <div class=\\\"modal-buttons\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n            <button type=\\\"submit\\\" (click)=\\\"select()\\\" [disabled]=\\\"!canSubmit()\\\" class=\\\"btn btn-primary\\\">\\r\\n                {{\\r\\n                    'order.refund-with-amount'\\r\\n                        | translate : { amount: amountToRefundTotal | localeCurrency : order.currencyCode }\\r\\n                }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\", styles: [\":host{height:100%;display:flex;flex-direction:column;min-height:64vh}.refund-wrapper{flex:1;flex-direction:column}.refund-wrapper .order-table{flex:1;overflow-y:auto}.refund-wrapper .order-table table{margin-top:0}.refund-wrapper tr.ignore{color:var(--color-grey-300)}::ng-deep .refund-wrapper .table-wrapper{max-width:initial!important}.quantity-col{background-color:var(--color-warning-100)}.cancel-checkbox-wrapper{display:flex;align-items:center;justify-content:center}clr-checkbox-wrapper{margin-top:12px;margin-bottom:12px;display:block}.refund-details{display:flex;flex-direction:column;padding-bottom:var(--space-unit);gap:calc(var(--space-unit) * 2);justify-content:space-between}@media screen and (min-width: 992px){.refund-details{flex-direction:row}}.refund-details vdr-card.unselected{opacity:.8}.refund-details>*{flex:1}.errors{display:flex;justify-content:flex-end;gap:calc(var(--space-unit) * 2);margin:calc(var(--space-unit) * 2) 0}.prorated-wrapper{display:flex;justify-content:center}.line-promotion{display:flex;justify-content:space-between;font-size:12px;padding:3px 6px}.line-promotion .promotion-amount{margin-inline-start:12px}vdr-card.faded{opacity:.8}.modal-buttons{display:flex;justify-content:flex-end;gap:.6rem;gap:var(--clr-modal-footer-gap, .6rem)}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertLightweight\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: LineRefundsComponent, selector: \"vdr-line-refunds\", inputs: [\"line\", \"payments\"] }, { kind: \"component\", type: PaymentForRefundSelectorComponent, selector: \"vdr-payment-for-refund-selector\", inputs: [\"refundablePayments\", \"order\"], outputs: [\"paymentSelected\"] }, { kind: \"pipe\", type: i2$1.DecimalPipe, name: \"number\" }, { kind: \"pipe\", type: i2$1.CurrencyPipe, name: \"currency\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: RefundOrderDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-refund-order-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'order.refund-and-cancel-order' | translate }}</ng-template>\\r\\n\\r\\n<div class=\\\"refund-wrapper\\\">\\r\\n    <vdr-data-table-2 id=\\\"refund-order\\\" [items]=\\\"order.lines\\\">\\r\\n        <!-- Here we define all the available columns -->\\r\\n        <vdr-dt2-column id=\\\"id\\\" [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.id }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"created-at\\\" [heading]=\\\"'common.created-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.createdAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"updated-at\\\" [heading]=\\\"'common.updated-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.updatedAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                <div class=\\\"image-placeholder\\\">\\r\\n                    <img\\r\\n                        *ngIf=\\\"line.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                        [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                    />\\r\\n                    <ng-template #imagePlaceholder>\\r\\n                        <div class=\\\"placeholder\\\">\\r\\n                            <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"product-name\\\" [heading]=\\\"'order.product-name' | translate\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.productVariant.name }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"product-sku\\\" [heading]=\\\"'order.product-sku' | translate\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.productVariant.sku }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"unit-price\\\" [heading]=\\\"'order.unit-price' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.unitPriceWithTax | localeCurrency : order.currencyCode }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"prorated-unit-price\\\" [heading]=\\\"'order.prorated-unit-price' | translate\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.unitPriceWithTax | localeCurrency : order.currencyCode }}\\r\\n                <ng-container *ngIf=\\\"line.discounts as discounts\\\">\\r\\n                    <vdr-dropdown *ngIf=\\\"discounts.length\\\">\\r\\n                        <div class=\\\"promotions-label\\\" vdrDropdownTrigger>\\r\\n                            <button class=\\\"icon-button\\\"><clr-icon shape=\\\"info\\\"></clr-icon></button>\\r\\n                        </div>\\r\\n                        <vdr-dropdown-menu>\\r\\n                            <div class=\\\"line-promotion\\\" *ngFor=\\\"let discount of discounts\\\">\\r\\n                                {{ discount.description }}\\r\\n                                <div class=\\\"promotion-amount\\\">\\r\\n                                    {{\\r\\n                                        discount.amount / 100 / line.quantity\\r\\n                                            | number : '1.0-2'\\r\\n                                            | currency : order.currencyCode\\r\\n                                    }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </ng-container>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"quantity\\\" [heading]=\\\"'order.quantity' | translate\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                {{ line.quantity }}\\r\\n                <vdr-line-refunds [line]=\\\"line\\\" [payments]=\\\"order.payments\\\"></vdr-line-refunds>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"refund-quantity\\\" [heading]=\\\"'order.refund' | translate\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                <input\\r\\n                    *ngIf=\\\"lineCanBeRefundedOrCancelled(line)\\\"\\r\\n                    [ngModel]=\\\"lineQuantities[line.id].quantity\\\"\\r\\n                    type=\\\"number\\\"\\r\\n                    [max]=\\\"line.quantity\\\"\\r\\n                    min=\\\"0\\\"\\r\\n                    (ngModelChange)=\\\"onRefundQuantityChange(line.id, $event)\\\"\\r\\n                />\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column id=\\\"cancel\\\" [heading]=\\\"'order.return-to-stock' | translate\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-line=\\\"item\\\">\\r\\n                <div class=\\\"cancel-checkbox-wrapper\\\">\\r\\n                    <label class=\\\"flex center\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            *ngIf=\\\"lineCanBeRefundedOrCancelled(line)\\\"\\r\\n                            clrCheckbox\\r\\n                            [disabled]=\\\"0 === lineQuantities[line.id].quantity\\\"\\r\\n                            [(ngModel)]=\\\"lineQuantities[line.id].cancel\\\"\\r\\n                        />\\r\\n                        <span class=\\\"ml-1\\\">{{ 'order.return-to-stock' | translate }}</span></label\\r\\n                    >\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n    </vdr-data-table-2>\\r\\n\\r\\n    <div class=\\\"refund-details mt-4\\\">\\r\\n        <div>\\r\\n            <vdr-card>\\r\\n                <label class=\\\"flex mb-2\\\" *ngFor=\\\"let shippingLine of order.shippingLines\\\">\\r\\n                    <input type=\\\"checkbox\\\" clrCheckbox (change)=\\\"toggleShippingRefund(shippingLine.id)\\\" />\\r\\n                    <div class=\\\"ml-1\\\">\\r\\n                        {{ 'order.refund-shipping' | translate }}\\r\\n                        <span>{{ shippingLine.shippingMethod.name }}:</span>\\r\\n                        <span class=\\\"ml-1\\\"\\r\\n                            >{{ shippingLine.discountedPriceWithTax | localeCurrency : order.currencyCode }}\\r\\n                        </span>\\r\\n                    </div></label\\r\\n                >\\r\\n                <vdr-form-field [label]=\\\"'order.refund-cancellation-reason' | translate\\\" class=\\\"mb-2\\\">\\r\\n                    <ng-select\\r\\n                        [items]=\\\"reasons\\\"\\r\\n                        bindLabel=\\\"name\\\"\\r\\n                        autofocus\\r\\n                        [placeholder]=\\\"'order.refund-cancellation-reason-required' | translate\\\"\\r\\n                        bindValue=\\\"id\\\"\\r\\n                        [addTag]=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"reason\\\"\\r\\n                    ></ng-select>\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'order.refund-total' | translate\\\"\\r\\n                    [readOnlyToggle]=\\\"true\\\"\\r\\n                    (readOnlyToggleChange)=\\\"manuallySetRefundTotal = !$event\\\"\\r\\n                >\\r\\n                    <vdr-currency-input\\r\\n                        [readonly]=\\\"!manuallySetRefundTotal\\\"\\r\\n                        [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                        [(ngModel)]=\\\"refundTotal\\\"\\r\\n                        (ngModelChange)=\\\"updateRefundTotal()\\\"\\r\\n                    ></vdr-currency-input>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n        </div>\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-payment-for-refund-selector\\r\\n                [refundablePayments]=\\\"refundablePayments\\\"\\r\\n                (paymentSelected)=\\\"onPaymentSelected($event.payment, $event.selected)\\\"\\r\\n                [order]=\\\"order\\\"\\r\\n            ></vdr-payment-for-refund-selector>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <div>\\r\\n        <div class=\\\"errors\\\">\\r\\n            <clr-alert\\r\\n                *ngIf=\\\"refundTotal < 0 || totalRefundableAmount < refundTotal\\\"\\r\\n                [clrAlertType]=\\\"'danger'\\\"\\r\\n                [clrAlertClosable]=\\\"false\\\"\\r\\n            >\\r\\n                <clr-alert-item>\\r\\n                    {{\\r\\n                        'order.refund-total-error'\\r\\n                            | translate\\r\\n                                : {\\r\\n                                      min: 0 | currency : order.currencyCode,\\r\\n                                      max: totalRefundableAmount | localeCurrency : order.currencyCode\\r\\n                                  }\\r\\n                    }}\\r\\n                </clr-alert-item>\\r\\n            </clr-alert>\\r\\n            <clr-alert\\r\\n                *ngIf=\\\"amountToRefundTotal < refundTotal || refundTotal < amountToRefundTotal\\\"\\r\\n                [clrAlertType]=\\\"'danger'\\\"\\r\\n                [clrAlertClosable]=\\\"false\\\"\\r\\n            >\\r\\n                <clr-alert-item>\\r\\n                    {{ 'order.refund-total-warning' | translate }}\\r\\n                </clr-alert-item>\\r\\n            </clr-alert>\\r\\n            <clr-alert\\r\\n                *ngIf=\\\"amountToRefundTotal && !reason\\\"\\r\\n                [clrAlertType]=\\\"'danger'\\\"\\r\\n                [clrAlertClosable]=\\\"false\\\"\\r\\n            >\\r\\n                <clr-alert-item>\\r\\n                    {{ 'order.refund-cancellation-reason-required' | translate }}\\r\\n                </clr-alert-item>\\r\\n            </clr-alert>\\r\\n        </div>\\r\\n        <div class=\\\"modal-buttons\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n            <button type=\\\"submit\\\" (click)=\\\"select()\\\" [disabled]=\\\"!canSubmit()\\\" class=\\\"btn btn-primary\\\">\\r\\n                {{\\r\\n                    'order.refund-with-amount'\\r\\n                        | translate : { amount: amountToRefundTotal | localeCurrency : order.currencyCode }\\r\\n                }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\", styles: [\":host{height:100%;display:flex;flex-direction:column;min-height:64vh}.refund-wrapper{flex:1;flex-direction:column}.refund-wrapper .order-table{flex:1;overflow-y:auto}.refund-wrapper .order-table table{margin-top:0}.refund-wrapper tr.ignore{color:var(--color-grey-300)}::ng-deep .refund-wrapper .table-wrapper{max-width:initial!important}.quantity-col{background-color:var(--color-warning-100)}.cancel-checkbox-wrapper{display:flex;align-items:center;justify-content:center}clr-checkbox-wrapper{margin-top:12px;margin-bottom:12px;display:block}.refund-details{display:flex;flex-direction:column;padding-bottom:var(--space-unit);gap:calc(var(--space-unit) * 2);justify-content:space-between}@media screen and (min-width: 992px){.refund-details{flex-direction:row}}.refund-details vdr-card.unselected{opacity:.8}.refund-details>*{flex:1}.errors{display:flex;justify-content:flex-end;gap:calc(var(--space-unit) * 2);margin:calc(var(--space-unit) * 2) 0}.prorated-wrapper{display:flex;justify-content:center}.line-promotion{display:flex;justify-content:space-between;font-size:12px;padding:3px 6px}.line-promotion .promotion-amount{margin-inline-start:12px}vdr-card.faded{opacity:.8}.modal-buttons{display:flex;justify-content:flex-end;gap:.6rem;gap:var(--clr-modal-footer-gap, .6rem)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.I18nService }] });\n\nclass SettleRefundDialogComponent {\n    constructor() {\n        this.transactionId = '';\n    }\n    submit() {\n        this.resolveWith(this.transactionId);\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SettleRefundDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: SettleRefundDialogComponent, selector: \"vdr-settle-refund-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'order.settle-refund' | translate }}</ng-template>\\r\\n<p class=\\\"instruction\\\">\\r\\n    {{ 'order.settle-refund-manual-instructions' | translate: { method: refund.method } }}\\r\\n</p>\\r\\n<clr-input-container>\\r\\n    <label>{{ 'order.transaction-id' | translate }}</label>\\r\\n    <input clrInput name=\\\"transactionId\\\" [(ngModel)]=\\\"transactionId\\\" />\\r\\n</clr-input-container>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!transactionId\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'order.settle-refund' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\":host{padding-bottom:32px}.instruction{margin-top:0;margin-bottom:24px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"component\", type: i3.ClrInputContainer, selector: \"clr-input-container\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SettleRefundDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-settle-refund-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'order.settle-refund' | translate }}</ng-template>\\r\\n<p class=\\\"instruction\\\">\\r\\n    {{ 'order.settle-refund-manual-instructions' | translate: { method: refund.method } }}\\r\\n</p>\\r\\n<clr-input-container>\\r\\n    <label>{{ 'order.transaction-id' | translate }}</label>\\r\\n    <input clrInput name=\\\"transactionId\\\" [(ngModel)]=\\\"transactionId\\\" />\\r\\n</clr-input-container>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!transactionId\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'order.settle-refund' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\":host{padding-bottom:32px}.instruction{margin-top:0;margin-bottom:24px}\\n\"] }]\n        }] });\n\nclass PaymentStateLabelComponent {\n    get chipColorType() {\n        switch (this.state) {\n            case 'Authorized':\n                return 'warning';\n            case 'Settled':\n                return 'success';\n            case 'Declined':\n            case 'Cancelled':\n                return 'error';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PaymentStateLabelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: PaymentStateLabelComponent, selector: \"vdr-payment-state-label\", inputs: { state: \"state\" }, ngImport: i0, template: \"<vdr-chip [title]=\\\"'order.payment-state' | translate\\\" [colorType]=\\\"chipColorType\\\">\\r\\n    <clr-icon shape=\\\"check-circle\\\" *ngIf=\\\"state === 'Settled'\\\"></clr-icon>\\r\\n    {{ state | stateI18nToken | translate }}\\r\\n</vdr-chip>\\r\\n\", styles: [\":host{display:flex;font-size:14px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.StateI18nTokenPipe, name: \"stateI18nToken\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PaymentStateLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-payment-state-label', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-chip [title]=\\\"'order.payment-state' | translate\\\" [colorType]=\\\"chipColorType\\\">\\r\\n    <clr-icon shape=\\\"check-circle\\\" *ngIf=\\\"state === 'Settled'\\\"></clr-icon>\\r\\n    {{ state | stateI18nToken | translate }}\\r\\n</vdr-chip>\\r\\n\", styles: [\":host{display:flex;font-size:14px}\\n\"] }]\n        }], propDecorators: { state: [{\n                type: Input\n            }] } });\n\nclass RefundStateLabelComponent {\n    get chipColorType() {\n        switch (this.state) {\n            case 'Pending':\n                return 'warning';\n            case 'Settled':\n                return 'success';\n            case 'Failed':\n                return 'error';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: RefundStateLabelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: RefundStateLabelComponent, selector: \"vdr-refund-state-label\", inputs: { state: \"state\" }, ngImport: i0, template: \"<vdr-chip [title]=\\\"'order.payment-state' | translate\\\" [colorType]=\\\"chipColorType\\\">\\r\\n    <clr-icon shape=\\\"check-circle\\\" *ngIf=\\\"state === 'Settled'\\\"></clr-icon>\\r\\n    {{ state | stateI18nToken | translate }}\\r\\n</vdr-chip>\\r\\n\", styles: [\":host{display:flex;font-size:14px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.StateI18nTokenPipe, name: \"stateI18nToken\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: RefundStateLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-refund-state-label', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-chip [title]=\\\"'order.payment-state' | translate\\\" [colorType]=\\\"chipColorType\\\">\\r\\n    <clr-icon shape=\\\"check-circle\\\" *ngIf=\\\"state === 'Settled'\\\"></clr-icon>\\r\\n    {{ state | stateI18nToken | translate }}\\r\\n</vdr-chip>\\r\\n\", styles: [\":host{display:flex;font-size:14px}\\n\"] }]\n        }], propDecorators: { state: [{\n                type: Input\n            }] } });\n\nclass PaymentDetailComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PaymentDetailComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: PaymentDetailComponent, selector: \"vdr-payment-detail\", inputs: { payment: \"payment\", currencyCode: \"currencyCode\" }, ngImport: i0, template: \"<vdr-labeled-data [label]=\\\"'order.payment-method' | translate\\\">\\r\\n    {{ payment.method }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data [label]=\\\"'order.amount' | translate\\\">\\r\\n    {{ payment.amount | localeCurrency: currencyCode }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"payment.errorMessage\\\" [label]=\\\"'order.error-message' | translate\\\">\\r\\n    {{ payment.errorMessage }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"payment.transactionId\\\" [label]=\\\"'order.transaction-id' | translate\\\">\\r\\n    {{ payment.transactionId }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data [label]=\\\"'order.payment-metadata' | translate\\\">\\r\\n    <vdr-object-tree [value]=\\\"payment.metadata\\\"></vdr-object-tree>\\r\\n</vdr-labeled-data>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PaymentDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-payment-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-labeled-data [label]=\\\"'order.payment-method' | translate\\\">\\r\\n    {{ payment.method }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data [label]=\\\"'order.amount' | translate\\\">\\r\\n    {{ payment.amount | localeCurrency: currencyCode }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"payment.errorMessage\\\" [label]=\\\"'order.error-message' | translate\\\">\\r\\n    {{ payment.errorMessage }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"payment.transactionId\\\" [label]=\\\"'order.transaction-id' | translate\\\">\\r\\n    {{ payment.transactionId }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data [label]=\\\"'order.payment-metadata' | translate\\\">\\r\\n    <vdr-object-tree [value]=\\\"payment.metadata\\\"></vdr-object-tree>\\r\\n</vdr-labeled-data>\\r\\n\" }]\n        }], propDecorators: { payment: [{\n                type: Input\n            }], currencyCode: [{\n                type: Input\n            }] } });\n\nclass OrderPaymentCardComponent {\n    constructor() {\n        this.settlePayment = new EventEmitter();\n        this.transitionPaymentState = new EventEmitter();\n        this.settleRefund = new EventEmitter();\n    }\n    refundHasMetadata(refund) {\n        return !!refund && Object.keys(refund.metadata).length > 0;\n    }\n    nextOtherStates() {\n        if (!this.payment) {\n            return [];\n        }\n        return this.payment.nextStates.filter(s => s !== 'Settled' && s !== 'Error');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderPaymentCardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderPaymentCardComponent, selector: \"vdr-order-payment-card\", inputs: { payment: \"payment\", currencyCode: \"currencyCode\" }, outputs: { settlePayment: \"settlePayment\", transitionPaymentState: \"transitionPaymentState\", settleRefund: \"settleRefund\" }, ngImport: i0, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header payment-header\\\">\\r\\n        <div>\\r\\n            {{ 'order.payment' | translate }}\\r\\n            <ng-container *ngIf=\\\"payment.amount\\\">{{ payment.amount | localeCurrency : currencyCode }}</ng-container>\\r\\n        </div>\\r\\n        <div class=\\\"payment-state\\\">\\r\\n            <vdr-payment-state-label [state]=\\\"payment.state\\\"></vdr-payment-state-label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <vdr-payment-detail [payment]=\\\"payment\\\" [currencyCode]=\\\"currencyCode\\\"></vdr-payment-detail>\\r\\n    </div>\\r\\n    <ng-container *ngFor=\\\"let refund of payment.refunds\\\">\\r\\n        <div class=\\\"refund-wrapper card-block\\\">\\r\\n            <div class=\\\"card-header payment-header refund-header\\\">\\r\\n                <clr-icon shape=\\\"redo\\\" class=\\\"refund-icon\\\" dir=\\\"down\\\"></clr-icon>\\r\\n                {{ 'order.refund' | translate }} #{{ refund.id }}\\r\\n                <div class=\\\"clr-flex-fill\\\"></div>\\r\\n                <vdr-refund-state-label [state]=\\\"refund.state\\\"></vdr-refund-state-label>\\r\\n            </div>\\r\\n            <div class=\\\"card-block\\\">\\r\\n                <vdr-labeled-data [label]=\\\"'common.created-at' | translate\\\">\\r\\n                    {{ refund.createdAt | localeDate : 'medium' }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'order.refund-total' | translate\\\">\\r\\n                    {{ refund.total | localeCurrency : currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'order.transaction-id' | translate\\\" *ngIf=\\\"refund.transactionId\\\">\\r\\n                    {{ refund.transactionId }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'order.refund-reason' | translate\\\" *ngIf=\\\"refund.reason\\\">\\r\\n                    {{ refund.reason }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'order.refund-metadata' | translate\\\"\\r\\n                    *ngIf=\\\"refundHasMetadata(refund)\\\"\\r\\n                >\\r\\n                    <vdr-object-tree [value]=\\\"refund.metadata\\\"></vdr-object-tree>\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\" *ngIf=\\\"refund.state === 'Pending'\\\">\\r\\n                <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"settleRefund.emit(refund)\\\">\\r\\n                    {{ 'order.settle-refund' | translate }}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <div class=\\\"card-footer\\\" *ngIf=\\\"payment.nextStates.length\\\">\\r\\n        <button\\r\\n            class=\\\"btn btn-sm btn-primary\\\"\\r\\n            *ngIf=\\\"payment.nextStates.includes('Settled')\\\"\\r\\n            (click)=\\\"settlePayment.emit(payment)\\\"\\r\\n        >\\r\\n            {{ 'order.settle-payment' | translate }}\\r\\n        </button>\\r\\n        <vdr-dropdown>\\r\\n            <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n            </button>\\r\\n            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                <ng-container *ngFor=\\\"let nextState of nextOtherStates()\\\">\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"transitionPaymentState.emit({ payment: payment, state: nextState })\\\"\\r\\n                    >\\r\\n                        <ng-container *ngIf=\\\"nextState !== 'Cancelled'; else cancel\\\">\\r\\n                            <clr-icon shape=\\\"step-forward-2\\\"></clr-icon>\\r\\n                            {{\\r\\n                                'order.transition-to-state'\\r\\n                                    | translate : { state: (nextState | stateI18nToken | translate) }\\r\\n                            }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #cancel>\\r\\n                            <clr-icon shape=\\\"error-standard\\\" class=\\\"is-error\\\"></clr-icon>\\r\\n                            {{ 'order.cancel-payment' | translate }}\\r\\n                        </ng-template>\\r\\n                    </button>\\r\\n                </ng-container>\\r\\n            </vdr-dropdown-menu>\\r\\n        </vdr-dropdown>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.payment-header{display:flex;justify-content:space-between;align-items:center;line-break:anywhere}.refund-icon{margin-inline-end:6px;color:var(--color-grey-400)}.card-footer{display:flex;align-items:center;justify-content:flex-end}.refund-wrapper{font-size:var(--font-size-xs)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.Dir, selector: \"[dir]\", inputs: [\"dir\"], outputs: [\"dirChange\"], exportAs: [\"dir\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"component\", type: PaymentStateLabelComponent, selector: \"vdr-payment-state-label\", inputs: [\"state\"] }, { kind: \"component\", type: RefundStateLabelComponent, selector: \"vdr-refund-state-label\", inputs: [\"state\"] }, { kind: \"component\", type: PaymentDetailComponent, selector: \"vdr-payment-detail\", inputs: [\"payment\", \"currencyCode\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.StateI18nTokenPipe, name: \"stateI18nToken\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderPaymentCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-payment-card', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header payment-header\\\">\\r\\n        <div>\\r\\n            {{ 'order.payment' | translate }}\\r\\n            <ng-container *ngIf=\\\"payment.amount\\\">{{ payment.amount | localeCurrency : currencyCode }}</ng-container>\\r\\n        </div>\\r\\n        <div class=\\\"payment-state\\\">\\r\\n            <vdr-payment-state-label [state]=\\\"payment.state\\\"></vdr-payment-state-label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <vdr-payment-detail [payment]=\\\"payment\\\" [currencyCode]=\\\"currencyCode\\\"></vdr-payment-detail>\\r\\n    </div>\\r\\n    <ng-container *ngFor=\\\"let refund of payment.refunds\\\">\\r\\n        <div class=\\\"refund-wrapper card-block\\\">\\r\\n            <div class=\\\"card-header payment-header refund-header\\\">\\r\\n                <clr-icon shape=\\\"redo\\\" class=\\\"refund-icon\\\" dir=\\\"down\\\"></clr-icon>\\r\\n                {{ 'order.refund' | translate }} #{{ refund.id }}\\r\\n                <div class=\\\"clr-flex-fill\\\"></div>\\r\\n                <vdr-refund-state-label [state]=\\\"refund.state\\\"></vdr-refund-state-label>\\r\\n            </div>\\r\\n            <div class=\\\"card-block\\\">\\r\\n                <vdr-labeled-data [label]=\\\"'common.created-at' | translate\\\">\\r\\n                    {{ refund.createdAt | localeDate : 'medium' }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'order.refund-total' | translate\\\">\\r\\n                    {{ refund.total | localeCurrency : currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'order.transaction-id' | translate\\\" *ngIf=\\\"refund.transactionId\\\">\\r\\n                    {{ refund.transactionId }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'order.refund-reason' | translate\\\" *ngIf=\\\"refund.reason\\\">\\r\\n                    {{ refund.reason }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'order.refund-metadata' | translate\\\"\\r\\n                    *ngIf=\\\"refundHasMetadata(refund)\\\"\\r\\n                >\\r\\n                    <vdr-object-tree [value]=\\\"refund.metadata\\\"></vdr-object-tree>\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\" *ngIf=\\\"refund.state === 'Pending'\\\">\\r\\n                <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"settleRefund.emit(refund)\\\">\\r\\n                    {{ 'order.settle-refund' | translate }}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <div class=\\\"card-footer\\\" *ngIf=\\\"payment.nextStates.length\\\">\\r\\n        <button\\r\\n            class=\\\"btn btn-sm btn-primary\\\"\\r\\n            *ngIf=\\\"payment.nextStates.includes('Settled')\\\"\\r\\n            (click)=\\\"settlePayment.emit(payment)\\\"\\r\\n        >\\r\\n            {{ 'order.settle-payment' | translate }}\\r\\n        </button>\\r\\n        <vdr-dropdown>\\r\\n            <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n            </button>\\r\\n            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                <ng-container *ngFor=\\\"let nextState of nextOtherStates()\\\">\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"transitionPaymentState.emit({ payment: payment, state: nextState })\\\"\\r\\n                    >\\r\\n                        <ng-container *ngIf=\\\"nextState !== 'Cancelled'; else cancel\\\">\\r\\n                            <clr-icon shape=\\\"step-forward-2\\\"></clr-icon>\\r\\n                            {{\\r\\n                                'order.transition-to-state'\\r\\n                                    | translate : { state: (nextState | stateI18nToken | translate) }\\r\\n                            }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #cancel>\\r\\n                            <clr-icon shape=\\\"error-standard\\\" class=\\\"is-error\\\"></clr-icon>\\r\\n                            {{ 'order.cancel-payment' | translate }}\\r\\n                        </ng-template>\\r\\n                    </button>\\r\\n                </ng-container>\\r\\n            </vdr-dropdown-menu>\\r\\n        </vdr-dropdown>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.payment-header{display:flex;justify-content:space-between;align-items:center;line-break:anywhere}.refund-icon{margin-inline-end:6px;color:var(--color-grey-400)}.card-footer{display:flex;align-items:center;justify-content:flex-end}.refund-wrapper{font-size:var(--font-size-xs)}\\n\"] }]\n        }], propDecorators: { payment: [{\n                type: Input\n            }], currencyCode: [{\n                type: Input\n            }], settlePayment: [{\n                type: Output\n            }], transitionPaymentState: [{\n                type: Output\n            }], settleRefund: [{\n                type: Output\n            }] } });\n\nclass OrderHistoryEntryHostComponent {\n    constructor(historyEntryComponentService) {\n        this.historyEntryComponentService = historyEntryComponentService;\n        this.expandClick = new EventEmitter();\n    }\n    ngOnInit() {\n        const componentType = this.historyEntryComponentService.getComponent(this.entry.type);\n        const componentRef = this.portalRef.createComponent(componentType);\n        componentRef.instance.entry = this.entry;\n        componentRef.instance.order = this.order;\n        this.instance = componentRef.instance;\n        this.componentRef = componentRef;\n    }\n    ngOnDestroy() {\n        this.componentRef?.destroy();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderHistoryEntryHostComponent, deps: [{ token: i1.HistoryEntryComponentService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderHistoryEntryHostComponent, selector: \"vdr-order-history-entry-host\", inputs: { entry: \"entry\", order: \"order\", expanded: \"expanded\" }, outputs: { expandClick: \"expandClick\" }, viewQueries: [{ propertyName: \"portalRef\", first: true, predicate: [\"portal\"], descendants: true, read: ViewContainerRef, static: true }], exportAs: [\"historyEntry\"], ngImport: i0, template: `<vdr-timeline-entry\r\n        [displayType]=\"instance.getDisplayType(entry)\"\r\n        [iconShape]=\"instance.getIconShape && instance.getIconShape(entry)\"\r\n        [createdAt]=\"entry.createdAt\"\r\n        [name]=\"instance.getName && instance.getName(entry)\"\r\n        [featured]=\"instance.isFeatured(entry)\"\r\n        [collapsed]=\"!expanded && !instance.isFeatured(entry)\"\r\n        (expandClick)=\"expandClick.emit()\"\r\n    >\r\n        <div #portal></div>\r\n    </vdr-timeline-entry>`, isInline: true, dependencies: [{ kind: \"component\", type: i1.TimelineEntryComponent, selector: \"vdr-timeline-entry\", inputs: [\"displayType\", \"createdAt\", \"name\", \"featured\", \"iconShape\", \"isFirst\", \"isLast\", \"collapsed\"], outputs: [\"expandClick\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderHistoryEntryHostComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vdr-order-history-entry-host',\n                    template: `<vdr-timeline-entry\r\n        [displayType]=\"instance.getDisplayType(entry)\"\r\n        [iconShape]=\"instance.getIconShape && instance.getIconShape(entry)\"\r\n        [createdAt]=\"entry.createdAt\"\r\n        [name]=\"instance.getName && instance.getName(entry)\"\r\n        [featured]=\"instance.isFeatured(entry)\"\r\n        [collapsed]=\"!expanded && !instance.isFeatured(entry)\"\r\n        (expandClick)=\"expandClick.emit()\"\r\n    >\r\n        <div #portal></div>\r\n    </vdr-timeline-entry>`,\n                    exportAs: 'historyEntry',\n                }]\n        }], ctorParameters: () => [{ type: i1.HistoryEntryComponentService }], propDecorators: { entry: [{\n                type: Input\n            }], order: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], expandClick: [{\n                type: Output\n            }], portalRef: [{\n                type: ViewChild,\n                args: ['portal', { static: true, read: ViewContainerRef }]\n            }] } });\n\nclass OrderHistoryComponent {\n    constructor(historyEntryComponentService) {\n        this.historyEntryComponentService = historyEntryComponentService;\n        this.addNote = new EventEmitter();\n        this.updateNote = new EventEmitter();\n        this.deleteNote = new EventEmitter();\n        this.note = '';\n        this.noteIsPrivate = true;\n        this.expanded = false;\n        this.type = HistoryEntryType;\n    }\n    hasCustomComponent(type) {\n        return !!this.historyEntryComponentService.getComponent(type);\n    }\n    getDisplayType(entry) {\n        if (entry.type === HistoryEntryType.ORDER_STATE_TRANSITION) {\n            if (entry.data.to === 'Delivered') {\n                return 'success';\n            }\n            if (entry.data.to === 'Cancelled') {\n                return 'error';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) {\n            if (entry.data.to === 'Delivered') {\n                return 'success';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION) {\n            if (entry.data.to === 'Declined' || entry.data.to === 'Cancelled') {\n                return 'error';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_CANCELLATION) {\n            return 'warning';\n        }\n        if (entry.type === HistoryEntryType.ORDER_REFUND_TRANSITION) {\n            return 'warning';\n        }\n        return 'default';\n    }\n    getTimelineIcon(entry) {\n        if (entry.type === HistoryEntryType.ORDER_STATE_TRANSITION) {\n            if (entry.data.to === 'Delivered') {\n                return ['success-standard', 'is-solid'];\n            }\n            if (entry.data.to === 'Cancelled') {\n                return 'ban';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION) {\n            if (entry.data.to === 'Settled') {\n                return 'credit-card';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_REFUND_TRANSITION) {\n            if (entry.data.to === 'Settled') {\n                return 'credit-card';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_NOTE) {\n            return 'note';\n        }\n        if (entry.type === HistoryEntryType.ORDER_MODIFIED) {\n            return 'pencil';\n        }\n        if (entry.type === HistoryEntryType.ORDER_CUSTOMER_UPDATED) {\n            return 'switch';\n        }\n        if (entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) {\n            if (entry.data.to === 'Shipped') {\n                return 'truck';\n            }\n            if (entry.data.to === 'Delivered') {\n                return 'truck';\n            }\n        }\n    }\n    isFeatured(entry) {\n        switch (entry.type) {\n            case HistoryEntryType.ORDER_STATE_TRANSITION: {\n                return (entry.data.to === 'Delivered' ||\n                    entry.data.to === 'Cancelled' ||\n                    entry.data.to === 'Settled');\n            }\n            case HistoryEntryType.ORDER_REFUND_TRANSITION:\n                return entry.data.to === 'Settled';\n            case HistoryEntryType.ORDER_PAYMENT_TRANSITION:\n                return entry.data.to === 'Settled' || entry.data.to === 'Cancelled';\n            case HistoryEntryType.ORDER_FULFILLMENT_TRANSITION:\n                return entry.data.to === 'Delivered' || entry.data.to === 'Shipped';\n            case HistoryEntryType.ORDER_NOTE:\n            case HistoryEntryType.ORDER_MODIFIED:\n            case HistoryEntryType.ORDER_CUSTOMER_UPDATED:\n                return true;\n            default:\n                return false;\n        }\n    }\n    getFulfillment(entry) {\n        if ((entry.type === HistoryEntryType.ORDER_FULFILLMENT ||\n            entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) &&\n            this.order.fulfillments) {\n            return this.order.fulfillments.find(f => f.id === entry.data.fulfillmentId);\n        }\n    }\n    getPayment(entry) {\n        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION && this.order.payments) {\n            return this.order.payments.find(p => p.id === entry.data.paymentId);\n        }\n    }\n    getRefund(entry) {\n        if (entry.type === HistoryEntryType.ORDER_REFUND_TRANSITION && this.order.payments) {\n            const allRefunds = this.order.payments.reduce((refunds, payment) => refunds.concat(payment.refunds), []);\n            return allRefunds.find(r => r.id === entry.data.refundId);\n        }\n    }\n    getCancelledQuantity(entry) {\n        return entry.data.lines.reduce((total, line) => total + line.quantity, 0);\n    }\n    getCancelledItems(cancellationLines) {\n        const itemMap = new Map();\n        for (const line of this.order.lines) {\n            const cancellationLine = cancellationLines.find(l => l.orderLineId === line.id);\n            if (cancellationLine) {\n                const count = itemMap.get(line.productVariant.name);\n                itemMap.set(line.productVariant.name, cancellationLine.quantity);\n            }\n        }\n        return Array.from(itemMap.entries()).map(([name, quantity]) => ({ name, quantity }));\n    }\n    getModification(id) {\n        return this.order.modifications.find(m => m.id === id);\n    }\n    getName(entry) {\n        const { administrator } = entry;\n        if (administrator) {\n            return `${administrator.firstName} ${administrator.lastName}`;\n        }\n        else {\n            const customer = this.order.customer;\n            if (customer) {\n                return `${customer.firstName} ${customer.lastName}`;\n            }\n        }\n        return '';\n    }\n    addNoteToOrder() {\n        this.addNote.emit({ note: this.note, isPublic: !this.noteIsPrivate });\n        this.note = '';\n        this.noteIsPrivate = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderHistoryComponent, deps: [{ token: i1.HistoryEntryComponentService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderHistoryComponent, selector: \"vdr-order-history\", inputs: { order: \"order\", history: \"history\" }, outputs: { addNote: \"addNote\", updateNote: \"updateNote\", deleteNote: \"deleteNote\" }, ngImport: i0, template: \"<div class=\\\"entry-list\\\" [class.expanded]=\\\"expanded\\\">\\r\\n    <vdr-timeline-entry iconShape=\\\"note\\\" displayType=\\\"muted\\\" [featured]=\\\"true\\\" [isFirst]=\\\"true\\\">\\r\\n        <div class=\\\"note-entry\\\">\\r\\n            <textarea [(ngModel)]=\\\"note\\\" name=\\\"note\\\" class=\\\"note\\\"></textarea>\\r\\n            <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"!note\\\" (click)=\\\"addNoteToOrder()\\\">\\r\\n                {{ 'common.add-note' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"visibility-select\\\">\\r\\n            <clr-checkbox-wrapper>\\r\\n                <input type=\\\"checkbox\\\" clrCheckbox [(ngModel)]=\\\"noteIsPrivate\\\" />\\r\\n                <label>{{ 'order.note-is-private' | translate }}</label>\\r\\n            </clr-checkbox-wrapper>\\r\\n            <span *ngIf=\\\"noteIsPrivate\\\" class=\\\"private\\\">\\r\\n                {{ 'order.note-only-visible-to-administrators' | translate }}\\r\\n            </span>\\r\\n            <span *ngIf=\\\"!noteIsPrivate\\\" class=\\\"public\\\">\\r\\n                {{ 'order.note-visible-to-customer' | translate }}\\r\\n            </span>\\r\\n        </div>\\r\\n    </vdr-timeline-entry>\\r\\n    <ng-container *ngFor=\\\"let entry of history\\\">\\r\\n        <vdr-order-history-entry-host\\r\\n            *ngIf=\\\"hasCustomComponent(entry.type); else defaultComponents\\\"\\r\\n            [order]=\\\"order\\\"\\r\\n            [entry]=\\\"entry\\\"\\r\\n            [expanded]=\\\"expanded\\\"\\r\\n            (expandClick)=\\\"expanded = !expanded\\\"\\r\\n        ></vdr-order-history-entry-host>\\r\\n        <ng-template #defaultComponents>\\r\\n            <vdr-timeline-entry\\r\\n                [displayType]=\\\"getDisplayType(entry)\\\"\\r\\n                [iconShape]=\\\"getTimelineIcon(entry)\\\"\\r\\n                [createdAt]=\\\"entry.createdAt\\\"\\r\\n                [name]=\\\"getName(entry)\\\"\\r\\n                [featured]=\\\"isFeatured(entry)\\\"\\r\\n                [collapsed]=\\\"!expanded && !isFeatured(entry)\\\"\\r\\n                (expandClick)=\\\"expanded = !expanded\\\"\\r\\n            >\\r\\n                <ng-container [ngSwitch]=\\\"entry.type\\\">\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_STATE_TRANSITION\\\">\\r\\n                        <div class=\\\"title\\\" *ngIf=\\\"entry.data.to === 'Delivered'\\\">\\r\\n                            {{ 'order.history-order-fulfilled' | translate }}\\r\\n                        </div>\\r\\n                        <div class=\\\"title\\\" *ngIf=\\\"entry.data.to === 'Cancelled'\\\">\\r\\n                            {{ 'order.history-order-cancelled' | translate }}\\r\\n                        </div>\\r\\n                        <ng-template [ngIf]=\\\"entry.data.to !== 'Cancelled' && entry.data.to !== 'Delivered'\\\">\\r\\n                            {{\\r\\n                                'order.history-order-transition'\\r\\n                                    | translate : { from: entry.data.from, to: entry.data.to }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_MODIFIED\\\">\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ 'order.history-order-modified' | translate }}\\r\\n                        </div>\\r\\n                        <div\\r\\n                            class=\\\"flex items-center\\\"\\r\\n                            *ngIf=\\\"getModification(entry.data.modificationId) as modification\\\"\\r\\n                        >\\r\\n                            {{ 'order.modify-order-price-difference' | translate }}:\\r\\n                            <strong>{{\\r\\n                                modification.priceChange | localeCurrency : order.currencyCode\\r\\n                            }}</strong>\\r\\n                            <vdr-chip colorType=\\\"success\\\" class=\\\"mx-1\\\" *ngIf=\\\"modification.isSettled\\\">{{\\r\\n                                'order.modification-settled' | translate\\r\\n                            }}</vdr-chip>\\r\\n                            <vdr-chip colorType=\\\"error\\\" class=\\\"mx-1\\\" *ngIf=\\\"!modification.isSettled\\\">{{\\r\\n                                'order.modification-not-settled' | translate\\r\\n                            }}</vdr-chip>\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-modification-detail\\r\\n                                    [order]=\\\"order\\\"\\r\\n                                    [modification]=\\\"modification\\\"\\r\\n                                ></vdr-modification-detail>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_PAYMENT_TRANSITION\\\">\\r\\n                        <ng-container *ngIf=\\\"entry.data.to === 'Settled'; else regularPaymentTransition\\\">\\r\\n                            <div class=\\\"title\\\">\\r\\n                                {{ 'order.history-payment-settled' | translate }}\\r\\n                            </div>\\r\\n                            <div class=\\\"flex items-center\\\">\\r\\n                                <vdr-chip *ngIf=\\\"getPayment(entry) as payment\\\" class=\\\"mr-1\\\">{{\\r\\n                                    payment.amount | localeCurrency : order.currencyCode\\r\\n                                }}</vdr-chip>\\r\\n                                <vdr-history-entry-detail *ngIf=\\\"getPayment(entry) as payment\\\">\\r\\n                                    <vdr-payment-detail\\r\\n                                        [payment]=\\\"payment\\\"\\r\\n                                        [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                                    ></vdr-payment-detail>\\r\\n                                </vdr-history-entry-detail>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                        <ng-template #regularPaymentTransition>\\r\\n                            {{\\r\\n                                'order.history-payment-transition'\\r\\n                                    | translate\\r\\n                                        : {\\r\\n                                              from: entry.data.from,\\r\\n                                              to: entry.data.to,\\r\\n                                              id: getPayment(entry)?.transactionId\\r\\n                                          }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_REFUND_TRANSITION\\\">\\r\\n                        <ng-container *ngIf=\\\"entry.data.to === 'Settled'; else regularRefundTransition\\\">\\r\\n                            <ng-container *ngIf=\\\"getRefund(entry) as refund\\\">\\r\\n                                <div class=\\\"title\\\">{{ 'order.refund' | translate }} #{{ refund.id }}</div>\\r\\n                                <div class=\\\"flex items-center\\\">\\r\\n                                    <vdr-chip colorType=\\\"warning\\\" class=\\\"mr-1\\\">{{\\r\\n                                        refund.total | localeCurrency : order.currencyCode\\r\\n                                    }}</vdr-chip>\\r\\n                                    <vdr-history-entry-detail>\\r\\n                                        <vdr-labeled-data [label]=\\\"'order.cancellation-reason' | translate\\\">\\r\\n                                            {{ entry.data.reason }}\\r\\n                                        </vdr-labeled-data>\\r\\n                                        <vdr-labeled-data [label]=\\\"'order.contents' | translate\\\">\\r\\n                                            <vdr-simple-item-list\\r\\n                                                [items]=\\\"getCancelledItems(refund.lines)\\\"\\r\\n                                            ></vdr-simple-item-list>\\r\\n                                        </vdr-labeled-data>\\r\\n                                    </vdr-history-entry-detail>\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                        </ng-container>\\r\\n                        <ng-template #regularRefundTransition>\\r\\n                            {{\\r\\n                                'order.history-refund-transition'\\r\\n                                    | translate\\r\\n                                        : {\\r\\n                                              from: entry.data.from,\\r\\n                                              to: entry.data.to,\\r\\n                                              id: entry.data.refundId\\r\\n                                          }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_CANCELLATION\\\">\\r\\n                        {{\\r\\n                            'order.history-items-cancelled'\\r\\n                                | translate : { count: getCancelledQuantity(entry) }\\r\\n                        }}\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"getCancelledItems(entry.data.lines) as items\\\">\\r\\n                            <vdr-labeled-data [label]=\\\"'order.cancellation-reason' | translate\\\">\\r\\n                                {{ entry.data.reason }}\\r\\n                            </vdr-labeled-data>\\r\\n                            <vdr-labeled-data [label]=\\\"'order.contents' | translate\\\">\\r\\n                                <vdr-simple-item-list [items]=\\\"items\\\"></vdr-simple-item-list>\\r\\n                            </vdr-labeled-data>\\r\\n                            <vdr-labeled-data [label]=\\\"'order.shipping-cancelled' | translate\\\">\\r\\n                                {{ entry.data.shippingCancelled }}\\r\\n                            </vdr-labeled-data>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_FULFILLMENT\\\">\\r\\n                        {{ 'order.history-fulfillment-created' | translate }}\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"getFulfillment(entry) as fulfillment\\\">\\r\\n                            <vdr-fulfillment-detail\\r\\n                                [fulfillmentId]=\\\"fulfillment.id\\\"\\r\\n                                [order]=\\\"order\\\"\\r\\n                            ></vdr-fulfillment-detail>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_FULFILLMENT_TRANSITION\\\">\\r\\n                        <ng-container *ngIf=\\\"entry.data.to === 'Delivered'\\\">\\r\\n                            <div class=\\\"title\\\">\\r\\n                                {{ 'order.history-fulfillment-delivered' | translate }}\\r\\n                            </div>\\r\\n                            {{ 'order.tracking-code' | translate }}: {{ getFulfillment(entry)?.trackingCode }}\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"entry.data.to === 'Shipped'\\\">\\r\\n                            <div class=\\\"title\\\">\\r\\n                                {{ 'order.history-fulfillment-shipped' | translate }}\\r\\n                            </div>\\r\\n                            {{ 'order.tracking-code' | translate }}: {{ getFulfillment(entry)?.trackingCode }}\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"entry.data.to !== 'Delivered' && entry.data.to !== 'Shipped'\\\">\\r\\n                            {{\\r\\n                                'order.history-fulfillment-transition'\\r\\n                                    | translate : { from: entry.data.from, to: entry.data.to }\\r\\n                            }}\\r\\n                        </ng-container>\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"getFulfillment(entry) as fulfillment\\\">\\r\\n                            <vdr-fulfillment-detail\\r\\n                                [fulfillmentId]=\\\"fulfillment.id\\\"\\r\\n                                [order]=\\\"order\\\"\\r\\n                            ></vdr-fulfillment-detail>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_NOTE\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"note-text\\\">\\r\\n                                <span *ngIf=\\\"entry.isPublic\\\" class=\\\"note-visibility public\\\">{{\\r\\n                                    'common.public' | translate\\r\\n                                }}</span>\\r\\n                                <span *ngIf=\\\"!entry.isPublic\\\" class=\\\"note-visibility private\\\">{{\\r\\n                                    'common.private' | translate\\r\\n                                }}</span>\\r\\n                                {{ entry.data.note }}\\r\\n                            </div>\\r\\n                            <div class=\\\"flex-spacer\\\"></div>\\r\\n                            <vdr-dropdown>\\r\\n                                <button class=\\\"button-small ml-1\\\" vdrDropdownTrigger>\\r\\n                                    <clr-icon shape=\\\"ellipsis-vertical\\\" size=\\\"12\\\"></clr-icon>\\r\\n                                </button>\\r\\n                                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                    <button\\r\\n                                        vdrDropdownItem\\r\\n                                        (click)=\\\"updateNote.emit(entry)\\\"\\r\\n                                        [disabled]=\\\"!('UpdateOrder' | hasPermission)\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                                        {{ 'common.edit' | translate }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                                    <button\\r\\n                                        vdrDropdownItem\\r\\n                                        (click)=\\\"deleteNote.emit(entry)\\\"\\r\\n                                        [disabled]=\\\"!('UpdateOrder' | hasPermission)\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                        {{ 'common.delete' | translate }}\\r\\n                                    </button>\\r\\n                                </vdr-dropdown-menu>\\r\\n                            </vdr-dropdown>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_COUPON_APPLIED\\\">\\r\\n                        {{ 'order.history-coupon-code-applied' | translate }}:\\r\\n                        <vdr-chip>\\r\\n                            <a [routerLink]=\\\"['/marketing', 'promotions', entry.data.promotionId]\\\">{{\\r\\n                                entry.data.couponCode\\r\\n                            }}</a>\\r\\n                        </vdr-chip>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_COUPON_REMOVED\\\">\\r\\n                        {{ 'order.history-coupon-code-removed' | translate }}:\\r\\n                        <vdr-chip\\r\\n                            ><span class=\\\"cancelled-coupon-code\\\">{{ entry.data.couponCode }}</span></vdr-chip\\r\\n                        >\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_CUSTOMER_UPDATED\\\">\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{\\r\\n                                'order.history-customer-updated'\\r\\n                                    | translate : { newCustomerName: entry.data.newCustomerName }\\r\\n                            }}\\r\\n                        </div>\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"note-text\\\">\\r\\n                                {{ entry.data.note }}\\r\\n                            </div>\\r\\n                            <div class=\\\"flex-spacer\\\"></div>\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-labeled-data [label]=\\\"'order.previous-customer' | translate\\\">\\r\\n                                    <a\\r\\n                                        *ngIf=\\\"entry.data.previousCustomerId\\\"\\r\\n                                        class=\\\"button-ghost\\\"\\r\\n                                        [routerLink]=\\\"[\\r\\n                                            '/customer',\\r\\n                                            'customers',\\r\\n                                            entry.data.previousCustomerId\\r\\n                                        ]\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"user\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n                                        <span>{{ entry.data.previousCustomerName }}</span>\\r\\n                                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                                    </a>\\r\\n                                </vdr-labeled-data>\\r\\n                                <vdr-labeled-data [label]=\\\"'order.new-customer' | translate\\\">\\r\\n                                    <a\\r\\n                                        *ngIf=\\\"entry.data.newCustomerId\\\"\\r\\n                                        class=\\\"button-ghost\\\"\\r\\n                                        [routerLink]=\\\"['/customer', 'customers', entry.data.newCustomerId]\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"user\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n                                        <span>{{ entry.data.newCustomerName }}</span>\\r\\n                                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                                    </a>\\r\\n                                </vdr-labeled-data>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchDefault>\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ entry.type | translate }}\\r\\n                        </div>\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"entry.data\\\">\\r\\n                            <vdr-object-tree [value]=\\\"entry.data\\\"></vdr-object-tree>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                </ng-container>\\r\\n            </vdr-timeline-entry>\\r\\n        </ng-template>\\r\\n    </ng-container>\\r\\n\\r\\n    <vdr-timeline-entry [isLast]=\\\"true\\\" [createdAt]=\\\"order.createdAt\\\" [featured]=\\\"true\\\">\\r\\n        <div class=\\\"title\\\">\\r\\n            {{ 'order.history-order-created' | translate }}\\r\\n        </div>\\r\\n    </vdr-timeline-entry>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.entry-list{margin-inline-start:calc(var(--space-unit) * 2)}.note-entry{display:flex;align-items:center}.note-entry .note{flex:1}.note-entry button{margin:0}.visibility-select{display:flex;justify-content:space-between;align-items:baseline}.visibility-select .public{color:var(--color-warning-700)}.visibility-select .private{color:var(--color-success-700)}textarea.note{flex:1;height:36px;border-radius:3px;margin-inline-end:6px}.note-text{color:var(--color-grey-800);white-space:pre-wrap;max-width:580px}.cancelled-coupon-code{text-decoration:line-through}.note-visibility{text-transform:lowercase}.note-visibility.public{color:var(--color-warning-700)}.note-visibility.private{color:var(--color-success-700)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i2$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i2$1.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"component\", type: i1.TimelineEntryComponent, selector: \"vdr-timeline-entry\", inputs: [\"displayType\", \"createdAt\", \"name\", \"featured\", \"iconShape\", \"isFirst\", \"isLast\", \"collapsed\"], outputs: [\"expandClick\"] }, { kind: \"component\", type: i1.HistoryEntryDetailComponent, selector: \"vdr-history-entry-detail\" }, { kind: \"component\", type: FulfillmentDetailComponent, selector: \"vdr-fulfillment-detail\", inputs: [\"fulfillmentId\", \"order\"] }, { kind: \"component\", type: PaymentDetailComponent, selector: \"vdr-payment-detail\", inputs: [\"payment\", \"currencyCode\"] }, { kind: \"component\", type: SimpleItemListComponent, selector: \"vdr-simple-item-list\", inputs: [\"items\"] }, { kind: \"component\", type: ModificationDetailComponent, selector: \"vdr-modification-detail\", inputs: [\"order\", \"modification\"] }, { kind: \"component\", type: OrderHistoryEntryHostComponent, selector: \"vdr-order-history-entry-host\", inputs: [\"entry\", \"order\", \"expanded\"], outputs: [\"expandClick\"], exportAs: [\"historyEntry\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderHistoryComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-history', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"entry-list\\\" [class.expanded]=\\\"expanded\\\">\\r\\n    <vdr-timeline-entry iconShape=\\\"note\\\" displayType=\\\"muted\\\" [featured]=\\\"true\\\" [isFirst]=\\\"true\\\">\\r\\n        <div class=\\\"note-entry\\\">\\r\\n            <textarea [(ngModel)]=\\\"note\\\" name=\\\"note\\\" class=\\\"note\\\"></textarea>\\r\\n            <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"!note\\\" (click)=\\\"addNoteToOrder()\\\">\\r\\n                {{ 'common.add-note' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"visibility-select\\\">\\r\\n            <clr-checkbox-wrapper>\\r\\n                <input type=\\\"checkbox\\\" clrCheckbox [(ngModel)]=\\\"noteIsPrivate\\\" />\\r\\n                <label>{{ 'order.note-is-private' | translate }}</label>\\r\\n            </clr-checkbox-wrapper>\\r\\n            <span *ngIf=\\\"noteIsPrivate\\\" class=\\\"private\\\">\\r\\n                {{ 'order.note-only-visible-to-administrators' | translate }}\\r\\n            </span>\\r\\n            <span *ngIf=\\\"!noteIsPrivate\\\" class=\\\"public\\\">\\r\\n                {{ 'order.note-visible-to-customer' | translate }}\\r\\n            </span>\\r\\n        </div>\\r\\n    </vdr-timeline-entry>\\r\\n    <ng-container *ngFor=\\\"let entry of history\\\">\\r\\n        <vdr-order-history-entry-host\\r\\n            *ngIf=\\\"hasCustomComponent(entry.type); else defaultComponents\\\"\\r\\n            [order]=\\\"order\\\"\\r\\n            [entry]=\\\"entry\\\"\\r\\n            [expanded]=\\\"expanded\\\"\\r\\n            (expandClick)=\\\"expanded = !expanded\\\"\\r\\n        ></vdr-order-history-entry-host>\\r\\n        <ng-template #defaultComponents>\\r\\n            <vdr-timeline-entry\\r\\n                [displayType]=\\\"getDisplayType(entry)\\\"\\r\\n                [iconShape]=\\\"getTimelineIcon(entry)\\\"\\r\\n                [createdAt]=\\\"entry.createdAt\\\"\\r\\n                [name]=\\\"getName(entry)\\\"\\r\\n                [featured]=\\\"isFeatured(entry)\\\"\\r\\n                [collapsed]=\\\"!expanded && !isFeatured(entry)\\\"\\r\\n                (expandClick)=\\\"expanded = !expanded\\\"\\r\\n            >\\r\\n                <ng-container [ngSwitch]=\\\"entry.type\\\">\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_STATE_TRANSITION\\\">\\r\\n                        <div class=\\\"title\\\" *ngIf=\\\"entry.data.to === 'Delivered'\\\">\\r\\n                            {{ 'order.history-order-fulfilled' | translate }}\\r\\n                        </div>\\r\\n                        <div class=\\\"title\\\" *ngIf=\\\"entry.data.to === 'Cancelled'\\\">\\r\\n                            {{ 'order.history-order-cancelled' | translate }}\\r\\n                        </div>\\r\\n                        <ng-template [ngIf]=\\\"entry.data.to !== 'Cancelled' && entry.data.to !== 'Delivered'\\\">\\r\\n                            {{\\r\\n                                'order.history-order-transition'\\r\\n                                    | translate : { from: entry.data.from, to: entry.data.to }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_MODIFIED\\\">\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ 'order.history-order-modified' | translate }}\\r\\n                        </div>\\r\\n                        <div\\r\\n                            class=\\\"flex items-center\\\"\\r\\n                            *ngIf=\\\"getModification(entry.data.modificationId) as modification\\\"\\r\\n                        >\\r\\n                            {{ 'order.modify-order-price-difference' | translate }}:\\r\\n                            <strong>{{\\r\\n                                modification.priceChange | localeCurrency : order.currencyCode\\r\\n                            }}</strong>\\r\\n                            <vdr-chip colorType=\\\"success\\\" class=\\\"mx-1\\\" *ngIf=\\\"modification.isSettled\\\">{{\\r\\n                                'order.modification-settled' | translate\\r\\n                            }}</vdr-chip>\\r\\n                            <vdr-chip colorType=\\\"error\\\" class=\\\"mx-1\\\" *ngIf=\\\"!modification.isSettled\\\">{{\\r\\n                                'order.modification-not-settled' | translate\\r\\n                            }}</vdr-chip>\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-modification-detail\\r\\n                                    [order]=\\\"order\\\"\\r\\n                                    [modification]=\\\"modification\\\"\\r\\n                                ></vdr-modification-detail>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_PAYMENT_TRANSITION\\\">\\r\\n                        <ng-container *ngIf=\\\"entry.data.to === 'Settled'; else regularPaymentTransition\\\">\\r\\n                            <div class=\\\"title\\\">\\r\\n                                {{ 'order.history-payment-settled' | translate }}\\r\\n                            </div>\\r\\n                            <div class=\\\"flex items-center\\\">\\r\\n                                <vdr-chip *ngIf=\\\"getPayment(entry) as payment\\\" class=\\\"mr-1\\\">{{\\r\\n                                    payment.amount | localeCurrency : order.currencyCode\\r\\n                                }}</vdr-chip>\\r\\n                                <vdr-history-entry-detail *ngIf=\\\"getPayment(entry) as payment\\\">\\r\\n                                    <vdr-payment-detail\\r\\n                                        [payment]=\\\"payment\\\"\\r\\n                                        [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                                    ></vdr-payment-detail>\\r\\n                                </vdr-history-entry-detail>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                        <ng-template #regularPaymentTransition>\\r\\n                            {{\\r\\n                                'order.history-payment-transition'\\r\\n                                    | translate\\r\\n                                        : {\\r\\n                                              from: entry.data.from,\\r\\n                                              to: entry.data.to,\\r\\n                                              id: getPayment(entry)?.transactionId\\r\\n                                          }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_REFUND_TRANSITION\\\">\\r\\n                        <ng-container *ngIf=\\\"entry.data.to === 'Settled'; else regularRefundTransition\\\">\\r\\n                            <ng-container *ngIf=\\\"getRefund(entry) as refund\\\">\\r\\n                                <div class=\\\"title\\\">{{ 'order.refund' | translate }} #{{ refund.id }}</div>\\r\\n                                <div class=\\\"flex items-center\\\">\\r\\n                                    <vdr-chip colorType=\\\"warning\\\" class=\\\"mr-1\\\">{{\\r\\n                                        refund.total | localeCurrency : order.currencyCode\\r\\n                                    }}</vdr-chip>\\r\\n                                    <vdr-history-entry-detail>\\r\\n                                        <vdr-labeled-data [label]=\\\"'order.cancellation-reason' | translate\\\">\\r\\n                                            {{ entry.data.reason }}\\r\\n                                        </vdr-labeled-data>\\r\\n                                        <vdr-labeled-data [label]=\\\"'order.contents' | translate\\\">\\r\\n                                            <vdr-simple-item-list\\r\\n                                                [items]=\\\"getCancelledItems(refund.lines)\\\"\\r\\n                                            ></vdr-simple-item-list>\\r\\n                                        </vdr-labeled-data>\\r\\n                                    </vdr-history-entry-detail>\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                        </ng-container>\\r\\n                        <ng-template #regularRefundTransition>\\r\\n                            {{\\r\\n                                'order.history-refund-transition'\\r\\n                                    | translate\\r\\n                                        : {\\r\\n                                              from: entry.data.from,\\r\\n                                              to: entry.data.to,\\r\\n                                              id: entry.data.refundId\\r\\n                                          }\\r\\n                            }}\\r\\n                        </ng-template>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_CANCELLATION\\\">\\r\\n                        {{\\r\\n                            'order.history-items-cancelled'\\r\\n                                | translate : { count: getCancelledQuantity(entry) }\\r\\n                        }}\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"getCancelledItems(entry.data.lines) as items\\\">\\r\\n                            <vdr-labeled-data [label]=\\\"'order.cancellation-reason' | translate\\\">\\r\\n                                {{ entry.data.reason }}\\r\\n                            </vdr-labeled-data>\\r\\n                            <vdr-labeled-data [label]=\\\"'order.contents' | translate\\\">\\r\\n                                <vdr-simple-item-list [items]=\\\"items\\\"></vdr-simple-item-list>\\r\\n                            </vdr-labeled-data>\\r\\n                            <vdr-labeled-data [label]=\\\"'order.shipping-cancelled' | translate\\\">\\r\\n                                {{ entry.data.shippingCancelled }}\\r\\n                            </vdr-labeled-data>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_FULFILLMENT\\\">\\r\\n                        {{ 'order.history-fulfillment-created' | translate }}\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"getFulfillment(entry) as fulfillment\\\">\\r\\n                            <vdr-fulfillment-detail\\r\\n                                [fulfillmentId]=\\\"fulfillment.id\\\"\\r\\n                                [order]=\\\"order\\\"\\r\\n                            ></vdr-fulfillment-detail>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_FULFILLMENT_TRANSITION\\\">\\r\\n                        <ng-container *ngIf=\\\"entry.data.to === 'Delivered'\\\">\\r\\n                            <div class=\\\"title\\\">\\r\\n                                {{ 'order.history-fulfillment-delivered' | translate }}\\r\\n                            </div>\\r\\n                            {{ 'order.tracking-code' | translate }}: {{ getFulfillment(entry)?.trackingCode }}\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"entry.data.to === 'Shipped'\\\">\\r\\n                            <div class=\\\"title\\\">\\r\\n                                {{ 'order.history-fulfillment-shipped' | translate }}\\r\\n                            </div>\\r\\n                            {{ 'order.tracking-code' | translate }}: {{ getFulfillment(entry)?.trackingCode }}\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"entry.data.to !== 'Delivered' && entry.data.to !== 'Shipped'\\\">\\r\\n                            {{\\r\\n                                'order.history-fulfillment-transition'\\r\\n                                    | translate : { from: entry.data.from, to: entry.data.to }\\r\\n                            }}\\r\\n                        </ng-container>\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"getFulfillment(entry) as fulfillment\\\">\\r\\n                            <vdr-fulfillment-detail\\r\\n                                [fulfillmentId]=\\\"fulfillment.id\\\"\\r\\n                                [order]=\\\"order\\\"\\r\\n                            ></vdr-fulfillment-detail>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_NOTE\\\">\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"note-text\\\">\\r\\n                                <span *ngIf=\\\"entry.isPublic\\\" class=\\\"note-visibility public\\\">{{\\r\\n                                    'common.public' | translate\\r\\n                                }}</span>\\r\\n                                <span *ngIf=\\\"!entry.isPublic\\\" class=\\\"note-visibility private\\\">{{\\r\\n                                    'common.private' | translate\\r\\n                                }}</span>\\r\\n                                {{ entry.data.note }}\\r\\n                            </div>\\r\\n                            <div class=\\\"flex-spacer\\\"></div>\\r\\n                            <vdr-dropdown>\\r\\n                                <button class=\\\"button-small ml-1\\\" vdrDropdownTrigger>\\r\\n                                    <clr-icon shape=\\\"ellipsis-vertical\\\" size=\\\"12\\\"></clr-icon>\\r\\n                                </button>\\r\\n                                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                    <button\\r\\n                                        vdrDropdownItem\\r\\n                                        (click)=\\\"updateNote.emit(entry)\\\"\\r\\n                                        [disabled]=\\\"!('UpdateOrder' | hasPermission)\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                                        {{ 'common.edit' | translate }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                                    <button\\r\\n                                        vdrDropdownItem\\r\\n                                        (click)=\\\"deleteNote.emit(entry)\\\"\\r\\n                                        [disabled]=\\\"!('UpdateOrder' | hasPermission)\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                        {{ 'common.delete' | translate }}\\r\\n                                    </button>\\r\\n                                </vdr-dropdown-menu>\\r\\n                            </vdr-dropdown>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_COUPON_APPLIED\\\">\\r\\n                        {{ 'order.history-coupon-code-applied' | translate }}:\\r\\n                        <vdr-chip>\\r\\n                            <a [routerLink]=\\\"['/marketing', 'promotions', entry.data.promotionId]\\\">{{\\r\\n                                entry.data.couponCode\\r\\n                            }}</a>\\r\\n                        </vdr-chip>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_COUPON_REMOVED\\\">\\r\\n                        {{ 'order.history-coupon-code-removed' | translate }}:\\r\\n                        <vdr-chip\\r\\n                            ><span class=\\\"cancelled-coupon-code\\\">{{ entry.data.couponCode }}</span></vdr-chip\\r\\n                        >\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchCase=\\\"type.ORDER_CUSTOMER_UPDATED\\\">\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{\\r\\n                                'order.history-customer-updated'\\r\\n                                    | translate : { newCustomerName: entry.data.newCustomerName }\\r\\n                            }}\\r\\n                        </div>\\r\\n                        <div class=\\\"flex\\\">\\r\\n                            <div class=\\\"note-text\\\">\\r\\n                                {{ entry.data.note }}\\r\\n                            </div>\\r\\n                            <div class=\\\"flex-spacer\\\"></div>\\r\\n                            <vdr-history-entry-detail>\\r\\n                                <vdr-labeled-data [label]=\\\"'order.previous-customer' | translate\\\">\\r\\n                                    <a\\r\\n                                        *ngIf=\\\"entry.data.previousCustomerId\\\"\\r\\n                                        class=\\\"button-ghost\\\"\\r\\n                                        [routerLink]=\\\"[\\r\\n                                            '/customer',\\r\\n                                            'customers',\\r\\n                                            entry.data.previousCustomerId\\r\\n                                        ]\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"user\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n                                        <span>{{ entry.data.previousCustomerName }}</span>\\r\\n                                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                                    </a>\\r\\n                                </vdr-labeled-data>\\r\\n                                <vdr-labeled-data [label]=\\\"'order.new-customer' | translate\\\">\\r\\n                                    <a\\r\\n                                        *ngIf=\\\"entry.data.newCustomerId\\\"\\r\\n                                        class=\\\"button-ghost\\\"\\r\\n                                        [routerLink]=\\\"['/customer', 'customers', entry.data.newCustomerId]\\\"\\r\\n                                    >\\r\\n                                        <clr-icon shape=\\\"user\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n                                        <span>{{ entry.data.newCustomerName }}</span>\\r\\n                                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                                    </a>\\r\\n                                </vdr-labeled-data>\\r\\n                            </vdr-history-entry-detail>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngSwitchDefault>\\r\\n                        <div class=\\\"title\\\">\\r\\n                            {{ entry.type | translate }}\\r\\n                        </div>\\r\\n                        <vdr-history-entry-detail *ngIf=\\\"entry.data\\\">\\r\\n                            <vdr-object-tree [value]=\\\"entry.data\\\"></vdr-object-tree>\\r\\n                        </vdr-history-entry-detail>\\r\\n                    </ng-container>\\r\\n                </ng-container>\\r\\n            </vdr-timeline-entry>\\r\\n        </ng-template>\\r\\n    </ng-container>\\r\\n\\r\\n    <vdr-timeline-entry [isLast]=\\\"true\\\" [createdAt]=\\\"order.createdAt\\\" [featured]=\\\"true\\\">\\r\\n        <div class=\\\"title\\\">\\r\\n            {{ 'order.history-order-created' | translate }}\\r\\n        </div>\\r\\n    </vdr-timeline-entry>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.entry-list{margin-inline-start:calc(var(--space-unit) * 2)}.note-entry{display:flex;align-items:center}.note-entry .note{flex:1}.note-entry button{margin:0}.visibility-select{display:flex;justify-content:space-between;align-items:baseline}.visibility-select .public{color:var(--color-warning-700)}.visibility-select .private{color:var(--color-success-700)}textarea.note{flex:1;height:36px;border-radius:3px;margin-inline-end:6px}.note-text{color:var(--color-grey-800);white-space:pre-wrap;max-width:580px}.cancelled-coupon-code{text-decoration:line-through}.note-visibility{text-transform:lowercase}.note-visibility.public{color:var(--color-warning-700)}.note-visibility.private{color:var(--color-success-700)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.HistoryEntryComponentService }], propDecorators: { order: [{\n                type: Input\n            }], history: [{\n                type: Input\n            }], addNote: [{\n                type: Output\n            }], updateNote: [{\n                type: Output\n            }], deleteNote: [{\n                type: Output\n            }] } });\n\nconst GET_SELLER_ORDERS = gql `\r\n    query GetSellerOrders($orderId: ID!) {\r\n        order(id: $orderId) {\r\n            id\r\n            sellerOrders {\r\n                id\r\n                code\r\n                state\r\n                orderPlacedAt\r\n                currencyCode\r\n                totalWithTax\r\n                channels {\r\n                    id\r\n                    code\r\n                    seller {\r\n                        id\r\n                        name\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\n\nclass SellerOrdersCardComponent {\n    constructor(router, dataService, channelService) {\n        this.router = router;\n        this.dataService = dataService;\n        this.channelService = channelService;\n    }\n    ngOnInit() {\n        this.sellerOrders$ = this.dataService\n            .query(GET_SELLER_ORDERS, {\n            orderId: this.orderId,\n        })\n            .mapSingle(({ order }) => order?.sellerOrders ?? []);\n    }\n    getSeller(order) {\n        const sellerChannel = order.channels.find(channel => channel.code !== DEFAULT_CHANNEL_CODE);\n        return sellerChannel?.seller;\n    }\n    navigateToSellerOrder(order) {\n        this.router.navigate(['/orders', order.id]);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SellerOrdersCardComponent, deps: [{ token: i1$1.Router }, { token: i1.DataService }, { token: i1.ChannelService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: SellerOrdersCardComponent, selector: \"vdr-seller-orders-card\", inputs: { orderId: \"orderId\" }, ngImport: i0, template: \"<vdr-card [title]=\\\"'order.seller-orders' | translate\\\">\\r\\n    <div class=\\\"form-grid\\\">\\r\\n        <div *ngFor=\\\"let order of sellerOrders$ | async\\\">\\r\\n            <a [routerLink]=\\\"['seller-orders', order.id]\\\" class=\\\"button-ghost mb-1\\\"\\r\\n                >{{ order.code }} <clr-icon shape=\\\"arrow right\\\"></clr-icon\\r\\n            ></a>\\r\\n            <vdr-labeled-data [label]=\\\"'order.state' | translate\\\">\\r\\n                <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-labeled-data *ngIf=\\\"getSeller(order) as seller\\\" [label]=\\\"'common.seller' | translate\\\">\\r\\n                {{ seller.name }}\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-labeled-data *ngIf=\\\"getSeller(order) as seller\\\" [label]=\\\"'order.total' | translate\\\">\\r\\n                {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n            </vdr-labeled-data>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.OrderStateLabelComponent, selector: \"vdr-order-state-label\", inputs: [\"state\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: SellerOrdersCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-seller-orders-card', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-card [title]=\\\"'order.seller-orders' | translate\\\">\\r\\n    <div class=\\\"form-grid\\\">\\r\\n        <div *ngFor=\\\"let order of sellerOrders$ | async\\\">\\r\\n            <a [routerLink]=\\\"['seller-orders', order.id]\\\" class=\\\"button-ghost mb-1\\\"\\r\\n                >{{ order.code }} <clr-icon shape=\\\"arrow right\\\"></clr-icon\\r\\n            ></a>\\r\\n            <vdr-labeled-data [label]=\\\"'order.state' | translate\\\">\\r\\n                <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-labeled-data *ngIf=\\\"getSeller(order) as seller\\\" [label]=\\\"'common.seller' | translate\\\">\\r\\n                {{ seller.name }}\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-labeled-data *ngIf=\\\"getSeller(order) as seller\\\" [label]=\\\"'order.total' | translate\\\">\\r\\n                {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n            </vdr-labeled-data>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1$1.Router }, { type: i1.DataService }, { type: i1.ChannelService }], propDecorators: { orderId: [{\n                type: Input\n            }] } });\n\nconst ORDER_DETAIL_QUERY = gql `\r\n    query OrderDetailQuery($id: ID!) {\r\n        order(id: $id) {\r\n            ...OrderDetail\r\n        }\r\n    }\r\n    ${ORDER_DETAIL_FRAGMENT}\r\n`;\nconst SET_ORDER_CUSTOMER_MUTATION = gql `\r\n    mutation SetOrderCustomer($input: SetOrderCustomerInput!) {\r\n        setOrderCustomer(input: $input) {\r\n            id\r\n            customer {\r\n                id\r\n                firstName\r\n                lastName\r\n                emailAddress\r\n            }\r\n        }\r\n    }\r\n`;\nclass OrderDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, notificationService, modalService, orderTransitionService, formBuilder) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.orderTransitionService = orderTransitionService;\n        this.formBuilder = formBuilder;\n        this.customFields = this.getCustomFieldConfig('Order');\n        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');\n        this.detailForm = new FormGroup({\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.fetchHistory = new Subject();\n        this.defaultStates = [\n            'AddingItems',\n            'ArrangingPayment',\n            'PaymentAuthorized',\n            'PaymentSettled',\n            'PartiallyShipped',\n            'Shipped',\n            'PartiallyDelivered',\n            'Delivered',\n            'Cancelled',\n            'Modifying',\n            'ArrangingAdditionalPayment',\n        ];\n    }\n    ngOnInit() {\n        this.init();\n        this.entity$.pipe(take(1)).subscribe(order => {\n            if (order.state === 'Modifying') {\n                this.router.navigate(['./', 'modify'], { relativeTo: this.route });\n            }\n        });\n        this.history$ = this.fetchHistory.pipe(startWith(null), switchMap(() => this.dataService.order\n            .getOrderHistory(this.id, {\n            sort: {\n                createdAt: SortOrder.DESC,\n            },\n        })\n            .mapStream(data => data.order?.history.items)));\n        this.nextStates$ = this.entity$.pipe(map(order => {\n            const isInCustomState = !this.defaultStates.includes(order.state);\n            return isInCustomState\n                ? order.nextStates\n                : order.nextStates.filter(s => !this.defaultStates.includes(s));\n        }));\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    openStateDiagram() {\n        this.entity$\n            .pipe(take(1), switchMap(order => this.modalService.fromComponent(OrderProcessGraphDialogComponent, {\n            closable: true,\n            locals: {\n                activeState: order.state,\n            },\n        })))\n            .subscribe();\n    }\n    setOrderCustomer() {\n        this.modalService\n            .fromComponent(SelectCustomerDialogComponent, {\n            locals: {\n                canCreateNew: false,\n                includeNoteInput: true,\n                title: marker('order.assign-order-to-another-customer'),\n            },\n        })\n            .pipe(switchMap(result => {\n            function isExisting(input) {\n                return typeof input === 'object' && !!input.id;\n            }\n            if (isExisting(result)) {\n                return this.dataService.mutate(SetOrderCustomerDocument, {\n                    input: {\n                        customerId: result.id,\n                        orderId: this.id,\n                        note: result.note,\n                    },\n                });\n            }\n            else {\n                return EMPTY;\n            }\n        }), switchMap(result => this.refetchOrder(result)))\n            .subscribe(result => {\n            if (result) {\n                this.notificationService.success(marker('order.set-customer-success'));\n            }\n        });\n    }\n    transitionToState(state) {\n        this.dataService.order.transitionToState(this.id, state).subscribe(({ transitionOrderToState }) => {\n            switch (transitionOrderToState?.__typename) {\n                case 'Order':\n                    this.notificationService.success(marker('order.transitioned-to-state-success'), { state });\n                    this.fetchHistory.next();\n                    break;\n                case 'OrderStateTransitionError':\n                    this.notificationService.error(transitionOrderToState.transitionError);\n            }\n        });\n    }\n    manuallyTransitionToState(order) {\n        this.orderTransitionService\n            .manuallyTransitionToState({\n            orderId: order.id,\n            nextStates: order.nextStates,\n            cancellable: true,\n            message: marker('order.manually-transition-to-state-message'),\n            retry: 0,\n        })\n            .subscribe();\n    }\n    transitionToModifying() {\n        this.dataService.order\n            .transitionToState(this.id, 'Modifying')\n            .subscribe(({ transitionOrderToState }) => {\n            switch (transitionOrderToState?.__typename) {\n                case 'Order':\n                    this.router.navigate(['./modify'], { relativeTo: this.route });\n                    break;\n                case 'OrderStateTransitionError':\n                    this.notificationService.error(transitionOrderToState.transitionError);\n            }\n        });\n    }\n    updateCustomFields() {\n        this.dataService.order\n            .updateOrderCustomFields({\n            id: this.id,\n            customFields: this.detailForm.value.customFields,\n        })\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Order' });\n        });\n    }\n    getOrderAddressLines(orderAddress) {\n        if (!orderAddress) {\n            return [];\n        }\n        return Object.values(orderAddress)\n            .filter(val => val !== 'OrderAddress')\n            .filter(line => !!line);\n    }\n    settlePayment(payment) {\n        this.dataService.order.settlePayment(payment.id).subscribe(({ settlePayment }) => {\n            switch (settlePayment.__typename) {\n                case 'Payment':\n                    if (settlePayment.state === 'Settled') {\n                        this.notificationService.success(marker('order.settle-payment-success'));\n                    }\n                    else {\n                        this.notificationService.error(marker('order.settle-payment-error'));\n                    }\n                    this.dataService.order.getOrder(this.id).single$.subscribe();\n                    this.fetchHistory.next();\n                    break;\n                case 'OrderStateTransitionError':\n                case 'PaymentStateTransitionError':\n                case 'SettlePaymentError':\n                    this.notificationService.error(settlePayment.message);\n            }\n        });\n    }\n    transitionPaymentState({ payment, state }) {\n        if (state === 'Cancelled') {\n            this.dataService.order.cancelPayment(payment.id).subscribe(({ cancelPayment }) => {\n                switch (cancelPayment.__typename) {\n                    case 'Payment':\n                        this.notificationService.success(marker('order.transitioned-payment-to-state-success'), {\n                            state,\n                        });\n                        this.dataService.order.getOrder(this.id).single$.subscribe();\n                        this.fetchHistory.next();\n                        break;\n                    case 'PaymentStateTransitionError':\n                        this.notificationService.error(cancelPayment.transitionError);\n                        break;\n                    case 'CancelPaymentError':\n                        this.notificationService.error(cancelPayment.paymentErrorMessage);\n                        break;\n                }\n            });\n        }\n        else {\n            this.dataService.order\n                .transitionPaymentToState(payment.id, state)\n                .subscribe(({ transitionPaymentToState }) => {\n                switch (transitionPaymentToState.__typename) {\n                    case 'Payment':\n                        this.notificationService.success(marker('order.transitioned-payment-to-state-success'), {\n                            state,\n                        });\n                        this.dataService.order.getOrder(this.id).single$.subscribe();\n                        this.fetchHistory.next();\n                        break;\n                    case 'PaymentStateTransitionError':\n                        this.notificationService.error(transitionPaymentToState.message);\n                        break;\n                }\n            });\n        }\n    }\n    canAddFulfillment(order) {\n        const allFulfillmentLines = (order.fulfillments ?? [])\n            .filter(fulfillment => fulfillment.state !== 'Cancelled')\n            .reduce((all, fulfillment) => [...all, ...fulfillment.lines], []);\n        let allItemsFulfilled = true;\n        for (const line of order.lines) {\n            const totalFulfilledCount = allFulfillmentLines\n                .filter(row => row.orderLineId === line.id)\n                .reduce((sum, row) => sum + row.quantity, 0);\n            if (totalFulfilledCount < line.quantity) {\n                allItemsFulfilled = false;\n            }\n        }\n        return (!allItemsFulfilled &&\n            !this.hasUnsettledModifications(order) &&\n            this.outstandingPaymentAmount(order) === 0 &&\n            (order.nextStates.includes('Shipped') ||\n                order.nextStates.includes('PartiallyShipped') ||\n                order.nextStates.includes('Delivered')));\n    }\n    hasUnsettledModifications(order) {\n        return 0 < order.modifications.filter(m => !m.isSettled).length;\n    }\n    getOutstandingModificationAmount(order) {\n        return summate(order.modifications.filter(m => !m.isSettled), 'priceChange');\n    }\n    outstandingPaymentAmount(order) {\n        const paymentIsValid = (p) => p.state !== 'Cancelled' && p.state !== 'Declined' && p.state !== 'Error';\n        let amountCovered = 0;\n        for (const payment of order.payments?.filter(paymentIsValid) ?? []) {\n            const refunds = payment.refunds.filter(r => r.state !== 'Failed') ?? [];\n            const refundsTotal = summate(refunds, 'total');\n            amountCovered += payment.amount - refundsTotal;\n        }\n        return order.totalWithTax - amountCovered;\n    }\n    addManualPayment(order) {\n        const priorState = order.state;\n        this.modalService\n            .fromComponent(AddManualPaymentDialogComponent, {\n            closable: true,\n            locals: {\n                outstandingAmount: this.outstandingPaymentAmount(order),\n                currencyCode: order.currencyCode,\n            },\n        })\n            .pipe(switchMap(result => {\n            if (result) {\n                return this.dataService.order.addManualPaymentToOrder({\n                    orderId: this.id,\n                    transactionId: result.transactionId,\n                    method: result.method,\n                    metadata: result.metadata || {},\n                });\n            }\n            else {\n                return EMPTY;\n            }\n        }), switchMap(({ addManualPaymentToOrder }) => {\n            switch (addManualPaymentToOrder.__typename) {\n                case 'Order':\n                    this.notificationService.success(marker('order.add-payment-to-order-success'));\n                    if (priorState === 'ArrangingAdditionalPayment') {\n                        return this.orderTransitionService.transitionToPreModifyingState(order.id, order.nextStates);\n                    }\n                    else {\n                        return of('PaymentSettled');\n                    }\n                case 'ManualPaymentStateError':\n                    this.notificationService.error(addManualPaymentToOrder.message);\n                    return EMPTY;\n                default:\n                    return EMPTY;\n            }\n        }))\n            .subscribe(result => {\n            if (result) {\n                this.refetchOrder({ result });\n            }\n        });\n    }\n    fulfillOrder() {\n        this.entity$\n            .pipe(take(1), switchMap(order => this.modalService.fromComponent(FulfillOrderDialogComponent, {\n            size: 'xl',\n            locals: {\n                order,\n            },\n        })), switchMap(input => {\n            if (input) {\n                return this.dataService.order.createFulfillment(input);\n            }\n            else {\n                return of(undefined);\n            }\n        }), switchMap(result => this.refetchOrder(result).pipe(mapTo(result))))\n            .subscribe(result => {\n            if (result) {\n                const { addFulfillmentToOrder } = result;\n                switch (addFulfillmentToOrder.__typename) {\n                    case 'Fulfillment':\n                        this.notificationService.success(marker('order.create-fulfillment-success'));\n                        break;\n                    case 'EmptyOrderLineSelectionError':\n                    case 'InsufficientStockOnHandError':\n                    case 'ItemsAlreadyFulfilledError':\n                    case 'InvalidFulfillmentHandlerError':\n                        this.notificationService.error(addFulfillmentToOrder.message);\n                        break;\n                    case 'FulfillmentStateTransitionError':\n                        this.notificationService.error(addFulfillmentToOrder.transitionError);\n                        break;\n                    case 'CreateFulfillmentError':\n                        this.notificationService.error(addFulfillmentToOrder.fulfillmentHandlerError);\n                        break;\n                    case undefined:\n                        this.notificationService.error(JSON.stringify(addFulfillmentToOrder));\n                        break;\n                    default:\n                        assertNever(addFulfillmentToOrder);\n                }\n            }\n        });\n    }\n    transitionFulfillment(id, state) {\n        this.dataService.order\n            .transitionFulfillmentToState(id, state)\n            .pipe(switchMap(result => this.refetchOrder(result)))\n            .subscribe(() => {\n            this.notificationService.success(marker('order.successfully-updated-fulfillment'));\n        });\n    }\n    cancelOrRefund(order) {\n        const isRefundable = this.orderHasSettledPayments(order);\n        if (order.state === 'PaymentAuthorized' || order.active === true || !isRefundable) {\n            this.cancelOrder(order);\n        }\n        else {\n            this.refundOrder(order);\n        }\n    }\n    settleRefund(refund) {\n        this.modalService\n            .fromComponent(SettleRefundDialogComponent, {\n            size: 'md',\n            locals: {\n                refund,\n            },\n        })\n            .pipe(switchMap(transactionId => {\n            if (transactionId) {\n                return this.dataService.order.settleRefund({\n                    transactionId,\n                    id: refund.id,\n                }, this.id);\n            }\n            else {\n                return of(undefined);\n            }\n        }))\n            .subscribe(result => {\n            if (result) {\n                this.notificationService.success(marker('order.settle-refund-success'));\n            }\n        });\n    }\n    addNote(event) {\n        const { note, isPublic } = event;\n        this.dataService.order\n            .addNoteToOrder({\n            id: this.id,\n            note,\n            isPublic,\n        })\n            .pipe(switchMap(result => this.refetchOrder(result)))\n            .subscribe(result => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Note',\n            });\n        });\n    }\n    updateNote(entry) {\n        this.modalService\n            .fromComponent(EditNoteDialogComponent, {\n            closable: true,\n            locals: {\n                displayPrivacyControls: true,\n                note: entry.data.note,\n                noteIsPrivate: !entry.isPublic,\n            },\n        })\n            .pipe(switchMap(result => {\n            if (result) {\n                return this.dataService.order.updateOrderNote({\n                    noteId: entry.id,\n                    isPublic: !result.isPrivate,\n                    note: result.note,\n                });\n            }\n            else {\n                return EMPTY;\n            }\n        }))\n            .subscribe(result => {\n            this.fetchHistory.next();\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Note',\n            });\n        });\n    }\n    deleteNote(entry) {\n        return this.modalService\n            .dialog({\n            title: marker('common.confirm-delete-note'),\n            body: entry.data.note,\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(res => (res ? this.dataService.order.deleteOrderNote(entry.id) : EMPTY)))\n            .subscribe(() => {\n            this.fetchHistory.next();\n            this.notificationService.success(marker('common.notify-delete-success'), {\n                entity: 'Note',\n            });\n        });\n    }\n    orderHasSettledPayments(order) {\n        return !!order.payments?.find(p => p.state === 'Settled');\n    }\n    cancelOrder(order) {\n        this.modalService\n            .fromComponent(CancelOrderDialogComponent, {\n            size: 'xl',\n            locals: {\n                order,\n            },\n        })\n            .pipe(switchMap(input => {\n            if (input) {\n                return this.dataService.order.cancelOrder(input);\n            }\n            else {\n                return of(undefined);\n            }\n        }), switchMap(result => this.refetchOrder(result)))\n            .subscribe(result => {\n            if (result) {\n                this.notificationService.success(marker('order.cancelled-order-success'));\n            }\n        });\n    }\n    refundOrder(order) {\n        this.modalService\n            .fromComponent(RefundOrderDialogComponent, {\n            size: 'xl',\n            locals: {\n                order,\n            },\n        })\n            .pipe(switchMap(input => {\n            if (!input) {\n                return of(undefined);\n            }\n            if (input.cancel.lines?.length) {\n                return this.dataService.order.cancelOrder(input.cancel).pipe(map(res => {\n                    const result = res.cancelOrder;\n                    switch (result.__typename) {\n                        case 'Order':\n                            this.refetchOrder(result).subscribe();\n                            this.notificationService.success(marker('order.cancelled-order-items-success'), {\n                                count: summate(input.cancel.lines, 'quantity'),\n                            });\n                            return input;\n                        case 'CancelActiveOrderError':\n                        case 'QuantityTooGreatError':\n                        case 'MultipleOrderError':\n                        case 'OrderStateTransitionError':\n                        case 'EmptyOrderLineSelectionError':\n                            this.notificationService.error(result.message);\n                            return undefined;\n                    }\n                }));\n            }\n            else {\n                return [input];\n            }\n        }), switchMap(input => {\n            if (!input) {\n                return of(undefined);\n            }\n            if (input.refunds.length) {\n                return forkJoin(input.refunds.map(refund => this.dataService.order.refundOrder(refund).pipe(map(res => res.refundOrder))));\n            }\n            else {\n                return [undefined];\n            }\n        }))\n            .subscribe(results => {\n            for (const result of results ?? []) {\n                if (result) {\n                    switch (result.__typename) {\n                        case 'Refund':\n                            if (result.state === 'Failed') {\n                                this.notificationService.error(marker('order.refund-order-failed'));\n                            }\n                            else {\n                                this.notificationService.success(marker('order.refund-order-success'));\n                            }\n                            break;\n                        case 'AlreadyRefundedError':\n                        case 'NothingToRefundError':\n                        case 'PaymentOrderMismatchError':\n                        case 'RefundOrderStateError':\n                        case 'RefundStateTransitionError':\n                            this.notificationService.error(result.message);\n                            break;\n                    }\n                }\n            }\n            this.refetchOrder(results?.[0]).subscribe();\n        });\n    }\n    refetchOrder(result) {\n        this.fetchHistory.next();\n        if (result) {\n            return this.dataService.order.getOrder(this.id).single$;\n        }\n        else {\n            return of(undefined);\n        }\n    }\n    setFormValues(entity) {\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: OrderTransitionService }, { token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderDetailComponent, selector: \"vdr-order-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar *ngIf=\\\"entity$ | async as order\\\">\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"order-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                *ngIf=\\\"\\r\\n                    order.type !== 'Aggregate' &&\\r\\n                    (order.state === 'ArrangingPayment' || order.state === 'ArrangingAdditionalPayment') &&\\r\\n                    (hasUnsettledModifications(order) || 0 < outstandingPaymentAmount(order))\\r\\n                \\\"\\r\\n                (click)=\\\"addManualPayment(order)\\\"\\r\\n            >\\r\\n                {{ 'order.add-payment-to-order' | translate }}\\r\\n                ({{ outstandingPaymentAmount(order) | localeCurrency : order.currencyCode }})\\r\\n            </button>\\r\\n            <button\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                *ngIf=\\\"\\r\\n                    order.type !== 'Aggregate' &&\\r\\n                    order.active === false &&\\r\\n                    order.state !== 'ArrangingAdditionalPayment' &&\\r\\n                    order.state !== 'ArrangingPayment' &&\\r\\n                    0 < outstandingPaymentAmount(order)\\r\\n                \\\"\\r\\n                (click)=\\\"transitionToState('ArrangingAdditionalPayment')\\\"\\r\\n            >\\r\\n                {{ 'order.arrange-additional-payment' | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n                *ngIf=\\\"order.type !== 'Aggregate'\\\"\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                (click)=\\\"fulfillOrder()\\\"\\r\\n                [disabled]=\\\"!canAddFulfillment(order)\\\"\\r\\n            >\\r\\n                {{ 'order.fulfill-order' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu [alwaysShow]=\\\"true\\\" locationId=\\\"order-detail\\\">\\r\\n                <ng-container *ngIf=\\\"order.type !== 'Aggregate' && order.nextStates.includes('Modifying')\\\">\\r\\n                    <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"transitionToModifying()\\\">\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'order.modify-order' | translate }}\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                </ng-container>\\r\\n                <button\\r\\n                    type=\\\"button\\\"\\r\\n                    vdrDropdownItem\\r\\n                    *ngIf=\\\"order.type !== 'Aggregate' && order.nextStates.includes('Cancelled')\\\"\\r\\n                    (click)=\\\"cancelOrRefund(order)\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"error-standard\\\" class=\\\"is-error\\\"></clr-icon>\\r\\n                    <ng-container *ngIf=\\\"orderHasSettledPayments(order); else cancelOnly\\\">\\r\\n                        {{ 'order.refund-and-cancel-order' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-template #cancelOnly>\\r\\n                        {{ 'order.cancel-order' | translate }}\\r\\n                    </ng-template>\\r\\n                </button>\\r\\n\\r\\n                <ng-container *ngIf=\\\"(nextStates$ | async)?.length\\\">\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        *ngFor=\\\"let nextState of nextStates$ | async\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"transitionToState(nextState)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"step-forward-2\\\"></clr-icon>\\r\\n                        {{\\r\\n                            'order.transition-to-state'\\r\\n                                | translate : { state: (nextState | stateI18nToken | translate) }\\r\\n                        }}\\r\\n                    </button>\\r\\n                </ng-container>\\r\\n                <div class=\\\"dropdown-divider\\\"></div>\\r\\n                <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"manuallyTransitionToState(order)\\\">\\r\\n                    <clr-icon shape=\\\"step-forward-2\\\" class=\\\"is-warning\\\"></clr-icon>\\r\\n                    {{ 'order.manually-transition-to-state' | translate }}\\r\\n                </button>\\r\\n            </vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-page-detail-layout *ngIf=\\\"entity$ | async as order\\\">\\r\\n    <vdr-page-detail-sidebar>\\r\\n        <vdr-card [title]=\\\"'order.state' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    (click)=\\\"openStateDiagram()\\\"\\r\\n                    [title]=\\\"'order.order-state-diagram' | translate\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"list\\\"></clr-icon>\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.customer' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"['UpdateOrder', 'ReadCustomer']\\\"\\r\\n                    class=\\\"button-small\\\"\\r\\n                    (click)=\\\"setOrderCustomer()\\\"\\r\\n                    [title]=\\\"'order.assign-order-to-another-customer' | translate\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"switch\\\"></clr-icon>\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-customer-label [customer]=\\\"order.customer\\\"></vdr-customer-label>\\r\\n            <vdr-labeled-data\\r\\n                class=\\\"mt-2\\\"\\r\\n                [label]=\\\"'order.shipping-address' | translate\\\"\\r\\n                *ngIf=\\\"getOrderAddressLines(order.shippingAddress).length\\\"\\r\\n            >\\r\\n                <vdr-formatted-address [address]=\\\"order.shippingAddress\\\" class=\\\"mt-1\\\"></vdr-formatted-address>\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-labeled-data\\r\\n                [label]=\\\"'order.billing-address' | translate\\\"\\r\\n                *ngIf=\\\"getOrderAddressLines(order.billingAddress).length\\\"\\r\\n            >\\r\\n                <vdr-formatted-address [address]=\\\"order.billingAddress\\\" class=\\\"mt-1\\\"></vdr-formatted-address>\\r\\n            </vdr-labeled-data>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.payments' | translate\\\" *ngIf=\\\"order.payments?.length\\\">\\r\\n            <vdr-order-payment-card\\r\\n                *ngFor=\\\"let payment of order.payments\\\"\\r\\n                [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                [payment]=\\\"payment\\\"\\r\\n                (settlePayment)=\\\"settlePayment($event)\\\"\\r\\n                (transitionPaymentState)=\\\"transitionPaymentState($event)\\\"\\r\\n                (settleRefund)=\\\"settleRefund($event)\\\"\\r\\n            ></vdr-order-payment-card>\\r\\n        </vdr-card>\\r\\n        <vdr-card *ngIf=\\\"order.fulfillments?.length\\\">\\r\\n            <vdr-fulfillment-card\\r\\n                *ngFor=\\\"let fulfillment of order.fulfillments\\\"\\r\\n                [fulfillment]=\\\"fulfillment\\\"\\r\\n                [order]=\\\"order\\\"\\r\\n                (transitionState)=\\\"transitionFulfillment(fulfillment.id, $event)\\\"\\r\\n            ></vdr-fulfillment-card>\\r\\n        </vdr-card>\\r\\n        <vdr-card>\\r\\n            <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n        </vdr-card>\\r\\n    </vdr-page-detail-sidebar>\\r\\n\\r\\n    <vdr-page-block>\\r\\n        <vdr-seller-orders-card\\r\\n            class=\\\"mb-2\\\"\\r\\n            *ngIf=\\\"order.sellerOrders.length\\\"\\r\\n            [orderId]=\\\"order.id\\\"\\r\\n        ></vdr-seller-orders-card>\\r\\n        <vdr-card [paddingX]=\\\"false\\\">\\r\\n            <vdr-order-table\\r\\n                [order]=\\\"order\\\"\\r\\n                [orderLineCustomFields]=\\\"orderLineCustomFields\\\"\\r\\n            ></vdr-order-table>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.tax-summary' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>{{ 'common.description' | translate }}</th>\\r\\n                        <th>{{ 'order.tax-rate' | translate }}</th>\\r\\n                        <th>{{ 'order.tax-base' | translate }}</th>\\r\\n                        <th>{{ 'order.tax-total' | translate }}</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let row of order.taxSummary\\\">\\r\\n                        <td>{{ row.description }}</td>\\r\\n                        <td>{{ row.taxRate / 100 | percent : '0.0-3' }}</td>\\r\\n                        <td>{{ row.taxBase | localeCurrency : order.currencyCode }}</td>\\r\\n                        <td>{{ row.taxTotal | localeCurrency : order.currencyCode }}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n            <vdr-tabbed-custom-fields\\r\\n                entityName=\\\"Order\\\"\\r\\n                [customFields]=\\\"customFields\\\"\\r\\n                [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                [readonly]=\\\"!('UpdateOrder' | hasPermission)\\\"\\r\\n            />\\r\\n            <button\\r\\n                class=\\\"button primary\\\"\\r\\n                (click)=\\\"updateCustomFields()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    detailForm.get('customFields')?.pristine || detailForm.get('customFields')?.invalid\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-card>\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"order-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n\\r\\n        <vdr-card [title]=\\\"'order.order-history' | translate\\\">\\r\\n            <vdr-order-history\\r\\n                [order]=\\\"order\\\"\\r\\n                [history]=\\\"history$ | async\\\"\\r\\n                (addNote)=\\\"addNote($event)\\\"\\r\\n                (updateNote)=\\\"updateNote($event)\\\"\\r\\n                (deleteNote)=\\\"deleteNote($event)\\\"\\r\\n            ></vdr-order-history>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-detail-layout>\\r\\n\", styles: [\".shipping-address{list-style-type:none;line-height:1.3em}.order-cards h6{margin-top:6px;color:var(--color-text-200)}vdr-order-payment-card+vdr-order-payment-card{margin-top:calc(var(--space-unit) * 2)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.CustomerLabelComponent, selector: \"vdr-customer-label\", inputs: [\"customer\"] }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"component\", type: i1.OrderStateLabelComponent, selector: \"vdr-order-state-label\", inputs: [\"state\"] }, { kind: \"component\", type: i1.FormattedAddressComponent, selector: \"vdr-formatted-address\", inputs: [\"address\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"directive\", type: i1.CardControlsDirective, selector: \"[vdrCardControls]\" }, { kind: \"component\", type: OrderPaymentCardComponent, selector: \"vdr-order-payment-card\", inputs: [\"payment\", \"currencyCode\"], outputs: [\"settlePayment\", \"transitionPaymentState\", \"settleRefund\"] }, { kind: \"component\", type: OrderHistoryComponent, selector: \"vdr-order-history\", inputs: [\"order\", \"history\"], outputs: [\"addNote\", \"updateNote\", \"deleteNote\"] }, { kind: \"component\", type: FulfillmentCardComponent, selector: \"vdr-fulfillment-card\", inputs: [\"fulfillment\", \"order\"], outputs: [\"transitionState\"] }, { kind: \"component\", type: OrderTableComponent, selector: \"vdr-order-table\", inputs: [\"order\", \"orderLineCustomFields\", \"isDraft\"], outputs: [\"adjust\", \"remove\"] }, { kind: \"component\", type: SellerOrdersCardComponent, selector: \"vdr-seller-orders-card\", inputs: [\"orderId\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2$1.PercentPipe, name: \"percent\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.StateI18nTokenPipe, name: \"stateI18nToken\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar *ngIf=\\\"entity$ | async as order\\\">\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"order-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                *ngIf=\\\"\\r\\n                    order.type !== 'Aggregate' &&\\r\\n                    (order.state === 'ArrangingPayment' || order.state === 'ArrangingAdditionalPayment') &&\\r\\n                    (hasUnsettledModifications(order) || 0 < outstandingPaymentAmount(order))\\r\\n                \\\"\\r\\n                (click)=\\\"addManualPayment(order)\\\"\\r\\n            >\\r\\n                {{ 'order.add-payment-to-order' | translate }}\\r\\n                ({{ outstandingPaymentAmount(order) | localeCurrency : order.currencyCode }})\\r\\n            </button>\\r\\n            <button\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                *ngIf=\\\"\\r\\n                    order.type !== 'Aggregate' &&\\r\\n                    order.active === false &&\\r\\n                    order.state !== 'ArrangingAdditionalPayment' &&\\r\\n                    order.state !== 'ArrangingPayment' &&\\r\\n                    0 < outstandingPaymentAmount(order)\\r\\n                \\\"\\r\\n                (click)=\\\"transitionToState('ArrangingAdditionalPayment')\\\"\\r\\n            >\\r\\n                {{ 'order.arrange-additional-payment' | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n                *ngIf=\\\"order.type !== 'Aggregate'\\\"\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                (click)=\\\"fulfillOrder()\\\"\\r\\n                [disabled]=\\\"!canAddFulfillment(order)\\\"\\r\\n            >\\r\\n                {{ 'order.fulfill-order' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu [alwaysShow]=\\\"true\\\" locationId=\\\"order-detail\\\">\\r\\n                <ng-container *ngIf=\\\"order.type !== 'Aggregate' && order.nextStates.includes('Modifying')\\\">\\r\\n                    <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"transitionToModifying()\\\">\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'order.modify-order' | translate }}\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                </ng-container>\\r\\n                <button\\r\\n                    type=\\\"button\\\"\\r\\n                    vdrDropdownItem\\r\\n                    *ngIf=\\\"order.type !== 'Aggregate' && order.nextStates.includes('Cancelled')\\\"\\r\\n                    (click)=\\\"cancelOrRefund(order)\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"error-standard\\\" class=\\\"is-error\\\"></clr-icon>\\r\\n                    <ng-container *ngIf=\\\"orderHasSettledPayments(order); else cancelOnly\\\">\\r\\n                        {{ 'order.refund-and-cancel-order' | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-template #cancelOnly>\\r\\n                        {{ 'order.cancel-order' | translate }}\\r\\n                    </ng-template>\\r\\n                </button>\\r\\n\\r\\n                <ng-container *ngIf=\\\"(nextStates$ | async)?.length\\\">\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        *ngFor=\\\"let nextState of nextStates$ | async\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"transitionToState(nextState)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"step-forward-2\\\"></clr-icon>\\r\\n                        {{\\r\\n                            'order.transition-to-state'\\r\\n                                | translate : { state: (nextState | stateI18nToken | translate) }\\r\\n                        }}\\r\\n                    </button>\\r\\n                </ng-container>\\r\\n                <div class=\\\"dropdown-divider\\\"></div>\\r\\n                <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"manuallyTransitionToState(order)\\\">\\r\\n                    <clr-icon shape=\\\"step-forward-2\\\" class=\\\"is-warning\\\"></clr-icon>\\r\\n                    {{ 'order.manually-transition-to-state' | translate }}\\r\\n                </button>\\r\\n            </vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-page-detail-layout *ngIf=\\\"entity$ | async as order\\\">\\r\\n    <vdr-page-detail-sidebar>\\r\\n        <vdr-card [title]=\\\"'order.state' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    (click)=\\\"openStateDiagram()\\\"\\r\\n                    [title]=\\\"'order.order-state-diagram' | translate\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"list\\\"></clr-icon>\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.customer' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"['UpdateOrder', 'ReadCustomer']\\\"\\r\\n                    class=\\\"button-small\\\"\\r\\n                    (click)=\\\"setOrderCustomer()\\\"\\r\\n                    [title]=\\\"'order.assign-order-to-another-customer' | translate\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"switch\\\"></clr-icon>\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-customer-label [customer]=\\\"order.customer\\\"></vdr-customer-label>\\r\\n            <vdr-labeled-data\\r\\n                class=\\\"mt-2\\\"\\r\\n                [label]=\\\"'order.shipping-address' | translate\\\"\\r\\n                *ngIf=\\\"getOrderAddressLines(order.shippingAddress).length\\\"\\r\\n            >\\r\\n                <vdr-formatted-address [address]=\\\"order.shippingAddress\\\" class=\\\"mt-1\\\"></vdr-formatted-address>\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-labeled-data\\r\\n                [label]=\\\"'order.billing-address' | translate\\\"\\r\\n                *ngIf=\\\"getOrderAddressLines(order.billingAddress).length\\\"\\r\\n            >\\r\\n                <vdr-formatted-address [address]=\\\"order.billingAddress\\\" class=\\\"mt-1\\\"></vdr-formatted-address>\\r\\n            </vdr-labeled-data>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.payments' | translate\\\" *ngIf=\\\"order.payments?.length\\\">\\r\\n            <vdr-order-payment-card\\r\\n                *ngFor=\\\"let payment of order.payments\\\"\\r\\n                [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                [payment]=\\\"payment\\\"\\r\\n                (settlePayment)=\\\"settlePayment($event)\\\"\\r\\n                (transitionPaymentState)=\\\"transitionPaymentState($event)\\\"\\r\\n                (settleRefund)=\\\"settleRefund($event)\\\"\\r\\n            ></vdr-order-payment-card>\\r\\n        </vdr-card>\\r\\n        <vdr-card *ngIf=\\\"order.fulfillments?.length\\\">\\r\\n            <vdr-fulfillment-card\\r\\n                *ngFor=\\\"let fulfillment of order.fulfillments\\\"\\r\\n                [fulfillment]=\\\"fulfillment\\\"\\r\\n                [order]=\\\"order\\\"\\r\\n                (transitionState)=\\\"transitionFulfillment(fulfillment.id, $event)\\\"\\r\\n            ></vdr-fulfillment-card>\\r\\n        </vdr-card>\\r\\n        <vdr-card>\\r\\n            <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n        </vdr-card>\\r\\n    </vdr-page-detail-sidebar>\\r\\n\\r\\n    <vdr-page-block>\\r\\n        <vdr-seller-orders-card\\r\\n            class=\\\"mb-2\\\"\\r\\n            *ngIf=\\\"order.sellerOrders.length\\\"\\r\\n            [orderId]=\\\"order.id\\\"\\r\\n        ></vdr-seller-orders-card>\\r\\n        <vdr-card [paddingX]=\\\"false\\\">\\r\\n            <vdr-order-table\\r\\n                [order]=\\\"order\\\"\\r\\n                [orderLineCustomFields]=\\\"orderLineCustomFields\\\"\\r\\n            ></vdr-order-table>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.tax-summary' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>{{ 'common.description' | translate }}</th>\\r\\n                        <th>{{ 'order.tax-rate' | translate }}</th>\\r\\n                        <th>{{ 'order.tax-base' | translate }}</th>\\r\\n                        <th>{{ 'order.tax-total' | translate }}</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let row of order.taxSummary\\\">\\r\\n                        <td>{{ row.description }}</td>\\r\\n                        <td>{{ row.taxRate / 100 | percent : '0.0-3' }}</td>\\r\\n                        <td>{{ row.taxBase | localeCurrency : order.currencyCode }}</td>\\r\\n                        <td>{{ row.taxTotal | localeCurrency : order.currencyCode }}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n            <vdr-tabbed-custom-fields\\r\\n                entityName=\\\"Order\\\"\\r\\n                [customFields]=\\\"customFields\\\"\\r\\n                [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                [readonly]=\\\"!('UpdateOrder' | hasPermission)\\\"\\r\\n            />\\r\\n            <button\\r\\n                class=\\\"button primary\\\"\\r\\n                (click)=\\\"updateCustomFields()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    detailForm.get('customFields')?.pristine || detailForm.get('customFields')?.invalid\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-card>\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"order-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n\\r\\n        <vdr-card [title]=\\\"'order.order-history' | translate\\\">\\r\\n            <vdr-order-history\\r\\n                [order]=\\\"order\\\"\\r\\n                [history]=\\\"history$ | async\\\"\\r\\n                (addNote)=\\\"addNote($event)\\\"\\r\\n                (updateNote)=\\\"updateNote($event)\\\"\\r\\n                (deleteNote)=\\\"deleteNote($event)\\\"\\r\\n            ></vdr-order-history>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-detail-layout>\\r\\n\", styles: [\".shipping-address{list-style-type:none;line-height:1.3em}.order-cards h6{margin-top:6px;color:var(--color-text-200)}vdr-order-payment-card+vdr-order-payment-card{margin-top:calc(var(--space-unit) * 2)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: OrderTransitionService }, { type: i2.FormBuilder }] });\n\nclass OrderModificationSummaryComponent {\n    get adjustedLines() {\n        return (this.modifyOrderInput.adjustOrderLines || [])\n            .map(l => {\n            const line = this.orderSnapshot.lines.find(line => line.id === l.orderLineId);\n            if (line) {\n                const delta = l.quantity - line.quantity;\n                const sign = delta === 0 ? '' : delta > 0 ? '+' : '-';\n                return delta\n                    ? `${sign}${Math.abs(delta)} ${line.productVariant.name}`\n                    : line.productVariant.name;\n            }\n        })\n            .filter(notNullOrUndefined);\n    }\n    getModifiedFields(formGroup) {\n        if (!formGroup.dirty) {\n            return '';\n        }\n        return Object.entries(formGroup.controls)\n            .map(([key, control]) => {\n            if (control.dirty) {\n                return key;\n            }\n        })\n            .filter(notNullOrUndefined)\n            .join(', ');\n    }\n    getUpdatedShippingMethodLines() {\n        return Object.entries(this.updatedShippingMethods || {})\n            .map(([lineId, shippingMethod]) => {\n            const previousMethod = this.orderSnapshot.shippingLines.find(l => l.id === lineId);\n            if (!previousMethod) {\n                return;\n            }\n            const previousName = previousMethod.shippingMethod.name || previousMethod.shippingMethod.code;\n            const newName = shippingMethod.name || shippingMethod.code;\n            return `${previousName} -> ${newName}`;\n        })\n            .filter(notNullOrUndefined);\n    }\n    get couponCodeChanges() {\n        const originalCodes = this.orderSnapshot.couponCodes || [];\n        const newCodes = this.couponCodesControl.value || [];\n        const addedCodes = newCodes.filter(c => !originalCodes.includes(c)).map(c => `+ ${c}`);\n        const removedCodes = originalCodes.filter(c => !newCodes.includes(c)).map(c => `- ${c}`);\n        return [...addedCodes, ...removedCodes];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderModificationSummaryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderModificationSummaryComponent, selector: \"vdr-order-modification-summary\", inputs: { orderSnapshot: \"orderSnapshot\", modifyOrderInput: \"modifyOrderInput\", addedLines: \"addedLines\", shippingAddressForm: \"shippingAddressForm\", billingAddressForm: \"billingAddressForm\", updatedShippingMethods: \"updatedShippingMethods\", couponCodesControl: \"couponCodesControl\" }, ngImport: i0, template: \"<vdr-labeled-data\\r\\n        *ngIf=\\\"modifyOrderInput.adjustOrderLines?.length\\\"\\r\\n        [label]=\\\"\\r\\n                    'order.modification-adjusting-lines'\\r\\n                        | translate : { count: modifyOrderInput.adjustOrderLines?.length }\\r\\n                \\\"\\r\\n>\\r\\n    <div *ngFor=\\\"let line of adjustedLines\\\" class=\\\"mb-1\\\">\\r\\n        {{ line }}\\r\\n    </div>\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data\\r\\n        *ngIf=\\\"modifyOrderInput.addItems?.length\\\"\\r\\n        [label]=\\\"\\r\\n                    'order.modification-adding-items'\\r\\n                        | translate : { count: modifyOrderInput.addItems?.length }\\r\\n                \\\"\\r\\n>\\r\\n    <div *ngFor=\\\"let item of addedLines\\\">\\r\\n        {{ item.productVariant.name }} x {{ item.quantity }}\\r\\n    </div>\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data\\r\\n        *ngIf=\\\"modifyOrderInput.surcharges?.length\\\"\\r\\n        [label]=\\\"\\r\\n                    'order.modification-adding-surcharges'\\r\\n                        | translate : { count: modifyOrderInput.surcharges?.length }\\r\\n                \\\"\\r\\n>\\r\\n    <div *ngFor=\\\"let surcharge of modifyOrderInput.surcharges\\\" class=\\\"mb-1\\\">\\r\\n        {{ surcharge.description }}: {{ surcharge.price | localeCurrency : orderSnapshot.currencyCode }}\\r\\n    </div>\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data\\r\\n        *ngIf=\\\"getModifiedFields(shippingAddressForm) as updatedShippingFields\\\"\\r\\n        [label]=\\\"'order.modification-updating-shipping-address' | translate\\\"\\r\\n>\\r\\n    {{ updatedShippingFields }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data\\r\\n        *ngIf=\\\"getModifiedFields(billingAddressForm) as updatedBillingFields\\\"\\r\\n        [label]=\\\"'order.modification-updating-billing-address' | translate\\\"\\r\\n>\\r\\n    {{ updatedBillingFields }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"couponCodeChanges.length\\\" [label]=\\\"'order.set-coupon-codes' | translate\\\">\\r\\n    <div *ngFor=\\\"let change of couponCodeChanges\\\" class=\\\"mb-1\\\">{{ change }}</div>\\r\\n</vdr-labeled-data>\\r\\n<ng-container *ngIf=\\\"getUpdatedShippingMethodLines() as updatedShippingMethods\\\">\\r\\n    <vdr-labeled-data *ngIf=\\\"updatedShippingMethods.length\\\" [label]=\\\"'order.shipping-method' | translate\\\">\\r\\n        <div *ngFor=\\\"let change of updatedShippingMethods\\\" class=\\\"mb-1\\\">{{ change }}</div>\\r\\n    </vdr-labeled-data>\\r\\n</ng-container>\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderModificationSummaryComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-modification-summary', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-labeled-data\\r\\n        *ngIf=\\\"modifyOrderInput.adjustOrderLines?.length\\\"\\r\\n        [label]=\\\"\\r\\n                    'order.modification-adjusting-lines'\\r\\n                        | translate : { count: modifyOrderInput.adjustOrderLines?.length }\\r\\n                \\\"\\r\\n>\\r\\n    <div *ngFor=\\\"let line of adjustedLines\\\" class=\\\"mb-1\\\">\\r\\n        {{ line }}\\r\\n    </div>\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data\\r\\n        *ngIf=\\\"modifyOrderInput.addItems?.length\\\"\\r\\n        [label]=\\\"\\r\\n                    'order.modification-adding-items'\\r\\n                        | translate : { count: modifyOrderInput.addItems?.length }\\r\\n                \\\"\\r\\n>\\r\\n    <div *ngFor=\\\"let item of addedLines\\\">\\r\\n        {{ item.productVariant.name }} x {{ item.quantity }}\\r\\n    </div>\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data\\r\\n        *ngIf=\\\"modifyOrderInput.surcharges?.length\\\"\\r\\n        [label]=\\\"\\r\\n                    'order.modification-adding-surcharges'\\r\\n                        | translate : { count: modifyOrderInput.surcharges?.length }\\r\\n                \\\"\\r\\n>\\r\\n    <div *ngFor=\\\"let surcharge of modifyOrderInput.surcharges\\\" class=\\\"mb-1\\\">\\r\\n        {{ surcharge.description }}: {{ surcharge.price | localeCurrency : orderSnapshot.currencyCode }}\\r\\n    </div>\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data\\r\\n        *ngIf=\\\"getModifiedFields(shippingAddressForm) as updatedShippingFields\\\"\\r\\n        [label]=\\\"'order.modification-updating-shipping-address' | translate\\\"\\r\\n>\\r\\n    {{ updatedShippingFields }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data\\r\\n        *ngIf=\\\"getModifiedFields(billingAddressForm) as updatedBillingFields\\\"\\r\\n        [label]=\\\"'order.modification-updating-billing-address' | translate\\\"\\r\\n>\\r\\n    {{ updatedBillingFields }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"couponCodeChanges.length\\\" [label]=\\\"'order.set-coupon-codes' | translate\\\">\\r\\n    <div *ngFor=\\\"let change of couponCodeChanges\\\" class=\\\"mb-1\\\">{{ change }}</div>\\r\\n</vdr-labeled-data>\\r\\n<ng-container *ngIf=\\\"getUpdatedShippingMethodLines() as updatedShippingMethods\\\">\\r\\n    <vdr-labeled-data *ngIf=\\\"updatedShippingMethods.length\\\" [label]=\\\"'order.shipping-method' | translate\\\">\\r\\n        <div *ngFor=\\\"let change of updatedShippingMethods\\\" class=\\\"mb-1\\\">{{ change }}</div>\\r\\n    </vdr-labeled-data>\\r\\n</ng-container>\" }]\n        }], propDecorators: { orderSnapshot: [{\n                type: Input\n            }], modifyOrderInput: [{\n                type: Input\n            }], addedLines: [{\n                type: Input\n            }], shippingAddressForm: [{\n                type: Input\n            }], billingAddressForm: [{\n                type: Input\n            }], updatedShippingMethods: [{\n                type: Input\n            }], couponCodesControl: [{\n                type: Input\n            }] } });\n\nvar OrderEditResultType;\n(function (OrderEditResultType) {\n    OrderEditResultType[OrderEditResultType[\"Refund\"] = 0] = \"Refund\";\n    OrderEditResultType[OrderEditResultType[\"Payment\"] = 1] = \"Payment\";\n    OrderEditResultType[OrderEditResultType[\"PriceUnchanged\"] = 2] = \"PriceUnchanged\";\n    OrderEditResultType[OrderEditResultType[\"Cancel\"] = 3] = \"Cancel\";\n})(OrderEditResultType || (OrderEditResultType = {}));\nclass OrderEditsPreviewDialogComponent {\n    get priceDifference() {\n        return this.order.totalWithTax - this.orderSnapshot.totalWithTax;\n    }\n    get amountToRefundTotal() {\n        return this.refundablePayments.reduce((total, payment) => total + payment.amountToRefundControl.value, 0);\n    }\n    ngOnInit() {\n        this.refundNote = this.modifyOrderInput.note || '';\n        this.refundablePayments = getRefundablePayments(this.order.payments || []);\n        this.refundablePayments.forEach(rp => {\n            rp.amountToRefundControl.addValidators(Validators.max(this.priceDifference * -1));\n        });\n        if (this.priceDifference < 0 && this.refundablePayments.length) {\n            this.onPaymentSelected(this.refundablePayments[0], true);\n        }\n    }\n    onPaymentSelected(payment, selected) {\n        if (selected) {\n            const outstandingRefundAmount = this.priceDifference * -1 -\n                this.refundablePayments\n                    .filter(p => p.id !== payment.id)\n                    .reduce((total, p) => total + p.amountToRefundControl.value, 0);\n            if (0 < outstandingRefundAmount) {\n                payment.amountToRefundControl.setValue(Math.min(outstandingRefundAmount, payment.refundableAmount));\n            }\n        }\n        else {\n            payment.amountToRefundControl.setValue(0);\n        }\n    }\n    refundsCoverDifference() {\n        return this.priceDifference * -1 === this.amountToRefundTotal;\n    }\n    cancel() {\n        this.resolveWith({\n            result: OrderEditResultType.Cancel,\n        });\n    }\n    submit() {\n        if (0 < this.priceDifference) {\n            this.resolveWith({\n                result: OrderEditResultType.Payment,\n            });\n        }\n        else if (this.priceDifference < 0) {\n            this.resolveWith({\n                result: OrderEditResultType.Refund,\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                refunds: this.refundablePayments\n                    .filter(rp => rp.selected && 0 < rp.amountToRefundControl.value)\n                    .map(payment => {\n                    return {\n                        reason: this.refundNote || this.modifyOrderInput.note,\n                        paymentId: payment.id,\n                        amount: payment.amountToRefundControl.value,\n                    };\n                }),\n            });\n        }\n        else {\n            this.resolveWith({\n                result: OrderEditResultType.PriceUnchanged,\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderEditsPreviewDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderEditsPreviewDialogComponent, selector: \"vdr-order-edits-preview-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'order.confirm-modifications' | translate }}</ng-template>\\r\\n<vdr-order-table\\r\\n    [order]=\\\"order\\\"\\r\\n    [orderLineCustomFields]=\\\"orderLineCustomFields\\\"\\r\\n    class=\\\"order-edits-preview-table\\\"\\r\\n></vdr-order-table>\\r\\n<div class=\\\"payments-wrapper mb-2\\\">\\r\\n    <div class=\\\"flex-spacer\\\">\\r\\n        <vdr-payment-for-refund-selector\\r\\n            *ngIf=\\\"priceDifference < 0\\\"\\r\\n            class=\\\"\\\"\\r\\n            [refundablePayments]=\\\"refundablePayments\\\"\\r\\n            (paymentSelected)=\\\"onPaymentSelected($event.payment, $event.selected)\\\"\\r\\n            [order]=\\\"order\\\"\\r\\n        ></vdr-payment-for-refund-selector>\\r\\n    </div>\\r\\n    <div class=\\\"flex-spacer\\\">\\r\\n        <vdr-card [title]=\\\"'order.modify-order' | translate\\\">\\r\\n            <vdr-order-modification-summary\\r\\n                [orderSnapshot]=\\\"orderSnapshot\\\"\\r\\n                [modifyOrderInput]=\\\"modifyOrderInput\\\"\\r\\n                [addedLines]=\\\"addedLines\\\"\\r\\n                [shippingAddressForm]=\\\"shippingAddressForm\\\"\\r\\n                [billingAddressForm]=\\\"billingAddressForm\\\"\\r\\n                [couponCodesControl]=\\\"couponCodesControl\\\"\\r\\n                [updatedShippingMethods]=\\\"updatedShippingMethods\\\"\\r\\n            ></vdr-order-modification-summary>\\r\\n            <vdr-labeled-data [label]=\\\"'order.note' | translate\\\">\\r\\n                {{ modifyOrderInput.note || '-' }}\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-form-field\\r\\n                [label]=\\\"'order.refund-cancellation-reason' | translate\\\"\\r\\n                *ngIf=\\\"priceDifference < 0\\\"\\r\\n            >\\r\\n                <textarea [(ngModel)]=\\\"refundNote\\\" name=\\\"refundNote\\\" required></textarea>\\r\\n            </vdr-form-field>\\r\\n        </vdr-card>\\r\\n    </div>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <div>\\r\\n        <div class=\\\"errors\\\">\\r\\n            <clr-alert\\r\\n                class=\\\"mb-1\\\"\\r\\n                *ngIf=\\\"priceDifference < 0 && !refundsCoverDifference()\\\"\\r\\n                [clrAlertType]=\\\"'danger'\\\"\\r\\n                [clrAlertClosable]=\\\"false\\\"\\r\\n            >\\r\\n                <clr-alert-item>\\r\\n                    {{ 'order.refund-total-warning' | translate }}\\r\\n                </clr-alert-item>\\r\\n            </clr-alert>\\r\\n        </div>\\r\\n        <div class=\\\"modal-buttons\\\">\\r\\n            <clr-alert class=\\\"\\\" [clrAlertType]=\\\"'primary'\\\" [clrAlertClosable]=\\\"false\\\">\\r\\n                <clr-alert-item>\\r\\n                    {{ 'order.modify-order-price-difference' | translate }}\\r\\n                    {{ 0 < priceDifference ? '+' : ''\\r\\n                    }}{{ priceDifference | localeCurrency : order.currencyCode }}\\r\\n                </clr-alert-item>\\r\\n            </clr-alert>\\r\\n            <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">\\r\\n                {{ 'common.cancel' | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n                type=\\\"submit\\\"\\r\\n                (click)=\\\"submit()\\\"\\r\\n                [disabled]=\\\"priceDifference < 0 ? !refundsCoverDifference() : false\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n            >\\r\\n                {{ 'common.confirm' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\", styles: [\"::ng-deep .order-edits-preview-table .table-wrapper{max-width:initial!important}.payments-wrapper{display:flex;gap:calc(var(--space-unit) * 2)}.modal-buttons{display:flex;justify-content:flex-end;gap:.6rem;gap:var(--clr-modal-footer-gap, .6rem)}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertLightweight\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: OrderTableComponent, selector: \"vdr-order-table\", inputs: [\"order\", \"orderLineCustomFields\", \"isDraft\"], outputs: [\"adjust\", \"remove\"] }, { kind: \"component\", type: PaymentForRefundSelectorComponent, selector: \"vdr-payment-for-refund-selector\", inputs: [\"refundablePayments\", \"order\"], outputs: [\"paymentSelected\"] }, { kind: \"component\", type: OrderModificationSummaryComponent, selector: \"vdr-order-modification-summary\", inputs: [\"orderSnapshot\", \"modifyOrderInput\", \"addedLines\", \"shippingAddressForm\", \"billingAddressForm\", \"updatedShippingMethods\", \"couponCodesControl\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderEditsPreviewDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-edits-preview-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'order.confirm-modifications' | translate }}</ng-template>\\r\\n<vdr-order-table\\r\\n    [order]=\\\"order\\\"\\r\\n    [orderLineCustomFields]=\\\"orderLineCustomFields\\\"\\r\\n    class=\\\"order-edits-preview-table\\\"\\r\\n></vdr-order-table>\\r\\n<div class=\\\"payments-wrapper mb-2\\\">\\r\\n    <div class=\\\"flex-spacer\\\">\\r\\n        <vdr-payment-for-refund-selector\\r\\n            *ngIf=\\\"priceDifference < 0\\\"\\r\\n            class=\\\"\\\"\\r\\n            [refundablePayments]=\\\"refundablePayments\\\"\\r\\n            (paymentSelected)=\\\"onPaymentSelected($event.payment, $event.selected)\\\"\\r\\n            [order]=\\\"order\\\"\\r\\n        ></vdr-payment-for-refund-selector>\\r\\n    </div>\\r\\n    <div class=\\\"flex-spacer\\\">\\r\\n        <vdr-card [title]=\\\"'order.modify-order' | translate\\\">\\r\\n            <vdr-order-modification-summary\\r\\n                [orderSnapshot]=\\\"orderSnapshot\\\"\\r\\n                [modifyOrderInput]=\\\"modifyOrderInput\\\"\\r\\n                [addedLines]=\\\"addedLines\\\"\\r\\n                [shippingAddressForm]=\\\"shippingAddressForm\\\"\\r\\n                [billingAddressForm]=\\\"billingAddressForm\\\"\\r\\n                [couponCodesControl]=\\\"couponCodesControl\\\"\\r\\n                [updatedShippingMethods]=\\\"updatedShippingMethods\\\"\\r\\n            ></vdr-order-modification-summary>\\r\\n            <vdr-labeled-data [label]=\\\"'order.note' | translate\\\">\\r\\n                {{ modifyOrderInput.note || '-' }}\\r\\n            </vdr-labeled-data>\\r\\n            <vdr-form-field\\r\\n                [label]=\\\"'order.refund-cancellation-reason' | translate\\\"\\r\\n                *ngIf=\\\"priceDifference < 0\\\"\\r\\n            >\\r\\n                <textarea [(ngModel)]=\\\"refundNote\\\" name=\\\"refundNote\\\" required></textarea>\\r\\n            </vdr-form-field>\\r\\n        </vdr-card>\\r\\n    </div>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <div>\\r\\n        <div class=\\\"errors\\\">\\r\\n            <clr-alert\\r\\n                class=\\\"mb-1\\\"\\r\\n                *ngIf=\\\"priceDifference < 0 && !refundsCoverDifference()\\\"\\r\\n                [clrAlertType]=\\\"'danger'\\\"\\r\\n                [clrAlertClosable]=\\\"false\\\"\\r\\n            >\\r\\n                <clr-alert-item>\\r\\n                    {{ 'order.refund-total-warning' | translate }}\\r\\n                </clr-alert-item>\\r\\n            </clr-alert>\\r\\n        </div>\\r\\n        <div class=\\\"modal-buttons\\\">\\r\\n            <clr-alert class=\\\"\\\" [clrAlertType]=\\\"'primary'\\\" [clrAlertClosable]=\\\"false\\\">\\r\\n                <clr-alert-item>\\r\\n                    {{ 'order.modify-order-price-difference' | translate }}\\r\\n                    {{ 0 < priceDifference ? '+' : ''\\r\\n                    }}{{ priceDifference | localeCurrency : order.currencyCode }}\\r\\n                </clr-alert-item>\\r\\n            </clr-alert>\\r\\n            <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">\\r\\n                {{ 'common.cancel' | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n                type=\\\"submit\\\"\\r\\n                (click)=\\\"submit()\\\"\\r\\n                [disabled]=\\\"priceDifference < 0 ? !refundsCoverDifference() : false\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n            >\\r\\n                {{ 'common.confirm' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\", styles: [\"::ng-deep .order-edits-preview-table .table-wrapper{max-width:initial!important}.payments-wrapper{display:flex;gap:calc(var(--space-unit) * 2)}.modal-buttons{display:flex;justify-content:flex-end;gap:.6rem;gap:var(--clr-modal-footer-gap, .6rem)}\\n\"] }]\n        }] });\n\nclass OrderEditorComponent extends TypedBaseDetailComponent {\n    constructor(dataService, notificationService, modalService, orderTransitionService, changeDetectorRef) {\n        super();\n        this.dataService = dataService;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.orderTransitionService = orderTransitionService;\n        this.changeDetectorRef = changeDetectorRef;\n        this.detailForm = new UntypedFormGroup({});\n        this.couponCodesControl = new FormControl([]);\n        this.modifyOrderInput = {\n            dryRun: true,\n            orderId: '',\n            addItems: [],\n            adjustOrderLines: [],\n            surcharges: [],\n            note: '',\n            refunds: [],\n            updateShippingAddress: {},\n            updateBillingAddress: {},\n        };\n        this.surchargeForm = new FormGroup({\n            description: new FormControl('', Validators.minLength(1)),\n            sku: new FormControl(''),\n            price: new FormControl(0),\n            priceIncludesTax: new FormControl(true),\n            taxRate: new FormControl(0),\n            taxDescription: new FormControl(''),\n        });\n        this.shippingAddressForm = new FormGroup({\n            fullName: new FormControl(''),\n            company: new FormControl(''),\n            streetLine1: new FormControl(''),\n            streetLine2: new FormControl(''),\n            city: new FormControl(''),\n            province: new FormControl(''),\n            postalCode: new FormControl(''),\n            countryCode: new FormControl(''),\n            phoneNumber: new FormControl(''),\n        });\n        this.billingAddressForm = new FormGroup({\n            fullName: new FormControl(''),\n            company: new FormControl(''),\n            streetLine1: new FormControl(''),\n            streetLine2: new FormControl(''),\n            city: new FormControl(''),\n            province: new FormControl(''),\n            postalCode: new FormControl(''),\n            countryCode: new FormControl(''),\n            phoneNumber: new FormControl(''),\n        });\n        this.note = '';\n        this.recalculateShipping = true;\n        this.editingShippingAddress = false;\n        this.editingBillingAddress = false;\n        this.updatedShippingMethods = {};\n        this.addedVariants = new Map();\n    }\n    ngOnInit() {\n        this.init();\n        this.addressCustomFields = this.getCustomFieldConfig('Address');\n        this.modifyOrderInput.orderId = this.route.snapshot.paramMap.get('id');\n        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');\n        this.entity$.pipe(take(1)).subscribe(order => {\n            this.orderSnapshot = this.createOrderSnapshot(order);\n            if (order.couponCodes.length) {\n                this.couponCodesControl.setValue(order.couponCodes);\n            }\n            this.surchargeForm.reset();\n            for (const [name, control] of Object.entries(this.shippingAddressForm.controls)) {\n                control.setValue(order.shippingAddress?.[name]);\n            }\n            this.addAddressCustomFieldsFormGroup(this.shippingAddressForm, order.shippingAddress);\n            for (const [name, control] of Object.entries(this.billingAddressForm.controls)) {\n                control.setValue(order.billingAddress?.[name]);\n            }\n            this.addAddressCustomFieldsFormGroup(this.billingAddressForm, order.billingAddress);\n            this.orderLineCustomFieldsFormArray = new UntypedFormArray([]);\n            for (const line of order.lines) {\n                const formGroup = new UntypedFormGroup({});\n                for (const { name } of this.orderLineCustomFields) {\n                    formGroup.addControl(name, new UntypedFormControl(line.customFields[name]));\n                }\n                formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n                    let modifyRow = this.modifyOrderInput.adjustOrderLines.find(l => l.orderLineId === line.id);\n                    if (!modifyRow) {\n                        modifyRow = {\n                            orderLineId: line.id,\n                            quantity: line.quantity,\n                        };\n                        this.modifyOrderInput.adjustOrderLines.push(modifyRow);\n                    }\n                    if (this.orderLineCustomFields.length) {\n                        modifyRow.customFields = value;\n                    }\n                });\n                this.orderLineCustomFieldsFormArray.push(formGroup);\n            }\n        });\n        this.addItemCustomFieldsFormArray = new UntypedFormArray([]);\n        this.addItemCustomFieldsForm = new UntypedFormGroup({});\n        for (const customField of this.orderLineCustomFields) {\n            this.addItemCustomFieldsForm.addControl(customField.name, new UntypedFormControl());\n        }\n        this.availableCountries$ = this.dataService.settings\n            .getAvailableCountries()\n            .mapSingle(result => result.countries.items)\n            .pipe(shareReplay(1));\n        this.dataService.order\n            .getOrderHistory(this.id, {\n            take: 1,\n            sort: {\n                createdAt: SortOrder.DESC,\n            },\n            filter: { type: { eq: HistoryEntryType.ORDER_STATE_TRANSITION } },\n        })\n            .single$.subscribe(({ order }) => {\n            this.previousState = order?.history.items[0].data.from;\n        });\n        this.uiLanguage$ = this.dataService.client\n            .uiState()\n            .stream$.pipe(map(({ uiState }) => uiState.language));\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    get addedLines() {\n        const getSinglePriceValue = (price) => price.__typename === 'SinglePrice' ? price.value : 0;\n        return (this.modifyOrderInput.addItems || [])\n            .map(row => {\n            const variantInfo = this.addedVariants.get(row.productVariantId);\n            if (variantInfo) {\n                return {\n                    id: this.getIdForAddedItem(row),\n                    featuredAsset: variantInfo.productAsset,\n                    productVariant: {\n                        id: variantInfo.productVariantId,\n                        name: variantInfo.productVariantName,\n                        sku: variantInfo.sku,\n                    },\n                    unitPrice: getSinglePriceValue(variantInfo.price),\n                    unitPriceWithTax: getSinglePriceValue(variantInfo.priceWithTax),\n                    quantity: row.quantity,\n                };\n            }\n        })\n            .filter(notNullOrUndefined);\n    }\n    getIdForAddedItem(row) {\n        return `added-${row.productVariantId}-${JSON.stringify(row.customFields || {})}`;\n    }\n    transitionToPriorState(order) {\n        this.orderTransitionService\n            .transitionToPreModifyingState(order.id, order.nextStates)\n            .subscribe(result => {\n            this.router.navigate(['..'], { relativeTo: this.route });\n        });\n    }\n    hasModifications() {\n        const { addItems, adjustOrderLines, surcharges } = this.modifyOrderInput;\n        return (!!addItems?.length ||\n            !!surcharges?.length ||\n            !!adjustOrderLines?.length ||\n            (this.shippingAddressForm.dirty && this.shippingAddressForm.valid) ||\n            (this.billingAddressForm.dirty && this.billingAddressForm.valid) ||\n            this.couponCodesControl.dirty ||\n            Object.entries(this.updatedShippingMethods).length > 0);\n    }\n    isLineModified(line) {\n        return !!this.modifyOrderInput.adjustOrderLines?.find(l => l.orderLineId === line.id && l.quantity !== line.quantity);\n    }\n    getInitialLineQuantity(lineId) {\n        const adjustedLine = this.modifyOrderInput.adjustOrderLines?.find(l => l.orderLineId === lineId);\n        if (adjustedLine) {\n            return adjustedLine.quantity;\n        }\n        const addedLine = this.modifyOrderInput.addItems?.find(l => this.getIdForAddedItem(l) === lineId);\n        if (addedLine) {\n            return addedLine.quantity ?? 1;\n        }\n        const line = this.orderSnapshot.lines.find(l => l.id === lineId);\n        return line ? line.quantity : 1;\n    }\n    updateLineQuantity(line, quantity) {\n        const { adjustOrderLines } = this.modifyOrderInput;\n        if (this.isAddedLine(line)) {\n            const row = this.modifyOrderInput.addItems?.find(l => l.productVariantId === line.productVariant.id);\n            if (row) {\n                row.quantity = +quantity;\n            }\n        }\n        else {\n            let row = adjustOrderLines?.find(l => l.orderLineId === line.id);\n            if (row && +quantity === line.quantity) {\n                // Remove the modification if the quantity is the same as\n                // the original order\n                adjustOrderLines?.splice(adjustOrderLines?.indexOf(row), 1);\n            }\n            if (!row) {\n                row = { orderLineId: line.id, quantity: +quantity };\n                adjustOrderLines?.push(row);\n            }\n            row.quantity = +quantity;\n        }\n    }\n    isAddedLine(line) {\n        return line.id.startsWith('added-');\n    }\n    updateAddedItemQuantity(item, quantity) {\n        const row = this.modifyOrderInput.addItems?.find(l => l.productVariantId === item.productVariant.id);\n        if (row) {\n            row.quantity = +quantity;\n        }\n    }\n    trackByProductVariantId(index, item) {\n        return item.productVariant.id;\n    }\n    getSelectedItemPrice(result) {\n        switch (result?.priceWithTax.__typename) {\n            case 'SinglePrice':\n                return result.priceWithTax.value;\n            default:\n                return 0;\n        }\n    }\n    addItemToOrder(result) {\n        if (!result) {\n            return;\n        }\n        const customFields = this.orderLineCustomFields.length\n            ? this.addItemCustomFieldsForm.value\n            : undefined;\n        let row = this.modifyOrderInput.addItems?.find(l => this.isMatchingAddItemRow(l, result, customFields));\n        if (!row) {\n            row = { productVariantId: result.productVariantId, quantity: 1 };\n            if (customFields) {\n                row.customFields = customFields;\n            }\n            this.modifyOrderInput.addItems?.push(row);\n        }\n        else {\n            row.quantity++;\n        }\n        if (customFields) {\n            const formGroup = new UntypedFormGroup({});\n            for (const [key, value] of Object.entries(customFields)) {\n                formGroup.addControl(key, new UntypedFormControl(value));\n            }\n            this.addItemCustomFieldsFormArray.push(formGroup);\n            formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n                if (row) {\n                    row.customFields = value;\n                }\n            });\n        }\n        this.addItemCustomFieldsForm.reset({});\n        this.addItemSelectedVariant = undefined;\n        this.addedVariants.set(result.productVariantId, result);\n    }\n    getShippingLineDetails(shippingLine) {\n        const updatedMethod = this.updatedShippingMethods[shippingLine.id];\n        if (updatedMethod) {\n            return {\n                name: updatedMethod.name || updatedMethod.code,\n                price: updatedMethod.priceWithTax,\n            };\n        }\n        else {\n            return {\n                name: shippingLine.shippingMethod.name || shippingLine.shippingMethod.code,\n                price: shippingLine.discountedPriceWithTax,\n            };\n        }\n    }\n    setShippingMethod(shippingLineId) {\n        const currentShippingMethod = this.updatedShippingMethods[shippingLineId] ??\n            this.entity?.shippingLines.find(l => l.id === shippingLineId)?.shippingMethod;\n        if (!currentShippingMethod) {\n            return;\n        }\n        this.dataService.order\n            .getDraftOrderEligibleShippingMethods(this.id)\n            .mapSingle(({ eligibleShippingMethodsForDraftOrder }) => eligibleShippingMethodsForDraftOrder)\n            .pipe(switchMap(methods => this.modalService\n            .fromComponent(SelectShippingMethodDialogComponent, {\n            locals: {\n                eligibleShippingMethods: methods,\n                currencyCode: this.entity?.currencyCode,\n                currentSelectionId: currentShippingMethod.id,\n            },\n        })\n            .pipe(map(result => {\n            if (result) {\n                return methods.find(method => method.id === result);\n            }\n        }))))\n            .subscribe(result => {\n            if (result) {\n                this.updatedShippingMethods[shippingLineId] = result;\n                this.changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    isMatchingAddItemRow(row, result, customFields) {\n        return (row.productVariantId === result.productVariantId &&\n            JSON.stringify(row.customFields) === JSON.stringify(customFields));\n    }\n    removeAddedItem(id) {\n        this.modifyOrderInput.addItems = this.modifyOrderInput.addItems?.filter(l => {\n            const itemId = this.getIdForAddedItem(l);\n            return itemId !== id;\n        });\n    }\n    getSurchargePrices(surcharge) {\n        const priceWithTax = surcharge.priceIncludesTax\n            ? surcharge.price\n            : Math.round(surcharge.price * ((100 + (surcharge.taxRate || 0)) / 100));\n        const price = surcharge.priceIncludesTax\n            ? Math.round(surcharge.price / ((100 + (surcharge.taxRate || 0)) / 100))\n            : surcharge.price;\n        return {\n            price,\n            priceWithTax,\n        };\n    }\n    addSurcharge(value) {\n        this.modifyOrderInput.surcharges?.push(value);\n        this.surchargeForm.reset({\n            price: 0,\n            priceIncludesTax: true,\n            taxRate: 0,\n        });\n    }\n    removeSurcharge(index) {\n        this.modifyOrderInput.surcharges?.splice(index, 1);\n    }\n    previewAndModify(order) {\n        const modifyOrderInput = {\n            ...this.modifyOrderInput,\n            adjustOrderLines: this.modifyOrderInput.adjustOrderLines.map(line => transformRelationCustomFieldInputs(simpleDeepClone(line), this.orderLineCustomFields)),\n        };\n        const input = {\n            ...modifyOrderInput,\n            ...(this.billingAddressForm.dirty ? { updateBillingAddress: this.billingAddressForm.value } : {}),\n            ...(this.shippingAddressForm.dirty\n                ? { updateShippingAddress: this.shippingAddressForm.value }\n                : {}),\n            dryRun: true,\n            couponCodes: this.couponCodesControl.dirty ? this.couponCodesControl.value : undefined,\n            note: this.note ?? '',\n            options: {\n                recalculateShipping: this.recalculateShipping,\n            },\n        };\n        if (Object.entries(this.updatedShippingMethods).length) {\n            input.shippingMethodIds = order.shippingLines.map(l => this.updatedShippingMethods[l.id]\n                ? this.updatedShippingMethods[l.id].id\n                : l.shippingMethod.id);\n        }\n        this.dataService.order\n            .modifyOrder(input)\n            .pipe(switchMap(({ modifyOrder }) => {\n            switch (modifyOrder.__typename) {\n                case 'Order':\n                    return this.modalService.fromComponent(OrderEditsPreviewDialogComponent, {\n                        size: 'xl',\n                        closable: false,\n                        locals: {\n                            order: modifyOrder,\n                            orderSnapshot: this.orderSnapshot,\n                            orderLineCustomFields: this.orderLineCustomFields,\n                            modifyOrderInput: input,\n                            addedLines: this.addedLines,\n                            shippingAddressForm: this.shippingAddressForm,\n                            billingAddressForm: this.billingAddressForm,\n                            couponCodesControl: this.couponCodesControl,\n                            updatedShippingMethods: this.updatedShippingMethods,\n                        },\n                    });\n                case 'InsufficientStockError':\n                case 'NegativeQuantityError':\n                case 'NoChangesSpecifiedError':\n                case 'OrderLimitError':\n                case 'OrderModificationStateError':\n                case 'PaymentMethodMissingError':\n                case 'RefundPaymentIdMissingError':\n                case 'CouponCodeLimitError':\n                case 'CouponCodeExpiredError':\n                case 'IneligibleShippingMethodError':\n                case 'CouponCodeInvalidError': {\n                    this.notificationService.error(modifyOrder.message);\n                    return of(false);\n                }\n                case null:\n                case undefined:\n                    return of(false);\n                default:\n                    assertNever(modifyOrder);\n            }\n        }), switchMap(result => {\n            if (!result || result.result === OrderEditResultType.Cancel) {\n                // re-fetch so that the preview values get overwritten in the cache.\n                return this.dataService.order.getOrder(this.id).mapSingle(() => false);\n            }\n            else {\n                // Do the modification\n                const wetRunInput = {\n                    ...input,\n                    dryRun: false,\n                };\n                if (result.result === OrderEditResultType.Refund) {\n                    wetRunInput.refunds = result.refunds;\n                }\n                return this.dataService.order.modifyOrder(wetRunInput).pipe(switchMap(({ modifyOrder }) => {\n                    if (modifyOrder.__typename === 'Order') {\n                        const priceDelta = modifyOrder.totalWithTax - this.orderSnapshot.totalWithTax;\n                        const nextState = 0 < priceDelta ? 'ArrangingAdditionalPayment' : this.previousState;\n                        return this.dataService.order\n                            .transitionToState(order.id, nextState)\n                            .pipe(mapTo(true));\n                    }\n                    else {\n                        this.notificationService.error(modifyOrder.message);\n                        return EMPTY;\n                    }\n                }));\n            }\n        }))\n            .subscribe(result => {\n            if (result) {\n                this.router.navigate(['../'], { relativeTo: this.route });\n            }\n        });\n    }\n    addAddressCustomFieldsFormGroup(parentFormGroup, address) {\n        if (address && this.addressCustomFields.length) {\n            const addressCustomFieldsFormGroup = new UntypedFormGroup({});\n            for (const customFieldDef of this.addressCustomFields) {\n                const name = customFieldDef.name;\n                const value = address.customFields?.[name];\n                addressCustomFieldsFormGroup.addControl(name, new UntypedFormControl(value));\n            }\n            parentFormGroup.addControl('customFields', addressCustomFieldsFormGroup);\n        }\n    }\n    createOrderSnapshot(order) {\n        return {\n            totalWithTax: order.totalWithTax,\n            currencyCode: order.currencyCode,\n            couponCodes: order.couponCodes,\n            lines: [...order.lines].map(line => ({ ...line })),\n            shippingLines: [...order.shippingLines].map(line => ({ ...line })),\n        };\n    }\n    setFormValues(entity, languageCode) {\n        /* not used */\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderEditorComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: OrderTransitionService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderEditorComponent, selector: \"vdr-order-editor\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar *ngIf=\\\"entity$ | async as order\\\">\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-align-items-center\\\"></div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"transitionToPriorState(order)\\\">\\r\\n                {{ 'order.cancel-modification' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-page-detail-layout *ngIf=\\\"entity as order\\\">\\r\\n    <vdr-page-detail-sidebar>\\r\\n        <vdr-card [title]=\\\"'order.modification-summary' | translate\\\">\\r\\n            <vdr-order-modification-summary\\r\\n                [orderSnapshot]=\\\"orderSnapshot\\\"\\r\\n                [modifyOrderInput]=\\\"modifyOrderInput\\\"\\r\\n                [addedLines]=\\\"addedLines\\\"\\r\\n                [shippingAddressForm]=\\\"shippingAddressForm\\\"\\r\\n                [billingAddressForm]=\\\"billingAddressForm\\\"\\r\\n                [couponCodesControl]=\\\"couponCodesControl\\\"\\r\\n                [updatedShippingMethods]=\\\"updatedShippingMethods\\\"\\r\\n            ></vdr-order-modification-summary>\\r\\n\\r\\n            <div *ngIf=\\\"!hasModifications()\\\" class=\\\"no-modifications\\\">\\r\\n                {{ 'order.no-modifications-made' | translate }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"summary-controls\\\">\\r\\n                <vdr-form-field [label]=\\\"'order.note' | translate\\\">\\r\\n                    <textarea\\r\\n                        [(ngModel)]=\\\"note\\\"\\r\\n                        name=\\\"note\\\"\\r\\n                        required\\r\\n                        [disabled]=\\\"!hasModifications()\\\"\\r\\n                    ></textarea>\\r\\n                </vdr-form-field>\\r\\n                <label class=\\\"flex items-center\\\">\\r\\n                    <input\\r\\n                        type=\\\"checkbox\\\"\\r\\n                        [(ngModel)]=\\\"recalculateShipping\\\"\\r\\n                        [disabled]=\\\"!hasModifications()\\\"\\r\\n                    />\\r\\n                    <div class=\\\"ml-1\\\">{{ 'order.modification-recalculate-shipping' | translate }}</div>\\r\\n                </label>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary mt-2\\\"\\r\\n                    [disabled]=\\\"!hasModifications()\\\"\\r\\n                    (click)=\\\"previewAndModify(order)\\\"\\r\\n                >\\r\\n                    {{ 'order.preview-changes' | translate }}\\r\\n                </button>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.set-coupon-codes' | translate\\\">\\r\\n            <vdr-coupon-code-selector [control]=\\\"couponCodesControl\\\"></vdr-coupon-code-selector>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.shipping-address' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    [title]=\\\"'order.edit-shipping-address' | translate\\\"\\r\\n                    (click)=\\\"editingShippingAddress = !editingShippingAddress\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-formatted-address\\r\\n                *ngIf=\\\"!editingShippingAddress\\\"\\r\\n                [address]=\\\"shippingAddressForm.value\\\"\\r\\n            ></vdr-formatted-address>\\r\\n            <vdr-address-form\\r\\n                *ngIf=\\\"editingShippingAddress\\\"\\r\\n                [formGroup]=\\\"shippingAddressForm\\\"\\r\\n                [availableCountries]=\\\"availableCountries$ | async\\\"\\r\\n                [customFields]=\\\"addressCustomFields\\\"\\r\\n            ></vdr-address-form>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.billing-address' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    [title]=\\\"'order.edit-billing-address' | translate\\\"\\r\\n                    (click)=\\\"editingBillingAddress = !editingBillingAddress\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-formatted-address\\r\\n                *ngIf=\\\"!editingBillingAddress\\\"\\r\\n                [address]=\\\"billingAddressForm.value\\\"\\r\\n            ></vdr-formatted-address>\\r\\n            <vdr-address-form\\r\\n                *ngIf=\\\"editingBillingAddress\\\"\\r\\n                [formGroup]=\\\"billingAddressForm\\\"\\r\\n                [availableCountries]=\\\"availableCountries$ | async\\\"\\r\\n                [customFields]=\\\"addressCustomFields\\\"\\r\\n            ></vdr-address-form>\\r\\n        </vdr-card>\\r\\n    </vdr-page-detail-sidebar>\\r\\n\\r\\n    <vdr-page-block>\\r\\n        <vdr-card [paddingX]=\\\"false\\\">\\r\\n            <vdr-data-table-2 id=\\\"modify-order\\\" class=\\\"order-table\\\" [items]=\\\"order.lines.concat(addedLines)\\\">\\r\\n                <!-- Here we define all the available columns -->\\r\\n                <vdr-dt2-column id=\\\"id\\\" [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        {{ line.id }}\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column\\r\\n                    id=\\\"created-at\\\"\\r\\n                    [heading]=\\\"'common.created-at' | translate\\\"\\r\\n                    [hiddenByDefault]=\\\"true\\\"\\r\\n                >\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        {{ line.createdAt | localeDate : 'short' }}\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column\\r\\n                    id=\\\"updated-at\\\"\\r\\n                    [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n                    [hiddenByDefault]=\\\"true\\\"\\r\\n                >\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        {{ line.updatedAt | localeDate : 'short' }}\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        <div class=\\\"image-placeholder\\\">\\r\\n                            <img\\r\\n                                *ngIf=\\\"line.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                                [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                            />\\r\\n                            <ng-template #imagePlaceholder>\\r\\n                                <div class=\\\"placeholder\\\">\\r\\n                                    <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column\\r\\n                    id=\\\"product-name\\\"\\r\\n                    [heading]=\\\"'order.product-name' | translate\\\"\\r\\n                    [optional]=\\\"false\\\"\\r\\n                >\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        {{ line.productVariant.name }}\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column id=\\\"product-sku\\\" [heading]=\\\"'order.product-sku' | translate\\\">\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        {{ line.productVariant.sku }}\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column id=\\\"unit-price\\\" [heading]=\\\"'order.unit-price' | translate\\\">\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        <div class=\\\"text-center\\\">\\r\\n                            <div>{{ line.unitPriceWithTax | localeCurrency : order.currencyCode }}</div>\\r\\n                            <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                                {{ line.unitPrice | localeCurrency : order.currencyCode }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column id=\\\"quantity\\\" [heading]=\\\"'order.quantity' | translate\\\" [optional]=\\\"false\\\">\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"draft-qty mr-1\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            [value]=\\\"getInitialLineQuantity(line.id)\\\"\\r\\n                            (input)=\\\"updateLineQuantity(line, $event.target.value)\\\"\\r\\n                        />\\r\\n                        <button\\r\\n                            class=\\\"button-small\\\"\\r\\n                            *ngIf=\\\"isAddedLine(line)\\\"\\r\\n                            (click)=\\\"removeAddedItem(line.id)\\\"\\r\\n                        >\\r\\n                            <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                        </button>\\r\\n                        <vdr-line-refunds [line]=\\\"line\\\" [payments]=\\\"order.payments\\\"></vdr-line-refunds>\\r\\n                        <vdr-line-fulfillment\\r\\n                            [line]=\\\"line\\\"\\r\\n                            [allOrderFulfillments]=\\\"order.fulfillments\\\"\\r\\n                            [orderState]=\\\"order.state\\\"\\r\\n                        ></vdr-line-fulfillment>\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column\\r\\n                    *ngFor=\\\"let customField of orderLineCustomFields\\\"\\r\\n                    [id]=\\\"customField.name\\\"\\r\\n                    [heading]=\\\"customField | customFieldLabel : (uiLanguage$ | async)\\\"\\r\\n                    [hiddenByDefault]=\\\"true\\\"\\r\\n                >\\r\\n                    <ng-template let-line=\\\"item\\\" let-index=\\\"index\\\">\\r\\n                        <vdr-custom-field-control\\r\\n                            [compact]=\\\"true\\\"\\r\\n                            [entityName]=\\\"'OrderLine'\\\"\\r\\n                            [customField]=\\\"customField\\\"\\r\\n                            [customFieldsFormGroup]=\\\"orderLineCustomFieldsFormArray.at(index)\\\"\\r\\n                        />\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n            </vdr-data-table-2>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.add-item-to-order' | translate\\\">\\r\\n            <vdr-product-variant-selector class=\\\"mb-4\\\" (productSelected)=\\\"addItemSelectedVariant = $event\\\">\\r\\n            </vdr-product-variant-selector>\\r\\n            <div class=\\\"flex\\\">\\r\\n                <div>\\r\\n                    <div *ngIf=\\\"addItemSelectedVariant\\\" class=\\\"flex mb-4\\\">\\r\\n                        <img\\r\\n                            *ngIf=\\\"addItemSelectedVariant.productAsset as asset\\\"\\r\\n                            [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                            class=\\\"mr-4 add-item-thumb\\\"\\r\\n                        />\\r\\n                        <div>\\r\\n                            <strong class=\\\"mr-4\\\">{{ addItemSelectedVariant.productVariantName }}</strong>\\r\\n                            <small>{{ addItemSelectedVariant.sku }}</small>\\r\\n                            <div>\\r\\n                                {{\\r\\n                                    getSelectedItemPrice(addItemSelectedVariant)\\r\\n                                        | localeCurrency : order.currencyCode\\r\\n                                }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-grid\\\" *ngIf=\\\"addItemSelectedVariant\\\">\\r\\n                        <ng-container *ngFor=\\\"let customField of orderLineCustomFields\\\">\\r\\n                            <vdr-custom-field-control\\r\\n                                [readonly]=\\\"!addItemSelectedVariant\\\"\\r\\n                                [customField]=\\\"customField\\\"\\r\\n                                [customFieldsFormGroup]=\\\"addItemCustomFieldsForm\\\"\\r\\n                                entityName=\\\"OrderLine\\\"\\r\\n                                [compact]=\\\"true\\\"\\r\\n                            ></vdr-custom-field-control>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"flex-spacer\\\"></div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        *ngIf=\\\"addItemSelectedVariant\\\"\\r\\n                        class=\\\"btn btn-secondary\\\"\\r\\n                        [disabled]=\\\"!addItemSelectedVariant || addItemCustomFieldsForm.invalid\\\"\\r\\n                        (click)=\\\"addItemToOrder(addItemSelectedVariant)\\\"\\r\\n                    >\\r\\n                        {{ 'order.add-item-to-order' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.shipping' | translate\\\">\\r\\n            <div *ngFor=\\\"let shippingLine of order.shippingLines\\\" class=\\\"flex items-center\\\">\\r\\n                <ng-container *ngIf=\\\"getShippingLineDetails(shippingLine) as details\\\">\\r\\n                    <div>{{ details.name }}:</div>\\r\\n                    <div class=\\\"mx-1\\\">\\r\\n                        {{ details.price | localeCurrency : order.currencyCode }}\\r\\n                    </div>\\r\\n                    <button class=\\\"button-small\\\" (click)=\\\"setShippingMethod(shippingLine.id)\\\">\\r\\n                        {{ 'order.set-shipping-method' | translate }}\\r\\n                    </button>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.add-surcharge' | translate\\\">\\r\\n            <form [formGroup]=\\\"surchargeForm\\\" (submit)=\\\"addSurcharge(surchargeForm.value)\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.description' | translate\\\" for=\\\"description\\\"\\r\\n                        ><input id=\\\"description\\\" type=\\\"text\\\" formControlName=\\\"description\\\"\\r\\n                    /></vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'order.product-sku' | translate\\\" for=\\\"sku\\\"\\r\\n                        ><input id=\\\"sku\\\" type=\\\"text\\\" formControlName=\\\"sku\\\"\\r\\n                    /></vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.price' | translate\\\" for=\\\"price\\\">\\r\\n                        <vdr-currency-input\\r\\n                            [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                            id=\\\"price\\\"\\r\\n                            formControlName=\\\"price\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            'catalog.price-includes-tax-at'\\r\\n                                | translate : { rate: surchargeForm.get('taxRate')?.value ?? 0 }\\r\\n                        \\\"\\r\\n                        for=\\\"priceIncludesTax\\\"\\r\\n                        ><input\\r\\n                            id=\\\"priceIncludesTax\\\"\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            formControlName=\\\"priceIncludesTax\\\"\\r\\n                    /></vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'order.tax-rate' | translate\\\" for=\\\"taxRate\\\">\\r\\n                        <vdr-affixed-input suffix=\\\"%\\\"\\r\\n                            ><input id=\\\"taxRate\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\" formControlName=\\\"taxRate\\\"\\r\\n                        /></vdr-affixed-input>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'order.tax-description' | translate\\\" for=\\\"taxDescription\\\"\\r\\n                        ><input id=\\\"taxDescription\\\" type=\\\"text\\\" formControlName=\\\"taxDescription\\\"\\r\\n                    /></vdr-form-field>\\r\\n                </div>\\r\\n                <button\\r\\n                    class=\\\"btn btn-secondary mt-2\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        surchargeForm.invalid ||\\r\\n                        surchargeForm.pristine ||\\r\\n                        surchargeForm.get('price')?.value === 0 ||\\r\\n                        !surchargeForm.get('description')?.value\\r\\n                    \\\"\\r\\n                >\\r\\n                    {{ 'order.add-surcharge' | translate }}\\r\\n                </button>\\r\\n            </form>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-detail-layout>\\r\\n\", styles: [\".order-table .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}.order-table .sub-total td{border-top:1px dashed var(--color-component-border-200)}.order-table .total td{font-weight:700;border-top:1px dashed var(--color-component-border-200)}.order-table td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}.order-table img{border-radius:var(--border-radius-img)}.order-table .order-line-custom-fields{display:flex;flex-wrap:wrap}.order-table .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-inline-end:18px}.order-table .draft-qty{max-width:48px}.order-table .order-line-custom-field{background-color:var(--color-component-bg-100)}.order-table .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}.order-table .net-price{font-size:11px;color:var(--color-text-300);line-height:14px}.order-table .promotions-label{text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}.order-table .thumb img{width:50px;height:50px}.order-table .shipping-method-name{font-size:var(--font-size-xs);margin-inline-end:2px}.order-table .order-placed-quantity{text-decoration:line-through;color:var(--color-text-300);margin-inline-end:2px}.order-table tr.modified td{background-color:var(--color-warning-100)}.order-table .order-line-custom-field{text-align:start}.add-item-thumb{max-width:50px}.no-modifications{color:var(--color-grey-400)}.summary-controls{border-top:1px solid var(--color-weight-200);margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 1)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.AffixedInputComponent, selector: \"vdr-affixed-input\", inputs: [\"prefix\", \"suffix\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.CustomFieldControlComponent, selector: \"vdr-custom-field-control\", inputs: [\"entityName\", \"customFieldsFormGroup\", \"customField\", \"compact\", \"showLabel\", \"readonly\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.FormattedAddressComponent, selector: \"vdr-formatted-address\", inputs: [\"address\"] }, { kind: \"component\", type: i1.ProductVariantSelectorComponent, selector: \"vdr-product-variant-selector\", outputs: [\"productSelected\"] }, { kind: \"component\", type: i1.AddressFormComponent, selector: \"vdr-address-form\", inputs: [\"customFields\", \"formGroup\", \"availableCountries\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"directive\", type: i1.CardControlsDirective, selector: \"[vdrCardControls]\" }, { kind: \"component\", type: LineFulfillmentComponent, selector: \"vdr-line-fulfillment\", inputs: [\"line\", \"allOrderFulfillments\", \"orderState\"] }, { kind: \"component\", type: LineRefundsComponent, selector: \"vdr-line-refunds\", inputs: [\"line\", \"payments\"] }, { kind: \"component\", type: CouponCodeSelectorComponent, selector: \"vdr-coupon-code-selector\", inputs: [\"couponCodes\", \"control\"], outputs: [\"addCouponCode\", \"removeCouponCode\"] }, { kind: \"component\", type: OrderModificationSummaryComponent, selector: \"vdr-order-modification-summary\", inputs: [\"orderSnapshot\", \"modifyOrderInput\", \"addedLines\", \"shippingAddressForm\", \"billingAddressForm\", \"updatedShippingMethods\", \"couponCodesControl\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.CustomFieldLabelPipe, name: \"customFieldLabel\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-editor', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar *ngIf=\\\"entity$ | async as order\\\">\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-align-items-center\\\"></div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"transitionToPriorState(order)\\\">\\r\\n                {{ 'order.cancel-modification' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-page-detail-layout *ngIf=\\\"entity as order\\\">\\r\\n    <vdr-page-detail-sidebar>\\r\\n        <vdr-card [title]=\\\"'order.modification-summary' | translate\\\">\\r\\n            <vdr-order-modification-summary\\r\\n                [orderSnapshot]=\\\"orderSnapshot\\\"\\r\\n                [modifyOrderInput]=\\\"modifyOrderInput\\\"\\r\\n                [addedLines]=\\\"addedLines\\\"\\r\\n                [shippingAddressForm]=\\\"shippingAddressForm\\\"\\r\\n                [billingAddressForm]=\\\"billingAddressForm\\\"\\r\\n                [couponCodesControl]=\\\"couponCodesControl\\\"\\r\\n                [updatedShippingMethods]=\\\"updatedShippingMethods\\\"\\r\\n            ></vdr-order-modification-summary>\\r\\n\\r\\n            <div *ngIf=\\\"!hasModifications()\\\" class=\\\"no-modifications\\\">\\r\\n                {{ 'order.no-modifications-made' | translate }}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"summary-controls\\\">\\r\\n                <vdr-form-field [label]=\\\"'order.note' | translate\\\">\\r\\n                    <textarea\\r\\n                        [(ngModel)]=\\\"note\\\"\\r\\n                        name=\\\"note\\\"\\r\\n                        required\\r\\n                        [disabled]=\\\"!hasModifications()\\\"\\r\\n                    ></textarea>\\r\\n                </vdr-form-field>\\r\\n                <label class=\\\"flex items-center\\\">\\r\\n                    <input\\r\\n                        type=\\\"checkbox\\\"\\r\\n                        [(ngModel)]=\\\"recalculateShipping\\\"\\r\\n                        [disabled]=\\\"!hasModifications()\\\"\\r\\n                    />\\r\\n                    <div class=\\\"ml-1\\\">{{ 'order.modification-recalculate-shipping' | translate }}</div>\\r\\n                </label>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary mt-2\\\"\\r\\n                    [disabled]=\\\"!hasModifications()\\\"\\r\\n                    (click)=\\\"previewAndModify(order)\\\"\\r\\n                >\\r\\n                    {{ 'order.preview-changes' | translate }}\\r\\n                </button>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.set-coupon-codes' | translate\\\">\\r\\n            <vdr-coupon-code-selector [control]=\\\"couponCodesControl\\\"></vdr-coupon-code-selector>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.shipping-address' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    [title]=\\\"'order.edit-shipping-address' | translate\\\"\\r\\n                    (click)=\\\"editingShippingAddress = !editingShippingAddress\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-formatted-address\\r\\n                *ngIf=\\\"!editingShippingAddress\\\"\\r\\n                [address]=\\\"shippingAddressForm.value\\\"\\r\\n            ></vdr-formatted-address>\\r\\n            <vdr-address-form\\r\\n                *ngIf=\\\"editingShippingAddress\\\"\\r\\n                [formGroup]=\\\"shippingAddressForm\\\"\\r\\n                [availableCountries]=\\\"availableCountries$ | async\\\"\\r\\n                [customFields]=\\\"addressCustomFields\\\"\\r\\n            ></vdr-address-form>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.billing-address' | translate\\\">\\r\\n            <ng-template vdrCardControls>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    [title]=\\\"'order.edit-billing-address' | translate\\\"\\r\\n                    (click)=\\\"editingBillingAddress = !editingBillingAddress\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-formatted-address\\r\\n                *ngIf=\\\"!editingBillingAddress\\\"\\r\\n                [address]=\\\"billingAddressForm.value\\\"\\r\\n            ></vdr-formatted-address>\\r\\n            <vdr-address-form\\r\\n                *ngIf=\\\"editingBillingAddress\\\"\\r\\n                [formGroup]=\\\"billingAddressForm\\\"\\r\\n                [availableCountries]=\\\"availableCountries$ | async\\\"\\r\\n                [customFields]=\\\"addressCustomFields\\\"\\r\\n            ></vdr-address-form>\\r\\n        </vdr-card>\\r\\n    </vdr-page-detail-sidebar>\\r\\n\\r\\n    <vdr-page-block>\\r\\n        <vdr-card [paddingX]=\\\"false\\\">\\r\\n            <vdr-data-table-2 id=\\\"modify-order\\\" class=\\\"order-table\\\" [items]=\\\"order.lines.concat(addedLines)\\\">\\r\\n                <!-- Here we define all the available columns -->\\r\\n                <vdr-dt2-column id=\\\"id\\\" [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        {{ line.id }}\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column\\r\\n                    id=\\\"created-at\\\"\\r\\n                    [heading]=\\\"'common.created-at' | translate\\\"\\r\\n                    [hiddenByDefault]=\\\"true\\\"\\r\\n                >\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        {{ line.createdAt | localeDate : 'short' }}\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column\\r\\n                    id=\\\"updated-at\\\"\\r\\n                    [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n                    [hiddenByDefault]=\\\"true\\\"\\r\\n                >\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        {{ line.updatedAt | localeDate : 'short' }}\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        <div class=\\\"image-placeholder\\\">\\r\\n                            <img\\r\\n                                *ngIf=\\\"line.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                                [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                            />\\r\\n                            <ng-template #imagePlaceholder>\\r\\n                                <div class=\\\"placeholder\\\">\\r\\n                                    <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column\\r\\n                    id=\\\"product-name\\\"\\r\\n                    [heading]=\\\"'order.product-name' | translate\\\"\\r\\n                    [optional]=\\\"false\\\"\\r\\n                >\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        {{ line.productVariant.name }}\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column id=\\\"product-sku\\\" [heading]=\\\"'order.product-sku' | translate\\\">\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        {{ line.productVariant.sku }}\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column id=\\\"unit-price\\\" [heading]=\\\"'order.unit-price' | translate\\\">\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        <div class=\\\"text-center\\\">\\r\\n                            <div>{{ line.unitPriceWithTax | localeCurrency : order.currencyCode }}</div>\\r\\n                            <div class=\\\"net-price\\\" [title]=\\\"'order.net-price' | translate\\\">\\r\\n                                {{ line.unitPrice | localeCurrency : order.currencyCode }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column id=\\\"quantity\\\" [heading]=\\\"'order.quantity' | translate\\\" [optional]=\\\"false\\\">\\r\\n                    <ng-template let-line=\\\"item\\\">\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"draft-qty mr-1\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            [value]=\\\"getInitialLineQuantity(line.id)\\\"\\r\\n                            (input)=\\\"updateLineQuantity(line, $event.target.value)\\\"\\r\\n                        />\\r\\n                        <button\\r\\n                            class=\\\"button-small\\\"\\r\\n                            *ngIf=\\\"isAddedLine(line)\\\"\\r\\n                            (click)=\\\"removeAddedItem(line.id)\\\"\\r\\n                        >\\r\\n                            <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                        </button>\\r\\n                        <vdr-line-refunds [line]=\\\"line\\\" [payments]=\\\"order.payments\\\"></vdr-line-refunds>\\r\\n                        <vdr-line-fulfillment\\r\\n                            [line]=\\\"line\\\"\\r\\n                            [allOrderFulfillments]=\\\"order.fulfillments\\\"\\r\\n                            [orderState]=\\\"order.state\\\"\\r\\n                        ></vdr-line-fulfillment>\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n                <vdr-dt2-column\\r\\n                    *ngFor=\\\"let customField of orderLineCustomFields\\\"\\r\\n                    [id]=\\\"customField.name\\\"\\r\\n                    [heading]=\\\"customField | customFieldLabel : (uiLanguage$ | async)\\\"\\r\\n                    [hiddenByDefault]=\\\"true\\\"\\r\\n                >\\r\\n                    <ng-template let-line=\\\"item\\\" let-index=\\\"index\\\">\\r\\n                        <vdr-custom-field-control\\r\\n                            [compact]=\\\"true\\\"\\r\\n                            [entityName]=\\\"'OrderLine'\\\"\\r\\n                            [customField]=\\\"customField\\\"\\r\\n                            [customFieldsFormGroup]=\\\"orderLineCustomFieldsFormArray.at(index)\\\"\\r\\n                        />\\r\\n                    </ng-template>\\r\\n                </vdr-dt2-column>\\r\\n            </vdr-data-table-2>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.add-item-to-order' | translate\\\">\\r\\n            <vdr-product-variant-selector class=\\\"mb-4\\\" (productSelected)=\\\"addItemSelectedVariant = $event\\\">\\r\\n            </vdr-product-variant-selector>\\r\\n            <div class=\\\"flex\\\">\\r\\n                <div>\\r\\n                    <div *ngIf=\\\"addItemSelectedVariant\\\" class=\\\"flex mb-4\\\">\\r\\n                        <img\\r\\n                            *ngIf=\\\"addItemSelectedVariant.productAsset as asset\\\"\\r\\n                            [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                            class=\\\"mr-4 add-item-thumb\\\"\\r\\n                        />\\r\\n                        <div>\\r\\n                            <strong class=\\\"mr-4\\\">{{ addItemSelectedVariant.productVariantName }}</strong>\\r\\n                            <small>{{ addItemSelectedVariant.sku }}</small>\\r\\n                            <div>\\r\\n                                {{\\r\\n                                    getSelectedItemPrice(addItemSelectedVariant)\\r\\n                                        | localeCurrency : order.currencyCode\\r\\n                                }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-grid\\\" *ngIf=\\\"addItemSelectedVariant\\\">\\r\\n                        <ng-container *ngFor=\\\"let customField of orderLineCustomFields\\\">\\r\\n                            <vdr-custom-field-control\\r\\n                                [readonly]=\\\"!addItemSelectedVariant\\\"\\r\\n                                [customField]=\\\"customField\\\"\\r\\n                                [customFieldsFormGroup]=\\\"addItemCustomFieldsForm\\\"\\r\\n                                entityName=\\\"OrderLine\\\"\\r\\n                                [compact]=\\\"true\\\"\\r\\n                            ></vdr-custom-field-control>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"flex-spacer\\\"></div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        *ngIf=\\\"addItemSelectedVariant\\\"\\r\\n                        class=\\\"btn btn-secondary\\\"\\r\\n                        [disabled]=\\\"!addItemSelectedVariant || addItemCustomFieldsForm.invalid\\\"\\r\\n                        (click)=\\\"addItemToOrder(addItemSelectedVariant)\\\"\\r\\n                    >\\r\\n                        {{ 'order.add-item-to-order' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.shipping' | translate\\\">\\r\\n            <div *ngFor=\\\"let shippingLine of order.shippingLines\\\" class=\\\"flex items-center\\\">\\r\\n                <ng-container *ngIf=\\\"getShippingLineDetails(shippingLine) as details\\\">\\r\\n                    <div>{{ details.name }}:</div>\\r\\n                    <div class=\\\"mx-1\\\">\\r\\n                        {{ details.price | localeCurrency : order.currencyCode }}\\r\\n                    </div>\\r\\n                    <button class=\\\"button-small\\\" (click)=\\\"setShippingMethod(shippingLine.id)\\\">\\r\\n                        {{ 'order.set-shipping-method' | translate }}\\r\\n                    </button>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card [title]=\\\"'order.add-surcharge' | translate\\\">\\r\\n            <form [formGroup]=\\\"surchargeForm\\\" (submit)=\\\"addSurcharge(surchargeForm.value)\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.description' | translate\\\" for=\\\"description\\\"\\r\\n                        ><input id=\\\"description\\\" type=\\\"text\\\" formControlName=\\\"description\\\"\\r\\n                    /></vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'order.product-sku' | translate\\\" for=\\\"sku\\\"\\r\\n                        ><input id=\\\"sku\\\" type=\\\"text\\\" formControlName=\\\"sku\\\"\\r\\n                    /></vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.price' | translate\\\" for=\\\"price\\\">\\r\\n                        <vdr-currency-input\\r\\n                            [currencyCode]=\\\"order.currencyCode\\\"\\r\\n                            id=\\\"price\\\"\\r\\n                            formControlName=\\\"price\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            'catalog.price-includes-tax-at'\\r\\n                                | translate : { rate: surchargeForm.get('taxRate')?.value ?? 0 }\\r\\n                        \\\"\\r\\n                        for=\\\"priceIncludesTax\\\"\\r\\n                        ><input\\r\\n                            id=\\\"priceIncludesTax\\\"\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            formControlName=\\\"priceIncludesTax\\\"\\r\\n                    /></vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'order.tax-rate' | translate\\\" for=\\\"taxRate\\\">\\r\\n                        <vdr-affixed-input suffix=\\\"%\\\"\\r\\n                            ><input id=\\\"taxRate\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\" formControlName=\\\"taxRate\\\"\\r\\n                        /></vdr-affixed-input>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'order.tax-description' | translate\\\" for=\\\"taxDescription\\\"\\r\\n                        ><input id=\\\"taxDescription\\\" type=\\\"text\\\" formControlName=\\\"taxDescription\\\"\\r\\n                    /></vdr-form-field>\\r\\n                </div>\\r\\n                <button\\r\\n                    class=\\\"btn btn-secondary mt-2\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        surchargeForm.invalid ||\\r\\n                        surchargeForm.pristine ||\\r\\n                        surchargeForm.get('price')?.value === 0 ||\\r\\n                        !surchargeForm.get('description')?.value\\r\\n                    \\\"\\r\\n                >\\r\\n                    {{ 'order.add-surcharge' | translate }}\\r\\n                </button>\\r\\n            </form>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-detail-layout>\\r\\n\", styles: [\".order-table .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}.order-table .sub-total td{border-top:1px dashed var(--color-component-border-200)}.order-table .total td{font-weight:700;border-top:1px dashed var(--color-component-border-200)}.order-table td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}.order-table img{border-radius:var(--border-radius-img)}.order-table .order-line-custom-fields{display:flex;flex-wrap:wrap}.order-table .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-inline-end:18px}.order-table .draft-qty{max-width:48px}.order-table .order-line-custom-field{background-color:var(--color-component-bg-100)}.order-table .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}.order-table .net-price{font-size:11px;color:var(--color-text-300);line-height:14px}.order-table .promotions-label{text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}.order-table .thumb img{width:50px;height:50px}.order-table .shipping-method-name{font-size:var(--font-size-xs);margin-inline-end:2px}.order-table .order-placed-quantity{text-decoration:line-through;color:var(--color-text-300);margin-inline-end:2px}.order-table tr.modified td{background-color:var(--color-warning-100)}.order-table .order-line-custom-field{text-align:start}.add-item-thumb{max-width:50px}.no-modifications{color:var(--color-grey-400)}.summary-controls{border-top:1px solid var(--color-weight-200);margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 1)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: OrderTransitionService }, { type: i0.ChangeDetectorRef }] });\n\nclass OrderListComponent extends TypedBaseListComponent {\n    constructor(serverConfigService, channelService) {\n        super();\n        this.serverConfigService = serverConfigService;\n        this.channelService = channelService;\n        this.dataTableListId = 'order-list';\n        this.orderStates = this.serverConfigService.getOrderProcessStates().map(item => item.name);\n        this.OrderType = OrderType;\n        this.customFields = this.getCustomFieldConfig('Order');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'active',\n            type: { kind: 'boolean' },\n            label: marker('order.filter-is-active'),\n            filterField: 'active',\n        })\n            .addFilter({\n            name: 'totalWithTax',\n            type: { kind: 'number', inputType: 'currency', currencyCode: 'USD' },\n            label: marker('order.total'),\n            filterField: 'totalWithTax',\n        })\n            .addFilter({\n            name: 'state',\n            type: {\n                kind: 'select',\n                options: this.orderStates.map(s => ({ value: s, label: getOrderStateTranslationToken(s) })),\n            },\n            label: marker('order.state'),\n            filterField: 'state',\n        })\n            .addFilter({\n            name: 'type',\n            type: {\n                kind: 'select',\n                options: [\n                    { value: OrderType.Regular, label: marker('order.order-type-regular') },\n                    { value: OrderType.Aggregate, label: marker('order.order-type-aggregate') },\n                    { value: OrderType.Seller, label: marker('order.order-type-seller') },\n                ],\n            },\n            label: marker('order.order-type'),\n            filterField: 'type',\n        })\n            .addFilter({\n            name: 'orderPlacedAt',\n            type: { kind: 'dateRange' },\n            label: marker('order.placed-at'),\n            filterField: 'orderPlacedAt',\n        })\n            .addFilter({\n            name: 'customerLastName',\n            type: { kind: 'text' },\n            label: marker('customer.last-name'),\n            filterField: 'customerLastName',\n        })\n            .addFilter({\n            name: 'transactionId',\n            type: { kind: 'text' },\n            label: marker('order.transaction-id'),\n            filterField: 'transactionId',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('updatedAt', 'DESC')\n            .addSort({ name: 'id' })\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'orderPlacedAt' })\n            .addSort({ name: 'customerLastName' })\n            .addSort({ name: 'state' })\n            .addSort({ name: 'totalWithTax' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        this.canCreateDraftOrder = false;\n        this.activeChannelIsDefaultChannel = false;\n        super.configure({\n            document: GetOrderListDocument,\n            getItems: result => result.orders,\n            setVariables: (skip, take) => this.createQueryOptions(skip, take, this.searchTermControl.value),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n        this.canCreateDraftOrder = !!this.serverConfigService\n            .getOrderProcessStates()\n            .find(state => state.name === 'Created')\n            ?.to.includes('Draft');\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        const isDefaultChannel$ = this.channelService.defaultChannelIsActive$.pipe(tap(isDefault => (this.activeChannelIsDefaultChannel = isDefault)));\n        super.refreshListOnChanges(this.filters.valueChanges, this.sorts.valueChanges, isDefaultChannel$);\n    }\n    createQueryOptions(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    skip, take, searchTerm) {\n        let filterInput = this.filters.createFilterInput();\n        if (this.activeChannelIsDefaultChannel) {\n            filterInput = {\n                ...(filterInput ?? {}),\n            };\n        }\n        if (searchTerm) {\n            filterInput = {\n                code: {\n                    contains: searchTerm,\n                },\n                customerLastName: {\n                    contains: searchTerm,\n                },\n                transactionId: {\n                    contains: searchTerm,\n                },\n            };\n        }\n        return {\n            options: {\n                skip,\n                take,\n                filter: {\n                    ...(filterInput ?? {}),\n                },\n                filterOperator: searchTerm ? LogicalOperator.OR : LogicalOperator.AND,\n                sort: this.sorts.createSortInput(),\n            },\n        };\n    }\n    getShippingNames(order) {\n        if (order.shippingLines.length) {\n            return order.shippingLines.map(shippingLine => shippingLine.shippingMethod.name).join(', ');\n        }\n        else {\n            return '';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderListComponent, deps: [{ token: i1.ServerConfigService }, { token: i1.ChannelService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderListComponent, selector: \"vdr-order-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"order-list\\\" />\\r\\n            <ng-container *ngIf=\\\"canCreateDraftOrder\\\">\\r\\n                <a class=\\\"btn\\\" *vdrIfPermissions=\\\"['CreateOrder']\\\" [routerLink]=\\\"['./draft/create']\\\">\\r\\n                    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                    {{ 'catalog.create-draft-order' | translate }}\\r\\n                </a>\\r\\n            </ng-container>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"order-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"order-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'order.search-by-order-filters' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"order.state === 'Draft' ? ['./draft', order.id] : ['./', order.id]\\\"\\r\\n                ><span>{{ order.code }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.customer' | translate\\\" id=\\\"customer\\\" [sort]=\\\"sorts.get('customerLastName')\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-customer-label\\r\\n                [customer]=\\\"order.customer\\\"\\r\\n                (click)=\\\"$event.stopPropagation()\\\"\\r\\n            ></vdr-customer-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.order-type' | translate\\\" id=\\\"order-type\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"order.type === OrderType.Regular\\\">{{ 'order.order-type-regular' | translate }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"order.type === OrderType.Aggregate\\\">{{ 'order.order-type-aggregate' | translate }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"order.type === OrderType.Seller\\\">{{ 'order.order-type-seller' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.state' | translate\\\" id=\\\"state\\\" [sort]=\\\"sorts.get('state')\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\" [sort]=\\\"sorts.get('totalWithTax')\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.updatedAt | timeAgo }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.placed-at' | translate\\\" id=\\\"placed-at\\\" [sort]=\\\"sorts.get('orderPlacedAt')\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.orderPlacedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.shipping' | translate\\\" id=\\\"shipping\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ getShippingNames(order) }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-form{display:flex;flex-direction:column;align-items:baseline;width:100%;max-width:100vw;margin-bottom:6px}.filter-presets{max-width:90vw;overflow-x:auto}.search-input{margin-top:6px;min-width:300px}.custom-filters{overflow:hidden;max-height:0;padding-bottom:6px}.custom-filters.expanded{max-height:initial}.custom-filters>form{display:flex;flex-direction:column;align-items:center}.custom-filters>form>div{width:100%}ng-select{flex:1;min-width:200px;height:36px}ng-select ::ng-deep .ng-select-container{height:36px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.CustomerLabelComponent, selector: \"vdr-customer-label\", inputs: [\"customer\"] }, { kind: \"component\", type: i1.OrderStateLabelComponent, selector: \"vdr-order-state-label\", inputs: [\"state\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.TimeAgoPipe, name: \"timeAgo\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"order-list\\\" />\\r\\n            <ng-container *ngIf=\\\"canCreateDraftOrder\\\">\\r\\n                <a class=\\\"btn\\\" *vdrIfPermissions=\\\"['CreateOrder']\\\" [routerLink]=\\\"['./draft/create']\\\">\\r\\n                    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                    {{ 'catalog.create-draft-order' | translate }}\\r\\n                </a>\\r\\n            </ng-container>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"order-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"order-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'order.search-by-order-filters' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"order.state === 'Draft' ? ['./draft', order.id] : ['./', order.id]\\\"\\r\\n                ><span>{{ order.code }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.customer' | translate\\\" id=\\\"customer\\\" [sort]=\\\"sorts.get('customerLastName')\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-customer-label\\r\\n                [customer]=\\\"order.customer\\\"\\r\\n                (click)=\\\"$event.stopPropagation()\\\"\\r\\n            ></vdr-customer-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.order-type' | translate\\\" id=\\\"order-type\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"order.type === OrderType.Regular\\\">{{ 'order.order-type-regular' | translate }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"order.type === OrderType.Aggregate\\\">{{ 'order.order-type-aggregate' | translate }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"order.type === OrderType.Seller\\\">{{ 'order.order-type-seller' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.state' | translate\\\" id=\\\"state\\\" [sort]=\\\"sorts.get('state')\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\" [sort]=\\\"sorts.get('totalWithTax')\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.updatedAt | timeAgo }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.placed-at' | translate\\\" id=\\\"placed-at\\\" [sort]=\\\"sorts.get('orderPlacedAt')\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.orderPlacedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.shipping' | translate\\\" id=\\\"shipping\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ getShippingNames(order) }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-form{display:flex;flex-direction:column;align-items:baseline;width:100%;max-width:100vw;margin-bottom:6px}.filter-presets{max-width:90vw;overflow-x:auto}.search-input{margin-top:6px;min-width:300px}.custom-filters{overflow:hidden;max-height:0;padding-bottom:6px}.custom-filters.expanded{max-height:initial}.custom-filters>form{display:flex;flex-direction:column;align-items:center}.custom-filters>form>div{width:100%}ng-select{flex:1;min-width:200px;height:36px}ng-select ::ng-deep .ng-select-container{height:36px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.ServerConfigService }, { type: i1.ChannelService }] });\n\nclass RefundDetailComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: RefundDetailComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: RefundDetailComponent, selector: \"vdr-refund-detail\", inputs: { refund: \"refund\", currencyCode: \"currencyCode\" }, ngImport: i0, template: \"<vdr-labeled-data [label]=\\\"'order.amount' | translate\\\">\\r\\n    {{ refund.total | localeCurrency: currencyCode }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"refund.transactionId\\\" [label]=\\\"'order.transaction-id' | translate\\\">\\r\\n    {{ refund.transactionId }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data [label]=\\\"'order.payment-metadata' | translate\\\">\\r\\n    <vdr-object-tree [value]=\\\"refund.metadata\\\"></vdr-object-tree>\\r\\n</vdr-labeled-data>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"pipe\", type: i4.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: RefundDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-refund-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-labeled-data [label]=\\\"'order.amount' | translate\\\">\\r\\n    {{ refund.total | localeCurrency: currencyCode }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data *ngIf=\\\"refund.transactionId\\\" [label]=\\\"'order.transaction-id' | translate\\\">\\r\\n    {{ refund.transactionId }}\\r\\n</vdr-labeled-data>\\r\\n<vdr-labeled-data [label]=\\\"'order.payment-metadata' | translate\\\">\\r\\n    <vdr-object-tree [value]=\\\"refund.metadata\\\"></vdr-object-tree>\\r\\n</vdr-labeled-data>\\r\\n\" }]\n        }], propDecorators: { refund: [{\n                type: Input\n            }], currencyCode: [{\n                type: Input\n            }] } });\n\nconst GET_CUSTOMER_ADDRESSES = gql `\r\n    query GetCustomerAddresses($customerId: ID!) {\r\n        customer(id: $customerId) {\r\n            id\r\n            addresses {\r\n                ...Address\r\n            }\r\n        }\r\n    }\r\n    ${ADDRESS_FRAGMENT}\r\n`;\n\nconst GET_ORDER_STATE = gql `\r\n    query GetOrderState($id: ID!) {\r\n        order(id: $id) {\r\n            id\r\n            state\r\n        }\r\n    }\r\n`;\nclass OrderGuard {\n    constructor(dataService, router) {\n        this.dataService = dataService;\n        this.router = router;\n    }\n    canActivate(route, state) {\n        const isDraft = state.url.includes('orders/draft');\n        const isModifying = state.url.includes('/modify');\n        const id = route.paramMap.get('id');\n        if (isDraft) {\n            if (id === 'create') {\n                return this.dataService.order\n                    .createDraftOrder()\n                    .pipe(map(({ createDraftOrder }) => this.router.parseUrl(`/orders/draft/${createDraftOrder.id}`)));\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            return (this.dataService\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                .query(GET_ORDER_STATE, { id: id })\n                .single$.pipe(map(({ order }) => {\n                if (order?.state === 'Modifying' && !isModifying) {\n                    return this.router.parseUrl(`/orders/${id}/modify`);\n                }\n                else {\n                    return true;\n                }\n            })));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderGuard, deps: [{ token: i1.DataService }, { token: i1$1.Router }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderGuard, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderGuard, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1$1.Router }] });\n\nconst createRoutes = (pageService) => [\n    {\n        path: '',\n        component: PageComponent,\n        pathMatch: 'full',\n        data: {\n            locationId: 'order-list',\n            breadcrumb: marker('breadcrumb.orders'),\n        },\n        children: pageService.getPageTabRoutes('order-list'),\n    },\n    {\n        path: 'draft/:id',\n        component: PageComponent,\n        canActivate: [OrderGuard],\n        data: {\n            locationId: 'draft-order-detail',\n            breadcrumb: { label: marker('breadcrumb.orders'), link: ['../'] },\n        },\n        children: pageService.getPageTabRoutes('draft-order-detail'),\n    },\n    {\n        path: ':id',\n        component: PageComponent,\n        canActivate: [OrderGuard],\n        data: {\n            locationId: 'order-detail',\n            breadcrumb: { label: marker('breadcrumb.orders'), link: ['../'] },\n        },\n        children: pageService.getPageTabRoutes('order-detail'),\n    },\n    {\n        path: ':aggregateOrderId/seller-orders/:id',\n        component: PageComponent,\n        canActivate: [OrderGuard],\n        data: {\n            locationId: 'order-detail',\n            breadcrumb: { label: marker('breadcrumb.orders'), link: ['../'] },\n        },\n        children: pageService.getPageTabRoutes('order-detail'),\n    },\n    {\n        path: ':id/modify',\n        component: PageComponent,\n        canActivate: [OrderGuard],\n        data: {\n            locationId: 'modify-order',\n            breadcrumb: { label: marker('breadcrumb.orders'), link: ['../'] },\n        },\n        children: pageService.getPageTabRoutes('modify-order'),\n    },\n];\n\nclass OrderModule {\n    static { this.hasRegisteredTabsAndBulkActions = false; }\n    constructor(pageService) {\n        if (OrderModule.hasRegisteredTabsAndBulkActions) {\n            return;\n        }\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'order-list',\n            tab: marker('order.orders'),\n            route: '',\n            component: OrderListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'order-detail',\n            tab: marker('order.order'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: OrderDetailComponent,\n                query: OrderDetailQueryDocument,\n                entityKey: 'order',\n                getBreadcrumbs: entity => entity?.type !== OrderType.Seller || !entity?.aggregateOrder\n                    ? [\n                        {\n                            label: `${entity?.code}`,\n                            link: [entity?.id],\n                        },\n                    ]\n                    : [\n                        {\n                            label: `${entity?.aggregateOrder?.code}`,\n                            link: ['/orders/', entity?.aggregateOrder?.id],\n                        },\n                        {\n                            label: marker('breadcrumb.seller-orders'),\n                            link: ['/orders/', entity?.aggregateOrder?.id],\n                        },\n                        {\n                            label: `${entity?.code}`,\n                            link: [entity?.id],\n                        },\n                    ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'draft-order-detail',\n            tab: marker('order.order'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: DraftOrderDetailComponent,\n                query: OrderDetailQueryDocument,\n                entityKey: 'order',\n                getBreadcrumbs: entity => [\n                    {\n                        label: marker('order.draft-order'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'modify-order',\n            tab: marker('order.order'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: OrderEditorComponent,\n                query: OrderDetailQueryDocument,\n                entityKey: 'order',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity?.code || 'order',\n                        link: ['/orders/', entity?.id],\n                    },\n                    {\n                        label: marker('breadcrumb.modifying-order'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        OrderModule.hasRegisteredTabsAndBulkActions = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderModule, deps: [{ token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderModule, declarations: [OrderListComponent,\n            OrderDetailComponent,\n            FulfillOrderDialogComponent,\n            LineFulfillmentComponent,\n            RefundOrderDialogComponent,\n            CancelOrderDialogComponent,\n            PaymentStateLabelComponent,\n            LineRefundsComponent,\n            OrderPaymentCardComponent,\n            RefundStateLabelComponent,\n            SettleRefundDialogComponent,\n            OrderHistoryComponent,\n            FulfillmentDetailComponent,\n            PaymentDetailComponent,\n            SimpleItemListComponent,\n            OrderCustomFieldsCardComponent,\n            OrderProcessGraphComponent,\n            OrderProcessNodeComponent,\n            OrderProcessEdgeComponent,\n            OrderProcessGraphDialogComponent,\n            FulfillmentStateLabelComponent,\n            FulfillmentCardComponent,\n            OrderEditorComponent,\n            OrderTableComponent,\n            OrderEditsPreviewDialogComponent,\n            ModificationDetailComponent,\n            AddManualPaymentDialogComponent,\n            OrderStateSelectDialogComponent,\n            DraftOrderDetailComponent,\n            DraftOrderVariantSelectorComponent,\n            SelectCustomerDialogComponent,\n            SelectAddressDialogComponent,\n            CouponCodeSelectorComponent,\n            SelectShippingMethodDialogComponent,\n            OrderHistoryEntryHostComponent,\n            SellerOrdersCardComponent,\n            OrderDataTableComponent,\n            OrderTotalColumnComponent,\n            PaymentForRefundSelectorComponent,\n            OrderModificationSummaryComponent,\n            RefundDetailComponent], imports: [SharedModule, i1$1.RouterModule], exports: [OrderCustomFieldsCardComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderModule, providers: [\n            {\n                provide: ROUTES,\n                useFactory: (pageService) => createRoutes(pageService),\n                multi: true,\n                deps: [PageService],\n            },\n        ], imports: [SharedModule, RouterModule.forChild([])] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [SharedModule, RouterModule.forChild([])],\n                    providers: [\n                        {\n                            provide: ROUTES,\n                            useFactory: (pageService) => createRoutes(pageService),\n                            multi: true,\n                            deps: [PageService],\n                        },\n                    ],\n                    declarations: [\n                        OrderListComponent,\n                        OrderDetailComponent,\n                        FulfillOrderDialogComponent,\n                        LineFulfillmentComponent,\n                        RefundOrderDialogComponent,\n                        CancelOrderDialogComponent,\n                        PaymentStateLabelComponent,\n                        LineRefundsComponent,\n                        OrderPaymentCardComponent,\n                        RefundStateLabelComponent,\n                        SettleRefundDialogComponent,\n                        OrderHistoryComponent,\n                        FulfillmentDetailComponent,\n                        PaymentDetailComponent,\n                        SimpleItemListComponent,\n                        OrderCustomFieldsCardComponent,\n                        OrderProcessGraphComponent,\n                        OrderProcessNodeComponent,\n                        OrderProcessEdgeComponent,\n                        OrderProcessGraphDialogComponent,\n                        FulfillmentStateLabelComponent,\n                        FulfillmentCardComponent,\n                        OrderEditorComponent,\n                        OrderTableComponent,\n                        OrderEditsPreviewDialogComponent,\n                        ModificationDetailComponent,\n                        AddManualPaymentDialogComponent,\n                        OrderStateSelectDialogComponent,\n                        DraftOrderDetailComponent,\n                        DraftOrderVariantSelectorComponent,\n                        SelectCustomerDialogComponent,\n                        SelectAddressDialogComponent,\n                        CouponCodeSelectorComponent,\n                        SelectShippingMethodDialogComponent,\n                        OrderHistoryEntryHostComponent,\n                        SellerOrdersCardComponent,\n                        OrderDataTableComponent,\n                        OrderTotalColumnComponent,\n                        PaymentForRefundSelectorComponent,\n                        OrderModificationSummaryComponent,\n                        RefundDetailComponent,\n                    ],\n                    exports: [OrderCustomFieldsCardComponent],\n                }]\n        }], ctorParameters: () => [{ type: i1.PageService }] });\n\n// This file was generated by the build-public-api.ts script\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AddManualPaymentDialogComponent, CancelOrderDialogComponent, CouponCodeSelectorComponent, DraftOrderDetailComponent, DraftOrderVariantSelectorComponent, FulfillOrderDialogComponent, FulfillmentCardComponent, FulfillmentDetailComponent, FulfillmentStateLabelComponent, GET_COUPON_CODE_SELECTOR_PROMOTION_LIST, GET_CUSTOMER_ADDRESSES, GET_ORDER_STATE, GET_SELLER_ORDERS, LineFulfillmentComponent, LineRefundsComponent, ModificationDetailComponent, NODE_HEIGHT, ORDER_DETAIL_QUERY, OrderCustomFieldsCardComponent, OrderDataTableComponent, OrderDetailComponent, OrderEditResultType, OrderEditorComponent, OrderEditsPreviewDialogComponent, OrderGuard, OrderHistoryComponent, OrderHistoryEntryHostComponent, OrderListComponent, OrderModificationSummaryComponent, OrderModule, OrderPaymentCardComponent, OrderProcessEdgeComponent, OrderProcessGraphComponent, OrderProcessGraphDialogComponent, OrderProcessNodeComponent, OrderStateSelectDialogComponent, OrderTableComponent, OrderTotalColumnComponent, OrderTransitionService, PaymentDetailComponent, PaymentForRefundSelectorComponent, PaymentStateLabelComponent, RefundDetailComponent, RefundOrderDialogComponent, RefundStateLabelComponent, SET_ORDER_CUSTOMER_MUTATION, SelectAddressDialogComponent, SelectCustomerDialogComponent, SelectShippingMethodDialogComponent, SellerOrdersCardComponent, SettleRefundDialogComponent, SimpleItemListComponent, createRoutes, getRefundablePayments };\n","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function retryWhen(notifier) {\n    return operate((source, subscriber) => {\n        let innerSub;\n        let syncResub = false;\n        let errors$;\n        const subscribeForRetryWhen = () => {\n            innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n                if (!errors$) {\n                    errors$ = new Subject();\n                    innerFrom(notifier(errors$)).subscribe(createOperatorSubscriber(subscriber, () => innerSub ? subscribeForRetryWhen() : (syncResub = true)));\n                }\n                if (errors$) {\n                    errors$.next(err);\n                }\n            }));\n            if (syncResub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                syncResub = false;\n                subscribeForRetryWhen();\n            }\n        };\n        subscribeForRetryWhen();\n    });\n}\n"],"x_google_ignoreList":[0,1]}