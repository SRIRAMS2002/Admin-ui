{"version":3,"file":"367.105d7c0199c35c55.js","mappings":"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","names":["_c0","a0","brand","LoginComponent_p_9_Template","rf","ctx","i0","ctx_r0","imageCreatorUrl","imageCreator","imageUnsplashUrl","LoginComponent_p_10_Template","imageLocation","LoginComponent_img_11_Template","imageUrl","LoginComponent_img_35_Template","LoginComponent","constructor","authService","router","httpClient","localizationService","this","username","password","rememberMe","version","ADMIN_UI_VERSION","getAppConfig","hideVendureBranding","customImageUrl","loginImageUrl","loadImage","ngOnInit","direction$","logIn","errorMessage","undefined","subscribe","result","__typename","redirect","getRedirectRoute","navigateByUrl","message","get","toPromise","then","res","updateImage","user","location","urls","regular","name","links","html","redirectTo","re","RegExp","AUTH_REDIRECT_PARAM","redirectToParam","window","search","match","length","atob","decodeURIComponent","ɵfac","t","i1","i1$1","i3","ɵcmp","type","selectors","decls","vars","consts","template","$event","dependencies","i4","i5","i6","i7","i8","styles","LoginGuard","canActivate","route","checkAuthenticatedStatus","pipe","map","authenticated","navigate","ɵprov","token","factory","providedIn","loginRoutes","path","component","pathMatch","LoginModule","ɵmod","ɵinj","imports","SharedModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-login.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { ADMIN_UI_VERSION, getAppConfig, AUTH_REDIRECT_PARAM, SharedModule } from '@vendure/admin-ui/core';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i3 from '@angular/common/http';\nimport * as i4 from '@clr/angular';\nimport * as i5 from '@angular/common';\nimport * as i6 from '@angular/forms';\nimport * as i7 from '@angular/cdk/bidi';\nimport * as i8 from '@ngx-translate/core';\nimport { map } from 'rxjs/operators';\n\nclass LoginComponent {\n    constructor(authService, router, httpClient, localizationService) {\n        this.authService = authService;\n        this.router = router;\n        this.httpClient = httpClient;\n        this.localizationService = localizationService;\n        this.username = '';\n        this.password = '';\n        this.rememberMe = false;\n        this.version = ADMIN_UI_VERSION;\n        this.brand = getAppConfig().brand;\n        this.hideVendureBranding = getAppConfig().hideVendureBranding;\n        this.customImageUrl = getAppConfig().loginImageUrl;\n        this.imageUrl = '';\n        this.imageUnsplashUrl = '';\n        this.imageLocation = '';\n        this.imageCreator = '';\n        this.imageCreatorUrl = '';\n        if (this.customImageUrl) {\n            this.imageUrl = this.customImageUrl;\n        }\n        else {\n            this.loadImage();\n        }\n    }\n    ngOnInit() {\n        this.direction$ = this.localizationService.direction$;\n    }\n    logIn() {\n        this.errorMessage = undefined;\n        this.authService.logIn(this.username, this.password, this.rememberMe).subscribe(result => {\n            switch (result.__typename) {\n                case 'CurrentUser':\n                    const redirect = this.getRedirectRoute();\n                    this.router.navigateByUrl(redirect ? redirect : '/');\n                    break;\n                case 'InvalidCredentialsError':\n                case 'NativeAuthStrategyError':\n                    this.errorMessage = result.message;\n                    break;\n            }\n        });\n    }\n    loadImage() {\n        this.httpClient\n            .get('https://login-image.vendure.io')\n            .toPromise()\n            .then(res => {\n            this.updateImage(res);\n        });\n    }\n    updateImage(res) {\n        const user = res.user;\n        const location = res.location;\n        this.imageUrl = res.urls.regular + '?utm_source=Vendure+Login+Image&utm_medium=referral';\n        this.imageCreator = user.name;\n        this.imageLocation = location.name;\n        this.imageCreatorUrl = user.links.html + '?utm_source=Vendure+Login+Image&utm_medium=referral';\n        this.imageUnsplashUrl = res.links.html;\n    }\n    /**\n     * Attempts to read a redirect param from the current url and parse it into a\n     * route from which the user was redirected after a 401 error.\n     */\n    getRedirectRoute() {\n        let redirectTo;\n        const re = new RegExp(`${AUTH_REDIRECT_PARAM}=(.*)`);\n        try {\n            const redirectToParam = window.location.search.match(re);\n            if (redirectToParam && 1 < redirectToParam.length) {\n                redirectTo = atob(decodeURIComponent(redirectToParam[1]));\n            }\n        }\n        catch (e) {\n            // ignore\n        }\n        return redirectTo;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LoginComponent, deps: [{ token: i1.AuthService }, { token: i1$1.Router }, { token: i3.HttpClient }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: LoginComponent, selector: \"vdr-login\", ngImport: i0, template: \"<div class=\\\"login-wrapper\\\" [dir]=\\\"direction$ | async\\\">\\r\\n    <div class=\\\"login-wrapper-inner\\\">\\r\\n        <div class=\\\"login-wrapper-image\\\">\\r\\n            <div class=\\\"login-wrapper-image-content\\\">\\r\\n                <div class=\\\"login-wrapper-image-title\\\">\\r\\n                    {{ 'common.login-image-title' | translate }}\\r\\n                </div>\\r\\n                <div class=\\\"login-wrapper-image-copyright\\\">\\r\\n                    <p *ngIf=\\\"imageCreator\\\" class=\\\"creator\\\">\\r\\n                        Photo by <a [href]=\\\"imageCreatorUrl\\\" target=\\\"_blank\\\">{{ imageCreator }}</a> on\\r\\n                        <a [href]=\\\"imageUnsplashUrl\\\" target=\\\"_blank\\\">Unsplash</a>\\r\\n                    </p>\\r\\n                    <p *ngIf=\\\"imageLocation\\\" class=\\\"location\\\">{{ imageLocation }}</p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <img *ngIf=\\\"imageUrl\\\" [src]=\\\"imageUrl\\\" [alt]=\\\"imageUrl\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"login-wrapper-form\\\">\\r\\n            <p class=\\\"login-title\\\">\\r\\n                {{ 'common.login-title' | translate : { brand: hideVendureBranding ? brand : 'Vendure' } }}\\r\\n            </p>\\r\\n            <form class=\\\"login-form\\\">\\r\\n                <div class=\\\"login-group\\\">\\r\\n                    <input\\r\\n                        class=\\\"username\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        name=\\\"username\\\"\\r\\n                        id=\\\"login_username\\\"\\r\\n                        [(ngModel)]=\\\"username\\\"\\r\\n                        [placeholder]=\\\"'common.username' | translate\\\"\\r\\n                    />\\r\\n                    <input\\r\\n                        class=\\\"password\\\"\\r\\n                        name=\\\"password\\\"\\r\\n                        type=\\\"password\\\"\\r\\n                        id=\\\"login_password\\\"\\r\\n                        [(ngModel)]=\\\"password\\\"\\r\\n                        [placeholder]=\\\"'common.password' | translate\\\"\\r\\n                    />\\r\\n                    <clr-alert\\r\\n                        [clrAlertType]=\\\"'danger'\\\"\\r\\n                        [clrAlertClosable]=\\\"false\\\"\\r\\n                        [class.visible]=\\\"errorMessage\\\"\\r\\n                        class=\\\"login-error\\\"\\r\\n                    >\\r\\n                        <clr-alert-item>\\r\\n                            <span class=\\\"alert-text\\\">\\r\\n                                {{ errorMessage }}\\r\\n                            </span>\\r\\n                        </clr-alert-item>\\r\\n                    </clr-alert>\\r\\n                    <clr-checkbox-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            id=\\\"rememberme\\\"\\r\\n                            name=\\\"rememberme\\\"\\r\\n                            [(ngModel)]=\\\"rememberMe\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.remember-me' | translate }}</label>\\r\\n                    </clr-checkbox-wrapper>\\r\\n                    <div>\\r\\n                        <button\\r\\n                            type=\\\"submit\\\"\\r\\n                            class=\\\"button primary login-button\\\"\\r\\n                            (click)=\\\"logIn()\\\"\\r\\n                            [disabled]=\\\"!username || !password\\\"\\r\\n                        >\\r\\n                            {{ 'common.login' | translate }}\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <img class=\\\"login-wrapper-logo\\\" src=\\\"assets/logo-login.webp\\\" *ngIf=\\\"!hideVendureBranding\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".login-wrapper{background:var(--color-weight-100);background-image:none;height:100vh;display:flex;align-items:center;justify-content:center;padding:20px}.login-wrapper .login-wrapper-inner{background:var(--login-wrapper-inner-bg);width:1120px;height:590px;display:flex;justify-content:flex-start;align-items:stretch;position:relative;border-radius:var(--border-radius);border:1px solid var(--color-weight-150);overflow:hidden}@media (max-width: 992px){.login-wrapper .login-wrapper-inner{flex-direction:column;height:auto;width:100%}}.login-wrapper .login-wrapper-inner .login-wrapper-image{height:100%;flex-grow:1;position:relative}@media (max-width: 992px){.login-wrapper .login-wrapper-inner .login-wrapper-image{height:300px}}.login-wrapper .login-wrapper-inner .login-wrapper-image img{display:block;width:100%;height:100%;object-fit:cover;object-position:center;position:relative;z-index:1}.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content{width:100%;height:100%;position:absolute;left:0;bottom:0;z-index:10;background:#020024;background:linear-gradient(180deg,#02002400,#000000bf);display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-end;padding:30px}.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content .login-wrapper-image-title{font-size:1.6rem;font-weight:700;color:#fff;margin-bottom:20px}@media (max-width: 992px){.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content .login-wrapper-image-title{font-size:1.2rem}}.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content .login-wrapper-image-copyright{opacity:.8}.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content .login-wrapper-image-copyright p{font-size:.6rem;color:#fff;margin:0!important}.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content .login-wrapper-image-copyright a{color:#fff;text-decoration:underline}.login-wrapper .login-wrapper-inner .login-wrapper-form{height:100%;width:400px;padding:40px;display:flex;flex-direction:column;align-items:stretch;justify-content:center;box-shadow:0 20px 25px #0000001a;overflow:hidden;flex-shrink:0}@media (max-width: 992px){.login-wrapper .login-wrapper-inner .login-wrapper-form{height:auto;width:100%;padding:20px}}.login-wrapper .login-wrapper-inner .login-wrapper-form .login-title{font-weight:700;font-size:1.2rem;margin-bottom:20px;color:var(--color-weight-600)}.login-wrapper .login-wrapper-inner .login-wrapper-form .login-group input.username,.login-wrapper .login-wrapper-inner .login-wrapper-form .login-group input.password{display:block;width:100%;margin-bottom:15px;padding:12px 16px!important;background:#fff;font-size:14px;line-height:22px;color:#52667a;outline:none;-webkit-appearance:none}.login-wrapper .login-wrapper-inner .login-wrapper-form .login-group .btn{width:100%!important;margin-top:20px!important}.login-wrapper .login-wrapper-inner .login-wrapper-logo{width:60px;height:auto;position:absolute;right:20px;top:20px}.login-button{width:100%;margin-top:var(--space-unit);justify-content:center}.version{flex:1;flex-grow:1;display:flex;align-items:flex-end;justify-content:center;color:var(--color-grey-300)}.version span+span{margin-inline-start:5px}.login-error{max-height:0;overflow:hidden;display:block}.login-error.visible{max-height:46px;transition:max-height .2s;animation:shake .82s cubic-bezier(.36,.07,.19,.97) both;animation-delay:.2s;transform:translateZ(0);backface-visibility:hidden;perspective:1000px}@keyframes shake{10%,90%{transform:translate3d(-1px,0,0)}20%,80%{transform:translate3d(2px,0,0)}30%,50%,70%{transform:translate3d(-4px,0,0)}40%,60%{transform:translate3d(4px,0,0)}}.login-wrapper[dir=rtl] .login-wrapper-inner .login-wrapper-logo{right:auto;left:20px}.login-wrapper[dir=rtl] .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content{left:auto;right:0}\\n\"], dependencies: [{ kind: \"component\", type: i4.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertLightweight\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i4.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i4.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i4.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i4.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i4.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i6.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i6.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i6.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i6.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i6.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i6.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i6.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i7.Dir, selector: \"[dir]\", inputs: [\"dir\"], outputs: [\"dirChange\"], exportAs: [\"dir\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"pipe\", type: i5.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i8.TranslatePipe, name: \"translate\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LoginComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-login', template: \"<div class=\\\"login-wrapper\\\" [dir]=\\\"direction$ | async\\\">\\r\\n    <div class=\\\"login-wrapper-inner\\\">\\r\\n        <div class=\\\"login-wrapper-image\\\">\\r\\n            <div class=\\\"login-wrapper-image-content\\\">\\r\\n                <div class=\\\"login-wrapper-image-title\\\">\\r\\n                    {{ 'common.login-image-title' | translate }}\\r\\n                </div>\\r\\n                <div class=\\\"login-wrapper-image-copyright\\\">\\r\\n                    <p *ngIf=\\\"imageCreator\\\" class=\\\"creator\\\">\\r\\n                        Photo by <a [href]=\\\"imageCreatorUrl\\\" target=\\\"_blank\\\">{{ imageCreator }}</a> on\\r\\n                        <a [href]=\\\"imageUnsplashUrl\\\" target=\\\"_blank\\\">Unsplash</a>\\r\\n                    </p>\\r\\n                    <p *ngIf=\\\"imageLocation\\\" class=\\\"location\\\">{{ imageLocation }}</p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <img *ngIf=\\\"imageUrl\\\" [src]=\\\"imageUrl\\\" [alt]=\\\"imageUrl\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"login-wrapper-form\\\">\\r\\n            <p class=\\\"login-title\\\">\\r\\n                {{ 'common.login-title' | translate : { brand: hideVendureBranding ? brand : 'Vendure' } }}\\r\\n            </p>\\r\\n            <form class=\\\"login-form\\\">\\r\\n                <div class=\\\"login-group\\\">\\r\\n                    <input\\r\\n                        class=\\\"username\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        name=\\\"username\\\"\\r\\n                        id=\\\"login_username\\\"\\r\\n                        [(ngModel)]=\\\"username\\\"\\r\\n                        [placeholder]=\\\"'common.username' | translate\\\"\\r\\n                    />\\r\\n                    <input\\r\\n                        class=\\\"password\\\"\\r\\n                        name=\\\"password\\\"\\r\\n                        type=\\\"password\\\"\\r\\n                        id=\\\"login_password\\\"\\r\\n                        [(ngModel)]=\\\"password\\\"\\r\\n                        [placeholder]=\\\"'common.password' | translate\\\"\\r\\n                    />\\r\\n                    <clr-alert\\r\\n                        [clrAlertType]=\\\"'danger'\\\"\\r\\n                        [clrAlertClosable]=\\\"false\\\"\\r\\n                        [class.visible]=\\\"errorMessage\\\"\\r\\n                        class=\\\"login-error\\\"\\r\\n                    >\\r\\n                        <clr-alert-item>\\r\\n                            <span class=\\\"alert-text\\\">\\r\\n                                {{ errorMessage }}\\r\\n                            </span>\\r\\n                        </clr-alert-item>\\r\\n                    </clr-alert>\\r\\n                    <clr-checkbox-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            id=\\\"rememberme\\\"\\r\\n                            name=\\\"rememberme\\\"\\r\\n                            [(ngModel)]=\\\"rememberMe\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.remember-me' | translate }}</label>\\r\\n                    </clr-checkbox-wrapper>\\r\\n                    <div>\\r\\n                        <button\\r\\n                            type=\\\"submit\\\"\\r\\n                            class=\\\"button primary login-button\\\"\\r\\n                            (click)=\\\"logIn()\\\"\\r\\n                            [disabled]=\\\"!username || !password\\\"\\r\\n                        >\\r\\n                            {{ 'common.login' | translate }}\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <img class=\\\"login-wrapper-logo\\\" src=\\\"assets/logo-login.webp\\\" *ngIf=\\\"!hideVendureBranding\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".login-wrapper{background:var(--color-weight-100);background-image:none;height:100vh;display:flex;align-items:center;justify-content:center;padding:20px}.login-wrapper .login-wrapper-inner{background:var(--login-wrapper-inner-bg);width:1120px;height:590px;display:flex;justify-content:flex-start;align-items:stretch;position:relative;border-radius:var(--border-radius);border:1px solid var(--color-weight-150);overflow:hidden}@media (max-width: 992px){.login-wrapper .login-wrapper-inner{flex-direction:column;height:auto;width:100%}}.login-wrapper .login-wrapper-inner .login-wrapper-image{height:100%;flex-grow:1;position:relative}@media (max-width: 992px){.login-wrapper .login-wrapper-inner .login-wrapper-image{height:300px}}.login-wrapper .login-wrapper-inner .login-wrapper-image img{display:block;width:100%;height:100%;object-fit:cover;object-position:center;position:relative;z-index:1}.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content{width:100%;height:100%;position:absolute;left:0;bottom:0;z-index:10;background:#020024;background:linear-gradient(180deg,#02002400,#000000bf);display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-end;padding:30px}.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content .login-wrapper-image-title{font-size:1.6rem;font-weight:700;color:#fff;margin-bottom:20px}@media (max-width: 992px){.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content .login-wrapper-image-title{font-size:1.2rem}}.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content .login-wrapper-image-copyright{opacity:.8}.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content .login-wrapper-image-copyright p{font-size:.6rem;color:#fff;margin:0!important}.login-wrapper .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content .login-wrapper-image-copyright a{color:#fff;text-decoration:underline}.login-wrapper .login-wrapper-inner .login-wrapper-form{height:100%;width:400px;padding:40px;display:flex;flex-direction:column;align-items:stretch;justify-content:center;box-shadow:0 20px 25px #0000001a;overflow:hidden;flex-shrink:0}@media (max-width: 992px){.login-wrapper .login-wrapper-inner .login-wrapper-form{height:auto;width:100%;padding:20px}}.login-wrapper .login-wrapper-inner .login-wrapper-form .login-title{font-weight:700;font-size:1.2rem;margin-bottom:20px;color:var(--color-weight-600)}.login-wrapper .login-wrapper-inner .login-wrapper-form .login-group input.username,.login-wrapper .login-wrapper-inner .login-wrapper-form .login-group input.password{display:block;width:100%;margin-bottom:15px;padding:12px 16px!important;background:#fff;font-size:14px;line-height:22px;color:#52667a;outline:none;-webkit-appearance:none}.login-wrapper .login-wrapper-inner .login-wrapper-form .login-group .btn{width:100%!important;margin-top:20px!important}.login-wrapper .login-wrapper-inner .login-wrapper-logo{width:60px;height:auto;position:absolute;right:20px;top:20px}.login-button{width:100%;margin-top:var(--space-unit);justify-content:center}.version{flex:1;flex-grow:1;display:flex;align-items:flex-end;justify-content:center;color:var(--color-grey-300)}.version span+span{margin-inline-start:5px}.login-error{max-height:0;overflow:hidden;display:block}.login-error.visible{max-height:46px;transition:max-height .2s;animation:shake .82s cubic-bezier(.36,.07,.19,.97) both;animation-delay:.2s;transform:translateZ(0);backface-visibility:hidden;perspective:1000px}@keyframes shake{10%,90%{transform:translate3d(-1px,0,0)}20%,80%{transform:translate3d(2px,0,0)}30%,50%,70%{transform:translate3d(-4px,0,0)}40%,60%{transform:translate3d(4px,0,0)}}.login-wrapper[dir=rtl] .login-wrapper-inner .login-wrapper-logo{right:auto;left:20px}.login-wrapper[dir=rtl] .login-wrapper-inner .login-wrapper-image .login-wrapper-image-content{left:auto;right:0}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.AuthService }, { type: i1$1.Router }, { type: i3.HttpClient }, { type: i1.LocalizationService }] });\n\n/**\n * This guard prevents loggen-in users from navigating to the login screen.\n */\nclass LoginGuard {\n    constructor(router, authService) {\n        this.router = router;\n        this.authService = authService;\n    }\n    canActivate(route) {\n        return this.authService.checkAuthenticatedStatus().pipe(map(authenticated => {\n            if (authenticated) {\n                this.router.navigate(['/']);\n            }\n            return !authenticated;\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LoginGuard, deps: [{ token: i1$1.Router }, { token: i1.AuthService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LoginGuard, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LoginGuard, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i1$1.Router }, { type: i1.AuthService }] });\n\nconst loginRoutes = [\n    {\n        path: '',\n        component: LoginComponent,\n        pathMatch: 'full',\n        canActivate: [LoginGuard],\n    },\n];\n\nclass LoginModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LoginModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: LoginModule, declarations: [LoginComponent], imports: [SharedModule, i1$1.RouterModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LoginModule, imports: [SharedModule, RouterModule.forChild(loginRoutes)] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LoginModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [SharedModule, RouterModule.forChild(loginRoutes)],\n                    exports: [],\n                    declarations: [LoginComponent],\n                }]\n        }] });\n\n// This file was generated by the build-public-api.ts script\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoginComponent, LoginGuard, LoginModule, loginRoutes };\n"],"x_google_ignoreList":[0]}