{"version":3,"file":"732.95ef47b515514499.js","mappings":"izBAe0B,MAAAA,EAAA,WAAAC,EAAA,eAAAC,EAAAC,EAAAC,GAAA,EAAAD,GAiB2EE,MAAE,EAC0X,UAAAC,EAAAH,EAAAC,GAAA,OAAAG,EAAAC,KAAAC,MAAAD,IAAAE,EAAAF,KAAAG,MAAAH,IAAA,SAAAI,GAAAT,EAAAC,GAAA,KAAAD,EAAA,OAAAU,EAD5XR,cAAE,cAAFA,MAAE,yBAAAS,EAAFT,MAAEQ,GAAAE,UAAAC,EAAFX,QAAE,OAAFA,MAuHwqBW,EAAAC,UAAAH,EAAAI,IAAoB,GAvH5rBb,MAAE,GAAFA,MAAE,eAAFA,OAuH4zB,MAAAF,EAAA,KAAAgB,EAAA,MAAAL,EAAAV,EAAAW,UAvH5zBV,cAAE,IAAFA,MAAE,YAAAc,EAAAL,EAAAM,OAAAC,aAAAC,IAAAH,IAAAL,EAAAI,IAAA,IAuHizB,WAAAK,GAAApB,EAAAC,GAAA,KAAAD,EAAA,OAAAqB,EAvHnzBnB,cAAE,eAAFA,MAAE,yBAAAoB,EAAFpB,MAAEmB,GAAAT,UAAAW,EAAFrB,MAAE,GAAAU,UAAAC,EAAFX,MAAE,UAAFA,MAuH4tFW,EAAAW,eAAAD,EAAAD,GAA6B,GAvHzvFpB,MAAE,GAAFA,MAAE,eAAFA,OAuHk7F,MAAAF,EAAA,OAAAsB,EAAArB,EAAAW,UAAAW,EAvHl7FrB,MAAE,GAAAU,UAAFV,MAAE,WAAAoB,IAAAC,EAAAf,OAAFN,cAAE,IAAFA,MAAE,6BAAFA,MAAE,EAAAK,EAAAe,IAAA,IAuHu6F,WAAAG,GAAAzB,EAAAC,GAAA,KAAAD,EAAA,OAAA0B,EAvHz6FxB,cAAE,4BAAFA,CAuHqvD,WAvHrvDA,CAuHiyD,YAvHjyDA,MAAE,iBAAFA,cAAE,iBAAFA,CAuHygE,eAvHzgEA,MAAE,gBAAFA,cAAE,wBAAFA,CAuHwyE,WAvHxyEA,MAAE,GAAFA,MAAE,gBAAFA,cAAE,GAAAkB,GAAA,iBAAFlB,MAAE,aAAFA,MAAE,eAAFA,MAAE,mBAAFA,MAAEwB,GAAA,MAAAH,EAAFrB,QAAEU,UAAAC,EAAFX,MAAE,UAAFA,MAuHqlGW,EAAAc,aAAAJ,GAAoB,GAvHzmGrB,MAAE,kBAAFA,MAAE,IAAFA,MAAE,gBAAFA,eAuHq/G,MAAAF,EAAA,OAAAuB,EAvHr/GrB,QAAEU,UAAAC,EAAFX,MAAE,GAAFA,MAAE,eAAAqB,EAAAN,QAAFf,MAAE,GAAFA,YAAE,iCAAFA,MAAE,GAAFA,MAAE,UAAAW,EAAAe,mBAAAL,EAAAN,SAAFf,MAAE,GAAFA,MAAE,IAAFA,MAAE,oCAuHk0G,WAAA2B,GAAA7B,EAAAC,GAAuM,GAAvM,EAAAD,IAvHp0GE,MAAE,YAAFA,MAAE,EAAAuB,GAAA,gCAAFvB,SAuH2gH,EAAAF,EAAA,OAAAuB,EAAAtB,EAAAW,UAAAC,EAvH3gHX,MAAE,GAAFA,MAAE,UAAAW,EAAAiB,iBAAAP,EAAAf,OAAFN,CAuHg9C,cAAAqB,GAvHh9CrB,cAAE,mBAAAqB,EAAAN,OAAAc,qBAAA,KAuHoqD,WAAAC,GAAAhC,EAAAC,GAAA,KAAAD,EAAA,OAAAiC,EAvHtqD/B,cAAE,WAAFA,MAAE,8BAAAgC,GAAFhC,MAAE+B,GAAA,MAAApB,EAAFX,QAAE,OAAFA,MAuHgoCW,EAAAsB,KAAAD,GAAY,GAvH5oChC,MAAE,EAAA2B,GAAA,cAAF3B,OAuH6hH,MAAAF,EAAA,OAAAoC,EAAAnC,EAAAW,UAAAyB,EAAApC,EAAAK,MAAAO,EAvH7hHX,cAAE,kBAAFA,MAAE,EAAAE,EAAAiC,IAAFnC,cAAE,UAAAkC,EAAFlC,CAuH60C,eAAAW,EAAAyB,aAAqB,QAAAC,GAAAlC,GAAA,YAAAA,GAAA,SAAAmC,GAAAxC,EAAAC,GA4Dr2B,GA5Dq2B,EAAAD,IAvHl2CE,MAAE,QAAFA,CAmL6Y,UAnL7YA,MAAE,GAAFA,cAAE,gBAAFA,SAmL6f,EAAAF,EAAA,OAAAyC,EAAAxC,EAAAyC,KAnL7fxC,MAAE,aAAFA,MAAE,EAAAqC,GAAAE,EAAA1B,KAAFb,MAAE,GAAFA,MAAEuC,EAAAE,KAmLia,WAAAC,GAAA5C,EAAAC,GAAwX,GAAxX,EAAAD,GAnLnaE,MAAE,6BAmLyxB,EAAAF,EAAA,OAAA6C,EAAA5C,EAAAyC,KAnL3xBxC,MAAE,QAAA2C,EAAAC,MAmLgwB,WAAAC,GAAA/C,EAAAC,GAAgU,GAAhU,EAAAD,GAnLlwBE,MAAE,0BAmLgkC,EAAAF,EAAA,OAAAgD,EAAA/C,EAAAyC,KAnLlkCxC,MAAE,WAAA8C,EAAAC,SAmL0iC,WAAAC,GAAAlD,EAAAC,GAnL1iC,GAmL0iC,EAAAD,IAnL5iCE,MAAE,GAAFA,MAAE,uBAAAF,EAAA,OAAAmD,EAAAlD,EAAAyC,KAAFxC,MAAE,IAAFA,MAAE,IAAAiD,EAAAC,aAAAD,EAAAE,cAAA,IAmLs0C,WAAAC,GAAAtD,EAAAC,GAnLt0C,GAmLs0C,EAAAD,IAnLx0CE,MAAE,GAAFA,MAAE,gBAAAF,EAAA,OAAAuD,EAAAtD,EAAAyC,KAAFxC,MAAE,IAAFA,MAAE,IAAAqD,EAAAC,eAAA,IAmL6iD,WAAAC,GAAAzD,EAAAC,GAAA,KAAAD,EAAA,OAAAU,EAnL/iDR,cAAE,UAAFA,CAuP4M,cAvP5MA,MAAE,mBAAFA,MAAEQ,GAAA,MAAAgD,EAAFxD,QAAE,OAAFA,MAuPmRwD,EAAAC,YAAAC,KAAAF,EAAAG,WAAAC,YAAuC,GAvP1T5D,MAAE,GAAFA,MAAE,eAAFA,cAAE,cAAFA,MAAE,mBAAFA,MAAEQ,GAAA,MAAAgD,EAAFxD,QAAE,OAAFA,MAuP6iBwD,EAAAC,YAAAC,KAAAF,EAAAG,WAAAE,YAAuC,GAvPplB7D,MAAE,GAAFA,MAAE,eAAFA,cAAE,cAAFA,MAAE,mBAAFA,MAAEQ,GAAA,MAAAgD,EAAFxD,QAAE,OAAFA,MAuPs0BwD,EAAAC,YAAAC,KAAAF,EAAAG,WAAAG,mBAA8C,GAvPp3B9D,MAAE,GAAFA,MAAE,eAAFA,cAAE,YAAFA,MAAE,eAAFA,MAAE,mBAAFA,MAAEQ,GAAA,MAAAgD,EAAFxD,QAAE,OAAFA,MAuP8nCwD,EAAAO,UAAS,GAvPvoC/D,MAAE,iBAAFA,SAuPwtC,MAAAF,EAAA,OAAAkE,EAAAjE,EAAAkE,KAAAT,EAvPxtCxD,sBAAE,SAAAgE,IAAAR,EAAAG,WAAAC,YAAF5D,cAAE,IAAFA,MAAE,+CAAFA,MAAE,GAAFA,MAAE,SAAAgE,IAAAR,EAAAG,WAAAE,YAAF7D,cAAE,IAAFA,MAAE,+CAAFA,MAAE,GAAFA,MAAE,SAAAgE,IAAAR,EAAAG,WAAAG,mBAAF9D,cAAE,IAAFA,MAAE,iDAuPyhC,WAAAkE,GAAApE,EAAAC,GAAA,KAAAD,EAAA,OAAAU,EAvP3hCR,cAAE,UAAFA,CAqSusB,cArSvsBA,MAAE,mBAAFA,MAAEQ,GAAA,MAAAgD,EAAFxD,QAAE,OAAFA,MAqSwyBwD,EAAAW,WAAAT,KAAgB,CAAAU,UAAY,MAAKC,KAAAb,EAAAc,QAAe,GArSx1BtE,MAAE,GAAFA,MAAE,eAAFA,cAAE,cAAFA,MAAE,mBAAFA,MAAEQ,GAAA,MAAAgD,EAAFxD,QAAE,OAAFA,MAqS6gCwD,EAAAW,WAAAT,KAAgB,CAAAU,UAAY,MAAKC,KAAAb,EAAAe,YAAmB,GArSjkCvE,MAAE,GAAFA,MAAE,eAAFA,cAAE,cAAFA,MAAE,mBAAFA,MAAEQ,GAAA,MAAAgD,EAAFxD,QAAE,OAAFA,MAqS4vCwD,EAAAW,WAAAT,KAAgB,CAAAU,UAAY,SAAQ,GArShyCpE,MAAE,GAAFA,MAAE,eAAFA,cAAE,eAAFA,MAAE,mBAAFA,MAAEQ,GAAA,MAAAgD,EAAFxD,QAAE,OAAFA,MAqS29CwD,EAAAW,WAAAT,KAAgB,CAAAU,UAAY,UAAS,GArShgDpE,MAAE,IAAFA,MAAE,gBAAFA,SAqS6lD,MAAAF,EAAA,OAAA0E,EAAAzE,EAAAkE,KAAAT,EArS7lDxD,sBAAE,SAAAwE,EAAAH,OAAAb,EAAAc,OAAFtE,cAAE,IAAFA,MAAE,6BAAFA,MAAE,GAAFA,MAAE,SAAAwE,EAAAH,OAAAb,EAAAe,WAAFvE,cAAE,IAAFA,MAAE,iCAAFA,MAAE,GAAFA,MAAE,kBAAAwE,EAAAJ,WAAFpE,cAAE,IAAFA,MAAE,gCAAFA,MAAE,GAAFA,MAAE,mBAAAwE,EAAAJ,WAAFpE,cAAE,IAAFA,MAAE,iCAqSokD,WAAAyE,GAAA3E,EAAAC,GAA0L,GAA1L,EAAAD,IArStkDE,MAAE,YAAFA,MAAE,GAAFA,MAAE,gBAAFA,MAAE,gBAAFA,SAqSgwD,EAAAF,EAAA,OAAA4E,EAAA3E,EAAAkE,KArShwDjE,cAAE,IAAFA,MAAE,IAAA0E,EAAAC,OAAA,MAAF3E,MAAE,IAAA0E,EAAAE,KAAA,IAqSwvD,WAAAC,GAAA/E,EAAAC,GAsG5tC,GAtG4tC,EAAAD,IArS1vDE,MAAE,SAAFA,MAAE,GAAFA,SA2Y8hB,EAAAF,EAAA,OAAAgF,EA3Y9hB9E,MAAE,GAAFA,cAAE,IAAA8E,EAAAC,oBAAA,iBAAAD,EAAAE,YAAA,gBAAAF,EAAAG,QAAA,IA2YwhB,WAAAC,GAAApF,EAAAC,GAAc,GAAd,EAAAD,IA3Y1hBE,MAAE,QAAFA,CA2YsI,UA3YtIA,MAAE,GAAFA,MAAE,QAAFA,MAAE,aAAFA,MAAE,GAAFA,MAAE,aAAFA,gBAAE,EAAA6E,GAAA,WAAF7E,SA2YwiB,EAAAF,EAAA,OAAAqF,EAAApF,EAAAkE,KAAAa,EA3YxiB9E,cAAE,GAAFA,MAAE,aAAAmF,EAAAC,UAAA,IAAAD,EAAAE,SAAA,IAAFrF,MAAE,GAAFA,MAAE,eAAFA,MAAE,IAAAmF,EAAAG,KAAAC,WAAA,IAAFvF,MAAE,GAAFA,MAAE,QAAA8E,EAAAC,sBAAAD,EAAAE,YA2Yqa,EA1Z5gB,MAAMQ,EACFC,kBACIC,KAAKC,YACT,CACMA,aAAa,IAAAC,EAAAF,KAAA,SAAAG,KAAA,YACf,MAAMC,EAAsBF,EAAKG,aAAaC,gBACxCC,EAAgBH,aAA+BI,cAAgBJ,EAAsBA,EAC3FF,EAAKO,aAAeP,EAAKQ,OAAOC,gBAAgBJ,GAChDL,EAAKO,aAAaG,kBAAkBC,eAAgB,EAJrC,EAKnB,CACAC,cACQd,KAAKS,cACLT,KAAKS,aAAaM,SAE1B,QACSf,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyFnB,EAAwB,CAAqD,QAC/KE,KAAKkB,UADmF5G,MAAE,CAAA6G,KACJrB,EAAwBsB,UAAA,2BAAAC,UAAA,SAAAjH,EAAAC,GAAmM,GAAnM,EAAAD,GADtBE,MAAEL,EAAA,EACuMqH,OAAgB,EAAAlH,EAAA,KAAAmH,EADzNjH,MAAEiH,EAAFjH,WAAED,EAAAqG,OAAAa,EAAAC,MAAA,GAAAC,OAAA,CAAApB,aAAA,gBAAAqB,mBAAAxH,EAAAyH,MAAA,EAAAC,KAAA,EAAAC,OAAA,mDAAAC,SAAA,SAAA1H,EAAAC,GAC0c,GAD1c,EAAAD,IAAFE,cAAE,gBAAFA,MAAE,eAAFA,MAAE,EAAAH,EAAA,oBAAFG,CACuV,EAAAC,EAAA,yBADvVD,gBAC4c,EAAAF,EAAA,KAAA2H,EAD5czH,MAAE,QAAFA,MAAE,YAAAyH,EAAA1H,EAAAgG,aAAA/E,aAAAC,IAAAwG,IAAA,IAC+S,GAAAC,aAAA,CAA4UC,MAAoGA,MAAiFC,MAAgBC,OAAA,sKAAAC,gBAAA,GAA+E,EAYt/B,MAAMC,EACFC,YAAYC,EAAwBC,EAAqBC,EAAoBC,GACzE1C,KAAKuC,uBAAyBA,EAC9BvC,KAAKwC,oBAAsBA,EAC3BxC,KAAKyC,mBAAqBA,EAC1BzC,KAAK0C,YAAcA,EACnB1C,KAAK2C,eAAiB,aACtB3C,KAAK4C,YAAWC,QACpB,CACAC,WACI9C,KAAK+C,kBAAoB/C,KAAK0C,YAAYM,OAAOC,aAAaC,QAAQC,QAAKC,KAAI,EAAGH,gBAAiBA,EAAWI,cAAW,EAAGD,KAAIC,GAAerD,KAAKuC,uBAAuBe,oBAAoBD,KAAY,EAAGE,KAAIC,GAAYxD,KAAKyD,aAAezD,KAAK0D,WAAWF,EAAQJ,IAAIO,GAAKA,EAAExI,OACrR6E,KAAK4C,SAAS,uBAClB,CACA1G,iBAAiBtB,GACb,OAAQA,GACJ,KAAK,EACD,MAAQ,uCACZ,KAAK,EACD,MAAQ,uCACZ,KAAK,EACD,MAAQ,0BACZ,KAAK,EACD,MAAQ,0BACZ,KAAK,GACD,MAAQ,aACZ,SACIgJ,iBAAYhJ,GAExB,CACAoB,mBAAmBX,GACf,OAAOA,EAAOwI,iBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,GAClD,CACAjI,eAAekI,EAAQlJ,GACnBkJ,EAAOlJ,MAAQA,EACfoF,KAAK+D,mBACT,CACAC,SAAStJ,EAAOuJ,GAEZ,OADWA,EAAIb,IAAItG,GAAS,GAAEA,EAAK3B,MAAM2B,EAAKlC,SAASsJ,KAAK,IAEhE,CACAxH,aAAahC,EAAOoC,GAChB,OAAOA,EAAKzB,MAChB,CACAH,UAAUC,GACN,MAAME,EAAS2E,KAAKuC,uBAAuB4B,cAAchJ,GACzD,GAAIE,EAAQ,CACR,MACMyI,EAAS,CACX3I,KACAE,SACAT,MAJUoF,KAAKhE,mBAAmBX,GAAQ,IAM9C,IAAI+I,EACApE,KAAKyD,cAAgBzD,KAAKyD,aAAaY,OACvCD,EAAYpE,KAAKyD,aAAazD,KAAKyD,aAAaY,OAAS,IAGzDD,EAAY,GACZpE,KAAKyD,cAAca,KAAKF,IAE5BA,EAAUE,KAAKR,GACf9D,KAAK+D,mBACT,CACJ,CACAhI,aAAa+H,GACTA,EAAO3I,GAAK6E,KAAK2C,eACjB3C,KAAK+D,mBACT,CACAxH,KAAKgI,GACD,MAAQC,eAAcC,gBAAeC,oBAAmBC,aAAcJ,EACtE,IAAIE,IAAkBD,GAAgBE,EAAkBE,KAAKlK,QAAUiK,EAAUC,KAAKlK,QAIlFsF,KAAKyD,aAAc,CACnB,MAAMoB,EAAoB7E,KAAKyD,aAAaiB,EAAkBE,KAAKlK,OAC7DoK,EAAe9E,KAAKyD,aAAakB,EAAUC,KAAKlK,OACtDmK,EAAkBE,OAAON,EAAe,GACxCK,EAAaC,OAAOP,EAAc,EAAGD,EAAMzH,KAAK8H,MAChD5E,KAAK+D,mBACT,CACJ,CACAL,WAAWsB,GACP,MAAMC,EAAiBjF,KAAKwC,oBAAoB0C,IAAI,yBACpD,IAAIC,EACJ,OAAIF,IAEAE,EAAYF,EAAeG,OAAOtI,GAAQkI,EAAaK,SAASvI,EAAK3B,MAElE6E,KAAKuC,uBAAuB+C,gBAAgBH,EACvD,CACApB,oBACI,GAAI/D,KAAKyD,aAAc,CAInB,MAAM8B,EAHYvF,KAAKyD,aAClB+B,OAAO,CAACC,EAAMxB,IAAQ,IAAIwB,KAASxB,GAAM,IACzCmB,OAAOtI,GAAQA,EAAK3B,KAAO6E,KAAK2C,gBACNS,IAAItG,KAC/B3B,GAAI2B,EAAK3B,GACTP,MAAOkC,EAAKlC,SAEhBoF,KAAKyD,aAAezD,KAAKuC,uBAAuB+C,gBAAgBC,GAChEvF,KAAKwC,oBAAoBkD,IAAI,wBAAyBH,GACtDI,WAAW,IAAM3F,KAAKyC,mBAAmBmD,eAC7C,CACJ,QACS5F,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyFoB,GAtHV/H,MAsH8C2H,OAtH9C3H,MAsHoF2H,OAtHpF3H,MAsHuHA,OAtHvHA,MAsHwJ2H,OAAc,CAA8C,QAC5SjC,KAAKkB,UAvHmF5G,MAAE,CAAA6G,KAuHJkB,EAAkBjB,UAAA,oBAAAO,MAAA,GAAAC,KAAA,EAAAC,OAAA,6lCAAAC,SAAA,SAAA1H,EAAAC,GAAA,EAAAD,IAvHhBE,MAAE,mBAAFA,CAuHsF,UAvHtFA,CAuHgI,iBAvHhIA,CAuH0J,cAvH1JA,MAAE,gBAAFA,MAAE,GAAFA,MAAE,eAAFA,MAAE,gBAAFA,cAAE,yBAAFA,MAAE,EAAAO,GAAA,gBAAFP,MAAE,YAAFA,kBAAE,YAAFA,MAAE,GAAA8B,GAAA,aAAF9B,WAuHgkH,EAAAF,IAvHhkHE,MAAE,GAAFA,MAAE,IAAFA,MAAE,iCAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,KAAAD,EAAA0I,oBAAFzI,MAAE,GAAFA,MAAE,UAAAD,EAAAoJ,aAAFnJ,CAuHwhC,eAAAD,EAAA2J,UAAoC,EAAAhC,aAAA,CAAo6G6D,MAA0EC,KAA8FA,KAA6HC,KAA6eA,KAAwJA,KAAkcA,KAA+G9D,MAAuGA,MAAgIA,MAA4FA,MAAsFA,MAA8IA,MAAgFnC,EAA8GgG,KAAqD5D,MAAgBC,OAAA,goCAAAC,gBAAA,GAA+E,EAOz5N,MAAM4D,EAAkB,CACpB,CACIC,KAAM,GACNC,UAAW7D,EACX8D,UAAW,SAIOC;;;;;;;;;;;;;;;;;;;;;;EAuB1B,MAAMC,EACF/D,YAAYI,GACR1C,KAAK0C,YAAcA,CACvB,CACAI,WACI9C,KAAKsG,cAAgBtG,KAAK0C,YACrB6D,MAAMC,MAAyB,CAChCC,QAAS,CACLC,KAAM,GACNtB,OAAQ,CACJuB,OAAQ,CAAEC,IAAI,GACd1J,MAAO,CAAE2J,MAAO,CAAC,YAAa,WAElCC,KAAM,CACFlJ,cAAemJ,MAAUC,SAIhCC,yBACAC,UAAUtC,GAAQA,EAAKuC,OAAOC,MACvC,QACSpH,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyFoF,GAlLV/L,MAkLuD2H,OAAc,CAA8C,QAC3MjC,KAAKkB,UAnLmF5G,MAAE,CAAA6G,KAmLJkF,EAA2BjF,UAAA,+BAAAO,MAAA,GAAAC,KAAA,GAAAC,OAAA,qTAAAC,SAAA,SAAA1H,EAAAC,GAAA,EAAAD,IAnLzBE,MAAE,wBAAFA,MAAE,WAAFA,MAAE,sBAAFA,MAAE,eAAFA,MAAE,EAAAsC,GAAA,mBAAFtC,cAAE,sBAAFA,MAAE,eAAFA,MAAE,EAAA0C,GAAA,mBAAF1C,cAAE,sBAAFA,MAAE,eAAFA,MAAE,GAAA6C,GAAA,mBAAF7C,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAgD,GAAA,mBAAFhD,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAoD,GAAA,mBAAFpD,WAmL6mD,EAAAF,IAnL7mDE,MAAE,QAAFA,MAAE,IAAAD,EAAAiM,gBAAFhM,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,oBAAFA,CAmL+mB,sBAnL/mBA,MAAE,GAAFA,MAAE,UAAFA,MAAE,0BAAFA,CAmLm5B,sBAnLn5BA,MAAE,GAAFA,MAAE,UAAFA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,0BAmLg7C,EAAA0H,aAAA,CAAkW6D,MAA0EwB,KAAmPpF,MAA8GA,MAAgHA,MAA6QA,MAAuM6D,KAAqD5D,KAA6DD,MAAyDA,OAAqBE,OAAA,2IAAAC,gBAAA,GAAoF,EAM5nG,MAAMkF,SACOtH,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyFqG,EAAwB,CAAoD,QAC9KtH,KAAKuH,UA3LmFjN,KAAE,CAAA6G,KA2LSmG,GAA+G,QAClNtH,KAAKwH,UA5LmFlN,MAAE,CAAAmN,QAAA,CA4L6CC,KAAYC,QAAkB,EAUlL,MAAMC,GAAuBxB;;;;;;;;;;;EAY7B,MAAMyB,EACFvF,YAAYI,GACR1C,KAAK0C,YAAcA,EACnB1C,KAAK8H,SAAW,IAAIC,IACpB/H,KAAKjC,YAAc,IAAIiK,IAAgB/J,MAAWC,YAClD8B,KAAK/B,WAAaA,KACtB,CACA6E,WACI,MAAMmF,EAAgBjI,KAAK0C,YAAYwF,SAClCC,mBACAlB,yBACAC,UAAUtC,GAAQA,EAAKwD,cAAcC,0BAAuB9M,GAC3D+M,EAAWtI,KAAK0C,YAAYM,OAAOuF,UAAUrB,UAAUtC,GAAQA,EAAK2D,SACpExK,EAAciC,KAAKjC,YAAYoF,QAAKqF,QAC1CxI,KAAKyI,YAAWC,KAAc3K,EAAakK,EAAeK,GAAUnF,QAAKwF,KAAU,EAAEC,EAAYnL,EAAc8K,KAAavI,KAAK8H,SAAS3E,QAAK0F,MAAU,IAAK,EAAGF,KAAUtK,GAAW2B,KAAK0C,YACtL6D,MAAMuC,MAA2B,CAClCC,MAAO,CAACH,GACRvK,YAEC2K,UAAUpE,GAAQA,EAAKqE,eACvB9F,QAAKC,KAAI8F,IACV,MAAMC,GAAgBP,IAAe3K,MAAWE,WAAa,SAAW,WAClEiL,GAAU,GAAEb,EAAQc,YAAYd,EAAQa,SACxCE,GAAgB,CAClBH,iBACA1L,eACA2L,WAEJ,OAAQF,EACHK,KAAKC,GAAKA,EAAErI,OAASyH,IACpBa,QAAQrG,IAAIsG,QAAeA,EAAOJ,qBAAqB,SAErE,CACAjL,UACI2B,KAAK8H,SAAS9J,MAAK,EACvB,QACSgC,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyF4G,GAtPVvN,MAsPqD2H,OAAc,CAA8C,QACzMjC,KAAKkB,UAvPmF5G,MAAE,CAAA6G,KAuPJ0G,EAAyBzG,UAAA,6BAAAO,MAAA,EAAAC,KAAA,EAAAC,OAAA,4JAAAC,SAAA,SAAA1H,EAAAC,GAAA,EAAAD,IAvPvBE,MAAE,iBAAFA,MAAE,WAAFA,MAAE,EAAAuD,GAAA,eAAFvD,MAAE,cAAAF,IAAFE,MAAE,UAAFA,MAAE,IAAAD,EAAAoO,WAAFnO,MAAE,GAAFA,MAAE,OAAFA,MAAE,IAAAD,EAAA0D,cAuPoL,EAAAiE,aAAA,CAAisC6D,MAA0EC,KAAoG7D,MAAkG6D,KAAqD5D,MAAgBC,OAAA,sHAAAC,gBAAA,GAA+E,EAOh4D,MAAMuH,GAAoBvD;;;;;;;;;;;EAY1B,MAAMwD,EACFtH,YAAYI,GACR1C,KAAK0C,YAAcA,EACnB1C,KAAKpB,MAAQ,IAAIiL,KACjB7J,KAAKnB,UAAY,IAAIgL,UAASA,MAAOC,QAAQ9J,KAAKpB,MAAMmL,UAAY,IACpE/J,KAAKvB,WAAa,IAAIuJ,IAAgB,CAClCtJ,UAAW,MACXC,KAAMqB,KAAKpB,OAEnB,CACAkE,WACI9C,KAAKgK,WAAahK,KAAKvB,WAAW0E,QAAKqF,QAAqB,EAAGpF,KAAI6G,KAC/DhL,MAAOiL,EAAMD,EAAUtL,MAAMwL,QAAQF,EAAUvL,WAAW0L,SAC1DlL,IAAKgL,EAAMD,EAAUtL,MAAM0L,MAAMJ,EAAUvL,WAAW0L,aACxD,EAAGE,KAAY,IACjB,MAAMC,EAAgBvK,KAAKgK,WAAW7G,QAAKqH,KAAY,EAAGvL,QAAOC,SAAUc,KAAK0C,YAC3E6D,MAAMkE,MAAyB,CAAExL,MAAOA,EAAMyL,cAAexL,IAAKA,EAAIwL,gBACtEzD,yBACAC,UAAUtC,GAAQA,EAAKuC,UAAO,EAAGmD,KAAY,IAClDtK,KAAK2K,iBAAmBJ,EAAcpH,QAAKC,KAAIwH,GAAOA,EAAIC,aAC1D7K,KAAK8K,iBAAmBP,EAAcpH,QAAKC,KAAIwH,GAAOA,EAAIxD,MAAM5B,OAAO,CAACuF,EAAOC,IAAUD,EAAQC,EAAMxN,aAAc,KACrHwC,KAAKiI,cAAgBjI,KAAK0C,YAAYwF,SACjCC,mBACAlB,yBACAC,UAAUtC,GAAQA,EAAKwD,cAAcC,0BAAuB9M,EACrE,QACSyE,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyF2I,GApSVtP,MAoSuD2H,OAAc,CAA8C,QAC3MjC,KAAKkB,UArSmF5G,MAAE,CAAA6G,KAqSJyI,EAA2BxI,UAAA,+BAAAO,MAAA,GAAAC,KAAA,GAAAC,OAAA,gOAAAC,SAAA,SAAA1H,EAAAC,GAAA,EAAAD,IArSzBE,MAAE,UAAFA,CAqS+G,UArS/GA,CAqS2I,WArS3IA,MAAE,GAAFA,MAAE,WAAFA,cAAE,WAAFA,MAAE,GAAFA,MAAE,eAAFA,gBAAE,UAAFA,CAqSsV,WArStVA,MAAE,IAAFA,MAAE,YAAFA,MAAE,YAAFA,MAAE,qBAAFA,cAAE,YAAFA,MAAE,IAAFA,MAAE,gBAAFA,kBAAE,YAAFA,MAAE,GAAAkE,GAAA,eAAFlE,MAAE,YAAFA,MAAE,GAAAyE,GAAA,aAAFzE,MAAE,YAAFA,SAqS0wD,EAAAF,IArS1wDE,MAAE,GAAFA,YAAE,IAAAD,EAAAsQ,mBAAFrQ,MAAE,GAAFA,YAAE,+BAAFA,MAAE,GAAFA,MAAE,IAAFA,MAAE,MAAFA,MAAE,MAAAD,EAAAyQ,kBAAFxQ,MAAE,MAAAD,EAAA4N,qBAAA1M,GAAA,KAAFjB,MAAE,GAAFA,YAAE,sCAAFA,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAD,EAAAoE,aAAFnE,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAD,EAAA2P,aAqS4pD,EAAAhI,aAAA,CAAglB8D,KAA+FA,KAAqD5D,KAA6DD,MAA+DA,OAAqBE,OAAA,6iBAAAC,gBAAA,GAAoF,EAM5sF,MAAM6I,SACOjL,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyFgK,EAAwB,CAAoD,QAC9KjL,KAAKuH,UA7SmFjN,KAAE,CAAA6G,KA6SS8J,GAAiG,QACpMjL,KAAKwH,UA9SmFlN,MAAE,CAAAmN,QAAA,CA8S6CC,OAAgB,EAUpK,MAAMwD,EAAkC,CACpC,CAAE/P,GAAI,UAAWP,MAAO,IACxB,CAAEO,GAAI,eAAgBP,MAAO,GAC7B,CAAEO,GAAI,eAAgBP,MAAO,IAE3BuQ,EAAkB,CACpBjC,QAAS,CACL5N,SAAO8P,KAAO,qBACdvH,gBAAiB,CAAC,EAAG,EAAG,IACxBvD,cAAeA,IAAMuH,EACrB1L,oBAAqB,CAACkP,MAAWC,YAErCC,aAAc,CACVjQ,SAAO8P,KAAO,4BACd9K,cAAeA,IAAMsJ,EACrB/F,gBAAiB,CAAC,EAAG,EAAG,EAAG,IAC3B1H,oBAAqB,CAACkP,MAAWC,YAErCE,aAAc,CACVlQ,SAAO8P,KAAO,2BACd9K,cAAeA,IAAM+F,EACrBxC,gBAAiB,CAAC,EAAG,EAAG,IACxB1H,oBAAqB,CAACkP,MAAWC,aAIzC,MAAMG,EACFnJ,YAAYC,GACRmJ,OAAOjC,QAAQ0B,GAAiB/H,IAAI,EAAEjI,EAAIE,MACjCkH,EAAuB4B,cAAchJ,IACtCoH,EAAuBoJ,eAAexQ,EAAIE,EAAM,GAGC,IAArDkH,EAAuBqJ,mBAAmBvH,QAC1C9B,EAAuBsJ,iBAAiBX,EAEhD,QACSlL,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyFwK,GA7VVnR,MA6V2C2H,OAAyB,CAA6C,QACzMjC,KAAKuH,UA9VmFjN,KAAE,CAAA6G,KA8VSsK,GAAyJ,QAC5PzL,KAAKwH,UA/VmFlN,MAAE,CAAAmN,QAAA,CA+VoCE,MAAcmE,KAAaC,SAAS/F,KAAsB,EAUrM,MAAMgG,SACOhM,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyF+K,EAAmB,CAAqD,QAC1KhM,KAAKkB,UA3WmF5G,MAAE,CAAA6G,KA2WJ6K,EAAmB5K,UAAA,sBAAAO,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAA1H,EAAAC,GAAA,EAAAD,IA3WjBE,MAAE,OAAFA,MAAE,4BAAFA,QA2WsG,EAAA8H,gBAAA,GAA4E,EAMvR,MAAM6J,SACOjM,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyFgL,EAAgB,CAAoD,QACtKjM,KAAKuH,UAnXmFjN,KAAE,CAAA6G,KAmXS8K,GAA0D,QAC7JjM,KAAKwH,UApXmFlN,MAAE,GAoX8B,EASrI,MAAM4R,EACF5J,YAAYI,GACR1C,KAAK0C,YAAcA,EACnB1C,KAAKT,QAAU4M,MACfnM,KAAKoM,SAAQC,SAAeD,MAC5BpM,KAAKX,uBAAsBgN,SAAehN,oBAC1CW,KAAKV,eAAc+M,SAAe/M,WACtC,CACAwD,WACI9C,KAAKsM,eAAiBtM,KAAK0C,YAAY6J,cAClCC,yBACAtF,UAAUtC,GAAQA,EAAK6H,qBAAuB,KACvD,QACSzM,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyFiL,GA1YV5R,MA0YkD2H,OAAc,CAA8C,QACtMjC,KAAKkB,UA3YmF5G,MAAE,CAAA6G,KA2YJ+K,EAAsB9K,UAAA,yBAAAO,MAAA,EAAAC,KAAA,EAAAC,OAAA,2GAAAC,SAAA,SAAA1H,EAAAC,GAAA,EAAAD,IA3YpBE,MAAE,EAAAkF,GAAA,aAAFlF,MAAE,WAAFA,MAAE,WAAFA,MAAE,gBAAFA,SA2YgpB,EAAAF,GA3YhpBE,MAAE,OAAFA,MAAE,IAAAD,EAAAiS,gBA2YiH,EAAAtK,aAAA,CAAwrB6D,MAA0EC,KAA+FA,KAAqD7D,OAAcE,OAAA,6HAAAC,gBAAA,GAA6E,EAMzsC,MAAMsK,SACO1M,KAAKgB,UAAI,SAAAC,GAAA,WAAAA,GAAyFyL,EAAmB,CAAoD,QACzK1M,KAAKuH,UAnZmFjN,KAAE,CAAA6G,KAmZSuL,GAAuF,QAC1L1M,KAAKwH,UApZmFlN,MAAE,CAAAmN,QAAA,CAoZwCC,OAAgB","names":["_c0","_c1","DashboardWidgetComponent_ng_template_2_Template","rf","ctx","i0","DashboardWidgetComponent_ng_template_3_Template","_c2","a0","index","_c3","width","DashboardComponent_button_9_Template","_r1","widget_r2","$implicit","ctx_r2","addWidget","id","tmp_2_0","config","title","undefined","DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_button_11_Template","_r6","width_r7","widget_r8","setWidgetWidth","DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_Template","_r5","removeWidget","getSupportedWidths","DashboardComponent_div_12_div_1_Template","getClassForWidth","requiresPermissions","DashboardComponent_div_12_Template","_r4","$event","drop","row_r9","rowIndex_r10","trackRowItem","_c4","LatestOrdersWidgetComponent_ng_template_4_Template","order_r1","item","code","LatestOrdersWidgetComponent_ng_template_7_Template","order_r2","state","LatestOrdersWidgetComponent_ng_template_10_Template","order_r3","customer","LatestOrdersWidgetComponent_ng_template_13_Template","order_r4","totalWithTax","currencyCode","LatestOrdersWidgetComponent_ng_template_16_Template","order_r5","orderPlacedAt","OrderChartWidgetComponent_div_2_Template","ctx_r1","metricType$","next","MetricType","OrderTotal","OrderCount","AverageOrderValue","refresh","activeMetricType_r3","ngIf","OrderSummaryWidgetComponent_div_18_Template","selection$","timeframe","date","today","yesterday","selection_r3","OrderSummaryWidgetComponent_div_20_Template","range_r4","start","end","WelcomeWidgetComponent_div_0_p_7_Template","ctx_r0","hideVendureBranding","hideVersion","version","WelcomeWidgetComponent_div_0_Template","administrator_r2","firstName","lastName","user","lastLogin","DashboardWidgetComponent","ngAfterViewInit","this","loadWidget","_this","_asyncToGenerator","loadComponentResult","widgetConfig","loadComponent","componentType","Promise","componentRef","portal","createComponent","changeDetectorRef","detectChanges","ngOnDestroy","destroy","ɵfac","t","ɵcmp","type","selectors","viewQuery","ViewContainerRef","_t","first","inputs","ngContentSelectors","decls","vars","consts","template","tmp_1_0","dependencies","i1","i2","styles","changeDetection","DashboardComponent","constructor","dashboardWidgetService","localStorageService","changedDetectorRef","dataService","deletionMarker","setTitle","titleSetter","ngOnInit","availableWidgets$","client","userStatus","stream$","pipe","map","permissions","getAvailableWidgets","tap","widgets","widgetLayout","initLayout","w","assertNever","supportedWidths","widget","recalculateLayout","trackRow","row","join","getWidgetById","targetRow","length","push","event","currentIndex","previousIndex","previousContainer","container","data","previousLayoutRow","newLayoutRow","splice","availableIds","savedLayoutDef","get","layoutDef","filter","includes","getWidgetLayout","newLayoutDef","reduce","flat","set","setTimeout","markForCheck","i2$1","i3","i4","dashboardRoutes","path","component","pathMatch","gql","LatestOrdersWidgetComponent","latestOrders$","query","GetLatestOrdersDocument","options","take","active","eq","notIn","sort","SortOrder","DESC","refetchOnChannelChange","mapStream","orders","items","i3$1","LatestOrdersWidgetModule","ɵmod","ɵinj","imports","CoreModule","SharedModule","GET_ORDER_CHART_DATA","OrderChartWidgetComponent","refresh$","Subject","BehaviorSubject","currencyCode$","settings","getActiveChannel","activeChannel","defaultCurrencyCode","uiState$","uiState","distinctUntilChanged","metrics$","combineLatest","switchMap","metricType","startWith","GetOrderChartDataDocument","types","mapSingle","metricSummary","metrics","formatValueAs","locale","language","formatOptions","find","m","entries","entry","GET_ORDER_SUMMARY","OrderSummaryWidgetComponent","Date","setDate","getDate","dateRange$","selection","dayjs","startOf","toDate","endOf","shareReplay","orderSummary$","switchMap$1","GetOrderSummaryDocument","toISOString","totalOrderCount$","res","totalItems","totalOrderValue$","total","order","OrderSummaryWidgetModule","DEFAULT_DASHBOARD_WIDGET_LAYOUT","DEFAULT_WIDGETS","marker","Permission","ReadOrder","orderSummary","latestOrders","DashboardModule","Object","registerWidget","getDefaultLayout","setDefaultLayout","RouterModule","forChild","TestWidgetComponent","TestWidgetModule","WelcomeWidgetComponent","ADMIN_UI_VERSION","brand","getAppConfig","administrator$","administrator","getActiveAdministrator","activeAdministrator","WelcomeWidgetModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-dashboard.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { ViewContainerRef, Component, ChangeDetectionStrategy, Input, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { titleSetter, GetLatestOrdersDocument, SortOrder, CoreModule, SharedModule, MetricType, GetOrderChartDataDocument, GetOrderSummaryDocument, Permission, ADMIN_UI_VERSION, getAppConfig } from '@vendure/admin-ui/core';\nimport { assertNever } from '@vendure/common/lib/shared-utils';\nimport { map, tap, distinctUntilChanged, startWith, shareReplay, switchMap as switchMap$1 } from 'rxjs/operators';\nimport * as i2$1 from '@clr/angular';\nimport * as i3 from '@angular/common';\nimport * as i4 from '@angular/cdk/drag-drop';\nimport * as i2 from '@ngx-translate/core';\nimport * as i3$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport { gql } from 'apollo-angular';\nimport { Subject, BehaviorSubject, combineLatest, switchMap } from 'rxjs';\nimport dayjs from 'dayjs';\n\nclass DashboardWidgetComponent {\n    ngAfterViewInit() {\n        this.loadWidget();\n    }\n    async loadWidget() {\n        const loadComponentResult = this.widgetConfig.loadComponent();\n        const componentType = loadComponentResult instanceof Promise ? await loadComponentResult : loadComponentResult;\n        this.componentRef = this.portal.createComponent(componentType);\n        this.componentRef.changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DashboardWidgetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: DashboardWidgetComponent, selector: \"vdr-dashboard-widget\", inputs: { widgetConfig: \"widgetConfig\" }, viewQueries: [{ propertyName: \"portal\", first: true, predicate: [\"portal\"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: \"<vdr-card [title]=\\\"widgetConfig.title ?? '' | translate\\\">\\r\\n    <ng-template vdrCardControls>\\r\\n        <ng-content></ng-content>\\r\\n    </ng-template>\\r\\n    <ng-template #portal></ng-template>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}.card{margin-top:0;min-height:200px}.card-header{display:flex;justify-content:space-between}\\n\"], dependencies: [{ kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"directive\", type: i1.CardControlsDirective, selector: \"[vdrCardControls]\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DashboardWidgetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-dashboard-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-card [title]=\\\"widgetConfig.title ?? '' | translate\\\">\\r\\n    <ng-template vdrCardControls>\\r\\n        <ng-content></ng-content>\\r\\n    </ng-template>\\r\\n    <ng-template #portal></ng-template>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}.card{margin-top:0;min-height:200px}.card-header{display:flex;justify-content:space-between}\\n\"] }]\n        }], propDecorators: { widgetConfig: [{\n                type: Input\n            }], portal: [{\n                type: ViewChild,\n                args: ['portal', { read: ViewContainerRef }]\n            }] } });\n\nclass DashboardComponent {\n    constructor(dashboardWidgetService, localStorageService, changedDetectorRef, dataService) {\n        this.dashboardWidgetService = dashboardWidgetService;\n        this.localStorageService = localStorageService;\n        this.changedDetectorRef = changedDetectorRef;\n        this.dataService = dataService;\n        this.deletionMarker = '__delete__';\n        this.setTitle = titleSetter();\n    }\n    ngOnInit() {\n        this.availableWidgets$ = this.dataService.client.userStatus().stream$.pipe(map(({ userStatus }) => userStatus.permissions), map(permissions => this.dashboardWidgetService.getAvailableWidgets(permissions)), tap(widgets => (this.widgetLayout = this.initLayout(widgets.map(w => w.id)))));\n        this.setTitle('breadcrumb.dashboard');\n    }\n    getClassForWidth(width) {\n        switch (width) {\n            case 3:\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-3`;\n            case 4:\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-4`;\n            case 6:\n                return `clr-col-12 clr-col-lg-6`;\n            case 8:\n                return `clr-col-12 clr-col-lg-8`;\n            case 12:\n                return `clr-col-12`;\n            default:\n                assertNever(width);\n        }\n    }\n    getSupportedWidths(config) {\n        return config.supportedWidths || [3, 4, 6, 8, 12];\n    }\n    setWidgetWidth(widget, width) {\n        widget.width = width;\n        this.recalculateLayout();\n    }\n    trackRow(index, row) {\n        const id = row.map(item => `${item.id}:${item.width}`).join('|');\n        return id;\n    }\n    trackRowItem(index, item) {\n        return item.config;\n    }\n    addWidget(id) {\n        const config = this.dashboardWidgetService.getWidgetById(id);\n        if (config) {\n            const width = this.getSupportedWidths(config)[0];\n            const widget = {\n                id,\n                config,\n                width,\n            };\n            let targetRow;\n            if (this.widgetLayout && this.widgetLayout.length) {\n                targetRow = this.widgetLayout[this.widgetLayout.length - 1];\n            }\n            else {\n                targetRow = [];\n                this.widgetLayout?.push(targetRow);\n            }\n            targetRow.push(widget);\n            this.recalculateLayout();\n        }\n    }\n    removeWidget(widget) {\n        widget.id = this.deletionMarker;\n        this.recalculateLayout();\n    }\n    drop(event) {\n        const { currentIndex, previousIndex, previousContainer, container } = event;\n        if (previousIndex === currentIndex && previousContainer.data.index === container.data.index) {\n            // Nothing changed\n            return;\n        }\n        if (this.widgetLayout) {\n            const previousLayoutRow = this.widgetLayout[previousContainer.data.index];\n            const newLayoutRow = this.widgetLayout[container.data.index];\n            previousLayoutRow.splice(previousIndex, 1);\n            newLayoutRow.splice(currentIndex, 0, event.item.data);\n            this.recalculateLayout();\n        }\n    }\n    initLayout(availableIds) {\n        const savedLayoutDef = this.localStorageService.get('dashboardWidgetLayout');\n        let layoutDef;\n        if (savedLayoutDef) {\n            // validate all the IDs from the saved layout are still available\n            layoutDef = savedLayoutDef.filter(item => availableIds.includes(item.id));\n        }\n        return this.dashboardWidgetService.getWidgetLayout(layoutDef);\n    }\n    recalculateLayout() {\n        if (this.widgetLayout) {\n            const flattened = this.widgetLayout\n                .reduce((flat, row) => [...flat, ...row], [])\n                .filter(item => item.id !== this.deletionMarker);\n            const newLayoutDef = flattened.map(item => ({\n                id: item.id,\n                width: item.width,\n            }));\n            this.widgetLayout = this.dashboardWidgetService.getWidgetLayout(newLayoutDef);\n            this.localStorageService.set('dashboardWidgetLayout', newLayoutDef);\n            setTimeout(() => this.changedDetectorRef.markForCheck());\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DashboardComponent, deps: [{ token: i1.DashboardWidgetService }, { token: i1.LocalStorageService }, { token: i0.ChangeDetectorRef }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: DashboardComponent, selector: \"vdr-dashboard\", ngImport: i0, template: \"<vdr-page-block>\\r\\n    <div class=\\\"widget-header mb-1\\\">\\r\\n        <vdr-dropdown>\\r\\n            <button class=\\\"btn btn-secondary btn-sm\\\" vdrDropdownTrigger>\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'dashboard.add-widget' | translate }}\\r\\n                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n            </button>\\r\\n            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                <button\\r\\n                    vdrDropdownItem\\r\\n                    *ngFor=\\\"let widget of availableWidgets$ | async\\\"\\r\\n                    (click)=\\\"addWidget(widget.id)\\\"\\r\\n                >\\r\\n                    {{ (widget.config.title ?? widget.id) | translate }}\\r\\n                </button>\\r\\n            </vdr-dropdown-menu>\\r\\n        </vdr-dropdown>\\r\\n    </div>\\r\\n    <div cdkDropListGroup>\\r\\n        <div\\r\\n            class=\\\"clr-row dashboard-row\\\"\\r\\n            *ngFor=\\\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\\\"\\r\\n            cdkDropList\\r\\n            (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n            cdkDropListOrientation=\\\"horizontal\\\"\\r\\n            [cdkDropListData]=\\\"{ index: rowIndex }\\\"\\r\\n        >\\r\\n            <div\\r\\n                *ngFor=\\\"let widget of row; trackBy: trackRowItem\\\"\\r\\n                class=\\\"dashboard-item\\\"\\r\\n                [ngClass]=\\\"getClassForWidth(widget.width)\\\"\\r\\n                cdkDrag\\r\\n                [cdkDragData]=\\\"widget\\\"\\r\\n            >\\r\\n                <vdr-dashboard-widget\\r\\n                    *vdrIfPermissions=\\\"widget.config.requiresPermissions || null\\\"\\r\\n                    [widgetConfig]=\\\"widget.config\\\"\\r\\n                >\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle\\\" cdkDragHandle>\\r\\n                            <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n                        </div>\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                <h4 class=\\\"dropdown-header\\\">{{ 'dashboard.widget-resize' | translate }}</h4>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    [disabled]=\\\"width === widget.width\\\"\\r\\n                                    *ngFor=\\\"let width of getSupportedWidths(widget.config)\\\"\\r\\n                                    (click)=\\\"setWidgetWidth(widget, width)\\\"\\r\\n                                >\\r\\n                                    {{ 'dashboard.widget-width' | translate : { width: width } }}\\r\\n                                </button>\\r\\n                                <div class=\\\"dropdown-divider\\\" role=\\\"separator\\\"></div>\\r\\n                                <button vdrDropdownItem (click)=\\\"removeWidget(widget)\\\">\\r\\n                                    <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                    {{ 'dashboard.remove-widget' | translate }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </vdr-dashboard-widget>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".widget-header{display:flex;justify-content:flex-end}.placeholder{color:var(--color-grey-300);text-align:center}.placeholder .version{font-size:3em;margin:24px;line-height:1em}.placeholder ::ng-deep .clr-i-outline{fill:var(--color-grey-200)}vdr-dashboard-widget{margin-bottom:24px}.drag-handle{cursor:move}.cdk-drag-preview{box-sizing:border-box;border-radius:4px}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.dashboard-row{padding:0;border-width:1;margin-bottom:6px;transition:padding .2s,margin .2s}.dashboard-row.cdk-drop-list-dragging,.dashboard-row.cdk-drop-list-receiving{border:2px dashed var(--color-component-border-200);border-radius:var(--border-radius);padding:6px}.dashboard-row.cdk-drop-list-dragging .dashboard-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i4.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i4.CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: [\"cdkDropListGroupDisabled\"], exportAs: [\"cdkDropListGroup\"] }, { kind: \"directive\", type: i4.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"directive\", type: i4.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: DashboardWidgetComponent, selector: \"vdr-dashboard-widget\", inputs: [\"widgetConfig\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DashboardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-dashboard', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <div class=\\\"widget-header mb-1\\\">\\r\\n        <vdr-dropdown>\\r\\n            <button class=\\\"btn btn-secondary btn-sm\\\" vdrDropdownTrigger>\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'dashboard.add-widget' | translate }}\\r\\n                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n            </button>\\r\\n            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                <button\\r\\n                    vdrDropdownItem\\r\\n                    *ngFor=\\\"let widget of availableWidgets$ | async\\\"\\r\\n                    (click)=\\\"addWidget(widget.id)\\\"\\r\\n                >\\r\\n                    {{ (widget.config.title ?? widget.id) | translate }}\\r\\n                </button>\\r\\n            </vdr-dropdown-menu>\\r\\n        </vdr-dropdown>\\r\\n    </div>\\r\\n    <div cdkDropListGroup>\\r\\n        <div\\r\\n            class=\\\"clr-row dashboard-row\\\"\\r\\n            *ngFor=\\\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\\\"\\r\\n            cdkDropList\\r\\n            (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n            cdkDropListOrientation=\\\"horizontal\\\"\\r\\n            [cdkDropListData]=\\\"{ index: rowIndex }\\\"\\r\\n        >\\r\\n            <div\\r\\n                *ngFor=\\\"let widget of row; trackBy: trackRowItem\\\"\\r\\n                class=\\\"dashboard-item\\\"\\r\\n                [ngClass]=\\\"getClassForWidth(widget.width)\\\"\\r\\n                cdkDrag\\r\\n                [cdkDragData]=\\\"widget\\\"\\r\\n            >\\r\\n                <vdr-dashboard-widget\\r\\n                    *vdrIfPermissions=\\\"widget.config.requiresPermissions || null\\\"\\r\\n                    [widgetConfig]=\\\"widget.config\\\"\\r\\n                >\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle\\\" cdkDragHandle>\\r\\n                            <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n                        </div>\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                <h4 class=\\\"dropdown-header\\\">{{ 'dashboard.widget-resize' | translate }}</h4>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    [disabled]=\\\"width === widget.width\\\"\\r\\n                                    *ngFor=\\\"let width of getSupportedWidths(widget.config)\\\"\\r\\n                                    (click)=\\\"setWidgetWidth(widget, width)\\\"\\r\\n                                >\\r\\n                                    {{ 'dashboard.widget-width' | translate : { width: width } }}\\r\\n                                </button>\\r\\n                                <div class=\\\"dropdown-divider\\\" role=\\\"separator\\\"></div>\\r\\n                                <button vdrDropdownItem (click)=\\\"removeWidget(widget)\\\">\\r\\n                                    <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                    {{ 'dashboard.remove-widget' | translate }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </vdr-dashboard-widget>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".widget-header{display:flex;justify-content:flex-end}.placeholder{color:var(--color-grey-300);text-align:center}.placeholder .version{font-size:3em;margin:24px;line-height:1em}.placeholder ::ng-deep .clr-i-outline{fill:var(--color-grey-200)}vdr-dashboard-widget{margin-bottom:24px}.drag-handle{cursor:move}.cdk-drag-preview{box-sizing:border-box;border-radius:4px}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.dashboard-row{padding:0;border-width:1;margin-bottom:6px;transition:padding .2s,margin .2s}.dashboard-row.cdk-drop-list-dragging,.dashboard-row.cdk-drop-list-receiving{border:2px dashed var(--color-component-border-200);border-radius:var(--border-radius);padding:6px}.dashboard-row.cdk-drop-list-dragging .dashboard-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DashboardWidgetService }, { type: i1.LocalStorageService }, { type: i0.ChangeDetectorRef }, { type: i1.DataService }] });\n\nconst dashboardRoutes = [\n    {\n        path: '',\n        component: DashboardComponent,\n        pathMatch: 'full',\n    },\n];\n\nconst GET_LATEST_ORDERS = gql `\r\n    query GetLatestOrders($options: OrderListOptions) {\r\n        orders(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                type\r\n                orderPlacedAt\r\n                code\r\n                state\r\n                total\r\n                totalWithTax\r\n                currencyCode\r\n                customer {\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\nclass LatestOrdersWidgetComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n    }\n    ngOnInit() {\n        this.latestOrders$ = this.dataService\n            .query(GetLatestOrdersDocument, {\n            options: {\n                take: 10,\n                filter: {\n                    active: { eq: false },\n                    state: { notIn: ['Cancelled', 'Draft'] },\n                },\n                sort: {\n                    orderPlacedAt: SortOrder.DESC,\n                },\n            },\n        })\n            .refetchOnChannelChange()\n            .mapStream(data => data.orders.items);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LatestOrdersWidgetComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: LatestOrdersWidgetComponent, selector: \"vdr-latest-orders-widget\", ngImport: i0, template: \"<vdr-data-table-2 [items]=\\\"latestOrders$ | async\\\" id=\\\"latest-orders-widget-list\\\">\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/orders/', order.id]\\\"\\r\\n                ><span>{{ order.code }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.state' | translate\\\" id=\\\"state\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.customer' | translate\\\" id=\\\"customer\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-customer-label [customer]=\\\"order.customer\\\"></vdr-customer-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.placed-at' | translate\\\" id=\\\"placed-at\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.orderPlacedAt | timeAgo }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"vdr-data-table ::ng-deep table{margin-top:0}vdr-order-state-label{display:inline-block;margin-top:2px}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.CustomerLabelComponent, selector: \"vdr-customer-label\", inputs: [\"customer\"] }, { kind: \"component\", type: i1.OrderStateLabelComponent, selector: \"vdr-order-state-label\", inputs: [\"state\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.TimeAgoPipe, name: \"timeAgo\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LatestOrdersWidgetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-latest-orders-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-data-table-2 [items]=\\\"latestOrders$ | async\\\" id=\\\"latest-orders-widget-list\\\">\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/orders/', order.id]\\\"\\r\\n                ><span>{{ order.code }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.state' | translate\\\" id=\\\"state\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.customer' | translate\\\" id=\\\"customer\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-customer-label [customer]=\\\"order.customer\\\"></vdr-customer-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.placed-at' | translate\\\" id=\\\"placed-at\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.orderPlacedAt | timeAgo }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"vdr-data-table ::ng-deep table{margin-top:0}vdr-order-state-label{display:inline-block;margin-top:2px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\nclass LatestOrdersWidgetModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LatestOrdersWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: LatestOrdersWidgetModule, declarations: [LatestOrdersWidgetComponent], imports: [CoreModule, SharedModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LatestOrdersWidgetModule, imports: [CoreModule, SharedModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: LatestOrdersWidgetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule, SharedModule],\n                    declarations: [LatestOrdersWidgetComponent],\n                }]\n        }] });\n\nconst GET_ORDER_CHART_DATA = gql `\r\n    query GetOrderChartData($refresh: Boolean, $types: [MetricType!]!) {\r\n        metricSummary(input: { interval: Daily, types: $types, refresh: $refresh }) {\r\n            interval\r\n            type\r\n            entries {\r\n                label\r\n                value\r\n            }\r\n        }\r\n    }\r\n`;\nclass OrderChartWidgetComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.refresh$ = new Subject();\n        this.metricType$ = new BehaviorSubject(MetricType.OrderTotal);\n        this.MetricType = MetricType;\n    }\n    ngOnInit() {\n        const currencyCode$ = this.dataService.settings\n            .getActiveChannel()\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\n        const uiState$ = this.dataService.client.uiState().mapStream(data => data.uiState);\n        const metricType$ = this.metricType$.pipe(distinctUntilChanged());\n        this.metrics$ = combineLatest(metricType$, currencyCode$, uiState$).pipe(switchMap(([metricType, currencyCode, uiState]) => this.refresh$.pipe(startWith(false), switchMap(refresh => this.dataService\n            .query(GetOrderChartDataDocument, {\n            types: [metricType],\n            refresh,\n        })\n            .mapSingle(data => data.metricSummary)\n            .pipe(map(metrics => {\n            const formatValueAs = metricType === MetricType.OrderCount ? 'number' : 'currency';\n            const locale = `${uiState.language}-${uiState.locale}`;\n            const formatOptions = {\n                formatValueAs,\n                currencyCode,\n                locale,\n            };\n            return (metrics\n                .find(m => m.type === metricType)\n                ?.entries.map(entry => ({ ...entry, formatOptions })) ?? []);\n        }))))));\n    }\n    refresh() {\n        this.refresh$.next(true);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderChartWidgetComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderChartWidgetComponent, selector: \"vdr-order-chart-widget\", ngImport: i0, template: \"<vdr-chart [entries]=\\\"metrics$ | async\\\" />\\r\\n<div class=\\\"flex\\\" *ngIf=\\\"metricType$ | async as activeMetricType\\\">\\r\\n    <button\\r\\n        class=\\\"button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.OrderTotal)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.OrderTotal\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-order-total-value' | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n        class=\\\"ml-1 button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.OrderCount)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.OrderCount\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-number-of-orders' | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n        class=\\\"ml-1 button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.AverageOrderValue)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.AverageOrderValue\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-average-order-value' | translate }}\\r\\n    </button>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <button class=\\\"button-small\\\" (click)=\\\"refresh()\\\">\\r\\n        <clr-icon shape=\\\"refresh\\\"></clr-icon>\\r\\n    </button>\\r\\n</div>\\r\\n\", styles: [\".button-small.active{background-color:var(--color-primary-200);color:var(--color-primary-900)}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.ChartComponent, selector: \"vdr-chart\", inputs: [\"entries\", \"options\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderChartWidgetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-chart-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-chart [entries]=\\\"metrics$ | async\\\" />\\r\\n<div class=\\\"flex\\\" *ngIf=\\\"metricType$ | async as activeMetricType\\\">\\r\\n    <button\\r\\n        class=\\\"button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.OrderTotal)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.OrderTotal\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-order-total-value' | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n        class=\\\"ml-1 button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.OrderCount)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.OrderCount\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-number-of-orders' | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n        class=\\\"ml-1 button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.AverageOrderValue)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.AverageOrderValue\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-average-order-value' | translate }}\\r\\n    </button>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <button class=\\\"button-small\\\" (click)=\\\"refresh()\\\">\\r\\n        <clr-icon shape=\\\"refresh\\\"></clr-icon>\\r\\n    </button>\\r\\n</div>\\r\\n\", styles: [\".button-small.active{background-color:var(--color-primary-200);color:var(--color-primary-900)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\nconst GET_ORDER_SUMMARY = gql `\r\n    query GetOrderSummary($start: DateTime!, $end: DateTime!) {\r\n        orders(options: { filter: { orderPlacedAt: { between: { start: $start, end: $end } } } }) {\r\n            totalItems\r\n            items {\r\n                id\r\n                totalWithTax\r\n                currencyCode\r\n            }\r\n        }\r\n    }\r\n`;\nclass OrderSummaryWidgetComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.today = new Date();\n        this.yesterday = new Date(new Date().setDate(this.today.getDate() - 1));\n        this.selection$ = new BehaviorSubject({\n            timeframe: 'day',\n            date: this.today,\n        });\n    }\n    ngOnInit() {\n        this.dateRange$ = this.selection$.pipe(distinctUntilChanged(), map(selection => ({\n            start: dayjs(selection.date).startOf(selection.timeframe).toDate(),\n            end: dayjs(selection.date).endOf(selection.timeframe).toDate(),\n        })), shareReplay(1));\n        const orderSummary$ = this.dateRange$.pipe(switchMap$1(({ start, end }) => this.dataService\n            .query(GetOrderSummaryDocument, { start: start.toISOString(), end: end.toISOString() })\n            .refetchOnChannelChange()\n            .mapStream(data => data.orders)), shareReplay(1));\n        this.totalOrderCount$ = orderSummary$.pipe(map(res => res.totalItems));\n        this.totalOrderValue$ = orderSummary$.pipe(map(res => res.items.reduce((total, order) => total + order.totalWithTax, 0)));\n        this.currencyCode$ = this.dataService.settings\n            .getActiveChannel()\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderSummaryWidgetComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: OrderSummaryWidgetComponent, selector: \"vdr-order-summary-widget\", ngImport: i0, template: \"<div class=\\\"stats\\\">\\r\\n    <div class=\\\"stat\\\">\\r\\n        <div class=\\\"stat-figure\\\">{{ totalOrderCount$ | async }}</div>\\r\\n        <div class=\\\"stat-label\\\">{{ 'dashboard.total-orders' | translate }}</div>\\r\\n    </div>\\r\\n    <div class=\\\"stat\\\">\\r\\n        <div class=\\\"stat-figure\\\">\\r\\n            {{ totalOrderValue$ | async | localeCurrency: (currencyCode$ | async) || undefined }}\\r\\n        </div>\\r\\n        <div class=\\\"stat-label\\\">{{ 'dashboard.total-order-value' | translate }}</div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"footer\\\">\\r\\n    <div class=\\\"flex\\\" *ngIf=\\\"selection$ | async as selection\\\">\\r\\n        <button class=\\\"button-small\\\" [class.active]=\\\"selection.date === today\\\" (click)=\\\"selection$.next({timeframe: 'day', date: today})\\\">\\r\\n            {{ 'dashboard.today' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.date === yesterday\\\" (click)=\\\"selection$.next({timeframe: 'day', date: yesterday})\\\">\\r\\n            {{ 'dashboard.yesterday' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.timeframe === 'week'\\\" (click)=\\\"selection$.next({timeframe: 'week'})\\\">\\r\\n            {{ 'dashboard.thisWeek' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.timeframe === 'month'\\\" (click)=\\\"selection$.next({timeframe: 'month'})\\\">\\r\\n            {{ 'dashboard.thisMonth' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"date-range\\\" *ngIf=\\\"dateRange$ | async as range\\\">\\r\\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".stats{display:flex;justify-content:space-evenly}.stat{text-align:center}.stat-figure{font-size:2rem;line-height:3rem}.stat-label{text-transform:uppercase}.date-range{margin-top:calc(var(--space-unit) * 3);font-size:var(--font-size-xs)}.footer{margin-top:24px;display:flex;flex-direction:column;justify-content:space-between}.button-small.active{background-color:var(--color-primary-200);color:var(--color-primary-900)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderSummaryWidgetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-order-summary-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"stats\\\">\\r\\n    <div class=\\\"stat\\\">\\r\\n        <div class=\\\"stat-figure\\\">{{ totalOrderCount$ | async }}</div>\\r\\n        <div class=\\\"stat-label\\\">{{ 'dashboard.total-orders' | translate }}</div>\\r\\n    </div>\\r\\n    <div class=\\\"stat\\\">\\r\\n        <div class=\\\"stat-figure\\\">\\r\\n            {{ totalOrderValue$ | async | localeCurrency: (currencyCode$ | async) || undefined }}\\r\\n        </div>\\r\\n        <div class=\\\"stat-label\\\">{{ 'dashboard.total-order-value' | translate }}</div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"footer\\\">\\r\\n    <div class=\\\"flex\\\" *ngIf=\\\"selection$ | async as selection\\\">\\r\\n        <button class=\\\"button-small\\\" [class.active]=\\\"selection.date === today\\\" (click)=\\\"selection$.next({timeframe: 'day', date: today})\\\">\\r\\n            {{ 'dashboard.today' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.date === yesterday\\\" (click)=\\\"selection$.next({timeframe: 'day', date: yesterday})\\\">\\r\\n            {{ 'dashboard.yesterday' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.timeframe === 'week'\\\" (click)=\\\"selection$.next({timeframe: 'week'})\\\">\\r\\n            {{ 'dashboard.thisWeek' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.timeframe === 'month'\\\" (click)=\\\"selection$.next({timeframe: 'month'})\\\">\\r\\n            {{ 'dashboard.thisMonth' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"date-range\\\" *ngIf=\\\"dateRange$ | async as range\\\">\\r\\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".stats{display:flex;justify-content:space-evenly}.stat{text-align:center}.stat-figure{font-size:2rem;line-height:3rem}.stat-label{text-transform:uppercase}.date-range{margin-top:calc(var(--space-unit) * 3);font-size:var(--font-size-xs)}.footer{margin-top:24px;display:flex;flex-direction:column;justify-content:space-between}.button-small.active{background-color:var(--color-primary-200);color:var(--color-primary-900)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\nclass OrderSummaryWidgetModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderSummaryWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderSummaryWidgetModule, declarations: [OrderSummaryWidgetComponent], imports: [CoreModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderSummaryWidgetModule, imports: [CoreModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: OrderSummaryWidgetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [OrderSummaryWidgetComponent],\n                }]\n        }] });\n\nconst DEFAULT_DASHBOARD_WIDGET_LAYOUT = [\n    { id: 'metrics', width: 12 },\n    { id: 'orderSummary', width: 6 },\n    { id: 'latestOrders', width: 6 },\n];\nconst DEFAULT_WIDGETS = {\n    metrics: {\n        title: marker('dashboard.metrics'),\n        supportedWidths: [6, 8, 12],\n        loadComponent: () => OrderChartWidgetComponent,\n        requiresPermissions: [Permission.ReadOrder],\n    },\n    orderSummary: {\n        title: marker('dashboard.orders-summary'),\n        loadComponent: () => OrderSummaryWidgetComponent,\n        supportedWidths: [4, 6, 8, 12],\n        requiresPermissions: [Permission.ReadOrder],\n    },\n    latestOrders: {\n        title: marker('dashboard.latest-orders'),\n        loadComponent: () => LatestOrdersWidgetComponent,\n        supportedWidths: [6, 8, 12],\n        requiresPermissions: [Permission.ReadOrder],\n    },\n};\n\nclass DashboardModule {\n    constructor(dashboardWidgetService) {\n        Object.entries(DEFAULT_WIDGETS).map(([id, config]) => {\n            if (!dashboardWidgetService.getWidgetById(id)) {\n                dashboardWidgetService.registerWidget(id, config);\n            }\n        });\n        if (dashboardWidgetService.getDefaultLayout().length === 0) {\n            dashboardWidgetService.setDefaultLayout(DEFAULT_DASHBOARD_WIDGET_LAYOUT);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DashboardModule, deps: [{ token: i1.DashboardWidgetService }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: DashboardModule, declarations: [DashboardComponent, DashboardWidgetComponent, OrderChartWidgetComponent], imports: [SharedModule, i3$1.RouterModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DashboardModule, imports: [SharedModule, RouterModule.forChild(dashboardRoutes)] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: DashboardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [SharedModule, RouterModule.forChild(dashboardRoutes)],\n                    declarations: [DashboardComponent, DashboardWidgetComponent, OrderChartWidgetComponent],\n                }]\n        }], ctorParameters: () => [{ type: i1.DashboardWidgetService }] });\n\nclass TestWidgetComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestWidgetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: TestWidgetComponent, selector: \"vdr-test-widget\", ngImport: i0, template: \"<p>This is a test widget!</p>\\r\\n\", styles: [\"\"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestWidgetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-test-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<p>This is a test widget!</p>\\r\\n\" }]\n        }] });\nclass TestWidgetModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: TestWidgetModule, declarations: [TestWidgetComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestWidgetModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: TestWidgetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TestWidgetComponent],\n                }]\n        }] });\n\nclass WelcomeWidgetComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.version = ADMIN_UI_VERSION;\n        this.brand = getAppConfig().brand;\n        this.hideVendureBranding = getAppConfig().hideVendureBranding;\n        this.hideVersion = getAppConfig().hideVersion;\n    }\n    ngOnInit() {\n        this.administrator$ = this.dataService.administrator\n            .getActiveAdministrator()\n            .mapStream(data => data.activeAdministrator || null);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: WelcomeWidgetComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: WelcomeWidgetComponent, selector: \"vdr-welcome-widget\", ngImport: i0, template: \"<div *ngIf=\\\"administrator$ | async as administrator\\\">\\r\\n    <h4 class=\\\"\\\">\\r\\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\\r\\n        <small class=\\\"p5\\\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\\r\\n    </h4>\\r\\n\\r\\n    <p class=\\\"p5\\\" *ngIf=\\\"!hideVendureBranding || !hideVersion\\\">\\r\\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\\r\\n    </p>\\r\\n</div>\\r\\n<div class=\\\"placeholder\\\">\\r\\n    <clr-icon shape=\\\"line-chart\\\" size=\\\"128\\\"></clr-icon>\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;justify-content:space-between}.placeholder{color:var(--color-grey-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i1.TimeAgoPipe, name: \"timeAgo\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: WelcomeWidgetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-welcome-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div *ngIf=\\\"administrator$ | async as administrator\\\">\\r\\n    <h4 class=\\\"\\\">\\r\\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\\r\\n        <small class=\\\"p5\\\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\\r\\n    </h4>\\r\\n\\r\\n    <p class=\\\"p5\\\" *ngIf=\\\"!hideVendureBranding || !hideVersion\\\">\\r\\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\\r\\n    </p>\\r\\n</div>\\r\\n<div class=\\\"placeholder\\\">\\r\\n    <clr-icon shape=\\\"line-chart\\\" size=\\\"128\\\"></clr-icon>\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;justify-content:space-between}.placeholder{color:var(--color-grey-200)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\nclass WelcomeWidgetModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: WelcomeWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: WelcomeWidgetModule, declarations: [WelcomeWidgetComponent], imports: [CoreModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: WelcomeWidgetModule, imports: [CoreModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: WelcomeWidgetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [WelcomeWidgetComponent],\n                }]\n        }] });\n\n// This file was generated by the build-public-api.ts script\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_DASHBOARD_WIDGET_LAYOUT, DEFAULT_WIDGETS, DashboardComponent, DashboardModule, DashboardWidgetComponent, GET_ORDER_CHART_DATA, GET_ORDER_SUMMARY, LatestOrdersWidgetComponent, LatestOrdersWidgetModule, OrderChartWidgetComponent, OrderSummaryWidgetComponent, OrderSummaryWidgetModule, TestWidgetComponent, TestWidgetModule, WelcomeWidgetComponent, WelcomeWidgetModule, dashboardRoutes };\n"],"x_google_ignoreList":[0]}