{"version":3,"file":"392.de049ea98a040a0a.js","mappings":"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","names":["PromotionDetailComponent_button_10_Template","rf","ctx","_r2","i0","ctx_r2","create","saveButtonEnabled","PromotionDetailComponent_ng_template_12_button_0_Template","_r4","save","PromotionDetailComponent_ng_template_12_Template","PromotionDetailComponent_vdr_card_18_Template","PromotionDetailComponent_vdr_card_19_Template","entity_r5","ngIf","PromotionDetailComponent_vdr_card_51_Template","customFields","detailForm","get","PromotionDetailComponent_div_55_Template","_r6","$event","removeCondition","condition_r7","$implicit","i_r8","index","getConditionDefinition","PromotionDetailComponent_vdr_dropdown_57_button_6_Template","_r9","condition_r10","addCondition","description","PromotionDetailComponent_vdr_dropdown_57_Template","getAvailableConditions","PromotionDetailComponent_div_60_Template","_r11","removeAction","action_r12","i_r13","getActionDefinition","PromotionDetailComponent_vdr_dropdown_62_button_6_Template","_r14","action_r15","addAction","PromotionDetailComponent_vdr_dropdown_62_Template","getAvailableActions","_c0","_c1","a0","PromotionListComponent_a_8_Template","PromotionListComponent_ng_template_20_Template","promotion_r1","item","id","PromotionListComponent_ng_template_23_Template","promotion_r2","createdAt","PromotionListComponent_ng_template_26_Template","promotion_r3","updatedAt","PromotionListComponent_ng_template_29_Template","promotion_r4","name","PromotionListComponent_ng_template_32_vdr_chip_0_Template","PromotionListComponent_ng_template_32_vdr_chip_1_Template","PromotionListComponent_ng_template_32_Template","promotion_r5","enabled","PromotionListComponent_ng_template_35_Template","promotion_r6","couponCode","PromotionListComponent_ng_template_38_Template","promotion_r7","startsAt","PromotionListComponent_ng_template_41_Template","promotion_r8","endsAt","PromotionListComponent_ng_template_44_Template","promotion_r9","perCustomerUsageLimit","PromotionListComponent_ng_template_47_Template","promotion_r10","usageLimit","PromotionListComponent_vdr_dt2_custom_field_column_48_Template","customField_r11","ctx_r11","sorts","GET_PROMOTION_DETAIL","gql","PROMOTION_FRAGMENT","PromotionDetailComponent","TypedBaseDetailComponent","constructor","changeDetector","dataService","formBuilder","notificationService","super","this","getCustomFieldConfig","group","Validators","required","conditions","array","actions","getCustomFieldsDefaults","allConditions","allActions","ngOnInit","init","promotion","getPromotionActionsAndConditions","single$","subscribe","data","promotionActions","promotionConditions","markForCheck","ngOnDestroy","destroy","filter","o","find","c","code","condition","a","action","dirty","valid","length","value","addOperation","markAsDirty","removeOperation","formArrayOf","key","input","getUpdatedPromotion","translations","languageCode","createPromotion","__typename","success","marker","entity","markAsPristine","router","navigate","relativeTo","route","error","message","err","combineLatest","entity$","languageCode$","pipe","take","mergeMap","paymentMethod","updatePromotion","formGroup","formValue","createUpdatedTranslatable","translatable","updatedFields","customFieldConfig","defaultTranslation","mapOperationsToInputs","setFormValues","currentTranslation","findTranslation","patchValue","forEach","setCustomFieldFormValues","operations","formValueOperations","map","i","arguments","Object","values","args","j","encodeConfigArgValue","operation","operationsArray","collection","findIndex","argsHash","reduce","output","arg","getConfigArgValue","getDefaultArgValue","push","control","argName","def","argDef","getDefaultConfigArgValue","Error","removeAt","splice","ɵfac","t","i1","i2","ɵcmp","type","selectors","features","decls","vars","consts","template","_r1","setLanguage","updateButton_r16","isNew$","availableLanguages$","dependencies","i3","i4","i5","styles","changeDetection","deletePromotionsBulkAction","createBulkDeleteAction","location","requiresPermission","Permission","DeletePromotion","getItemName","bulkDelete","ids","deletePromotions","res","assignPromotionsToChannelBulkAction","createBulkAssignToChannelAction","UpdatePromotion","bulkAssignToChannel","promotionIds","channelIds","channelId","mutate","AssignPromotionsToChannelDocument","assignPromotionsToChannel","removePromotionsFromChannelBulkAction","createBulkRemoveFromChannelAction","DeleteCatalog","bulkRemoveFromChannel","RemovePromotionsFromChannelDocument","removePromotionsFromChannel","duplicatePromotionsBulkAction","label","icon","onClick","injector","selection","hostComponent","clearSelection","ModalService","fromComponent","DuplicateEntityDialogComponent","locals","entities","entityName","title","getEntityName","result","refresh","GET_PROMOTION_LIST","PromotionListComponent","TypedBaseListComponent","dataTableListId","filters","createFilterCollection","addIdFilter","addDateFilters","addFilters","kind","filterField","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSorts","addCustomFieldSorts","configure","document","GetPromotionListDocument","getItems","promotions","setVariables","skip","createQueryOptions","searchTermControl","refreshListOnChanges","valueChanges","searchTerm","createFilterInput","sort","createSortInput","filterOperator","LogicalOperator","AND","contains","OR","options","setPageNumber","setItemsPerPage","setVisibleColumns","contentLanguage$","items$","itemsPerPage$","totalItems$","currentPage$","selectionManager","i3$1","createRoutes","pageService","path","component","PageComponent","locationId","breadcrumb","children","getPageTabRoutes","link","promotionBreadcrumb","params","detailBreadcrumb","breadcrumbKey","getName","MarketingModule","hasRegisteredTabsAndBulkActions","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","query","GetPromotionDetailDocument","entityKey","getBreadcrumbs","ɵmod","ɵinj","providers","provide","ROUTES","useFactory","multi","deps","PageService","imports","SharedModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-marketing.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { PROMOTION_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, createUpdatedTranslatable, findTranslation, encodeConfigArgValue, getConfigArgValue, getDefaultConfigArgValue, createBulkDeleteAction, Permission, createBulkAssignToChannelAction, AssignPromotionsToChannelDocument, createBulkRemoveFromChannelAction, RemovePromotionsFromChannelDocument, ModalService, DuplicateEntityDialogComponent, TypedBaseListComponent, GetPromotionListDocument, LogicalOperator, PageComponent, detailBreadcrumb, detailComponentWithResolver, GetPromotionDetailDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport { combineLatest } from 'rxjs';\nimport { take, mergeMap, map } from 'rxjs/operators';\nimport * as i3 from '@clr/angular';\nimport * as i4 from '@angular/common';\nimport { AsyncPipe } from '@angular/common';\nimport * as i5 from '@ngx-translate/core';\nimport * as i3$1 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\n\nconst GET_PROMOTION_DETAIL = gql `\r\n    query GetPromotionDetail($id: ID!) {\r\n        promotion(id: $id) {\r\n            ...Promotion\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\nclass PromotionDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Promotion');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            description: '',\n            enabled: true,\n            couponCode: null,\n            perCustomerUsageLimit: null,\n            usageLimit: null,\n            startsAt: null,\n            endsAt: null,\n            conditions: this.formBuilder.array([]),\n            actions: this.formBuilder.array([]),\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.conditions = [];\n        this.actions = [];\n        this.allConditions = [];\n        this.allActions = [];\n        this.customFields = this.getCustomFieldConfig('Promotion');\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.promotion.getPromotionActionsAndConditions().single$.subscribe(data => {\n            this.allActions = data.promotionActions;\n            this.allConditions = data.promotionConditions;\n            this.changeDetector.markForCheck();\n        });\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    getAvailableConditions() {\n        return this.allConditions.filter(o => !this.conditions.find(c => c.code === o.code));\n    }\n    getConditionDefinition(condition) {\n        return this.allConditions.find(c => c.code === condition.code);\n    }\n    getAvailableActions() {\n        return this.allActions.filter(o => !this.actions.find(a => a.code === o.code));\n    }\n    getActionDefinition(action) {\n        return this.allActions.find(c => c.code === action.code);\n    }\n    saveButtonEnabled() {\n        return !!(this.detailForm.dirty &&\n            this.detailForm.valid &&\n            (this.conditions.length !== 0 || this.detailForm.value.couponCode) &&\n            this.actions.length !== 0);\n    }\n    addCondition(condition) {\n        this.addOperation('conditions', condition);\n        this.detailForm.markAsDirty();\n    }\n    addAction(action) {\n        this.addOperation('actions', action);\n        this.detailForm.markAsDirty();\n    }\n    removeCondition(condition) {\n        this.removeOperation('conditions', condition);\n        this.detailForm.markAsDirty();\n    }\n    removeAction(action) {\n        this.removeOperation('actions', action);\n        this.detailForm.markAsDirty();\n    }\n    formArrayOf(key) {\n        return this.detailForm.get(key);\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const input = this.getUpdatedPromotion({\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            startsAt: '',\n            endsAt: '',\n            name: '',\n            description: '',\n            couponCode: null,\n            perCustomerUsageLimit: null,\n            usageLimit: null,\n            enabled: false,\n            conditions: [],\n            actions: [],\n            translations: [],\n        }, this.detailForm, this.languageCode);\n        this.dataService.promotion.createPromotion(input).subscribe(({ createPromotion }) => {\n            switch (createPromotion.__typename) {\n                case 'Promotion':\n                    this.notificationService.success(marker('common.notify-create-success'), {\n                        entity: 'Promotion',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', createPromotion.id], { relativeTo: this.route });\n                    break;\n                case 'MissingConditionsError':\n                    this.notificationService.error(createPromotion.message);\n                    break;\n            }\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Promotion',\n            });\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([paymentMethod, languageCode]) => {\n            const input = this.getUpdatedPromotion(paymentMethod, this.detailForm, languageCode);\n            return this.dataService.promotion.updatePromotion(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Promotion',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Promotion',\n            });\n        });\n    }\n    /**\n     * Given a PaymentMethod and the value of the detailForm, this method creates an updated copy of it which\n     * can then be persisted to the API.\n     */\n    getUpdatedPromotion(promotion, formGroup, languageCode) {\n        const formValue = formGroup.value;\n        const input = createUpdatedTranslatable({\n            translatable: promotion,\n            updatedFields: formValue,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: promotion.name || '',\n                description: promotion.description || '',\n            },\n        });\n        return {\n            ...input,\n            conditions: this.mapOperationsToInputs(this.conditions, formValue.conditions),\n            actions: this.mapOperationsToInputs(this.actions, formValue.actions),\n        };\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        const currentTranslation = findTranslation(entity, languageCode);\n        this.detailForm.patchValue({\n            name: currentTranslation?.name,\n            description: currentTranslation?.description,\n            enabled: entity.enabled,\n            couponCode: entity.couponCode,\n            perCustomerUsageLimit: entity.perCustomerUsageLimit,\n            usageLimit: entity.usageLimit,\n            startsAt: entity.startsAt,\n            endsAt: entity.endsAt,\n        });\n        entity.conditions.forEach(o => {\n            this.addOperation('conditions', o);\n        });\n        entity.actions.forEach(o => this.addOperation('actions', o));\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity, currentTranslation);\n        }\n    }\n    /**\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\n     */\n    mapOperationsToInputs(operations, formValueOperations) {\n        return operations.map((o, i) => ({\n            code: o.code,\n            arguments: Object.values(formValueOperations[i].args).map((value, j) => ({\n                name: o.args[j].name,\n                value: encodeConfigArgValue(value),\n            })),\n        }));\n    }\n    /**\n     * Adds a new condition or action to the promotion.\n     */\n    addOperation(key, operation) {\n        const operationsArray = this.formArrayOf(key);\n        const collection = key === 'conditions' ? this.conditions : this.actions;\n        const index = operationsArray.value.findIndex(o => o.code === operation.code);\n        if (index === -1) {\n            const argsHash = operation.args.reduce((output, arg) => ({\n                ...output,\n                [arg.name]: getConfigArgValue(arg.value) ?? this.getDefaultArgValue(key, operation, arg.name),\n            }), {});\n            operationsArray.push(this.formBuilder.control({\n                code: operation.code,\n                args: argsHash,\n            }));\n            collection.push({\n                code: operation.code,\n                args: operation.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\n            });\n        }\n    }\n    getDefaultArgValue(key, operation, argName) {\n        const def = key === 'conditions'\n            ? this.allConditions.find(c => c.code === operation.code)\n            : this.allActions.find(a => a.code === operation.code);\n        if (def) {\n            const argDef = def.args.find(a => a.name === argName);\n            if (argDef) {\n                return getDefaultConfigArgValue(argDef);\n            }\n        }\n        throw new Error(`Could not determine default value for \"argName\"`);\n    }\n    /**\n     * Removes a condition or action from the promotion.\n     */\n    removeOperation(key, operation) {\n        const operationsArray = this.formArrayOf(key);\n        const collection = key === 'conditions' ? this.conditions : this.actions;\n        const index = operationsArray.value.findIndex(o => o.code === operation.code);\n        if (index !== -1) {\n            operationsArray.removeAt(index);\n            collection.splice(index, 1);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PromotionDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: PromotionDetailComponent, selector: \"vdr-promotion-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-align-items-center\\\">\\r\\n                <vdr-language-selector\\r\\n                    [disabled]=\\\"isNew$ | async\\\"\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"promotion-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdatePromotion'\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"promotion-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                <clr-toggle-wrapper>\\r\\n                    <input type=\\\"checkbox\\\" clrToggle name=\\\"enabled\\\" formControlName=\\\"enabled\\\" />\\r\\n                    <label>{{ 'common.enabled' | translate }}</label>\\r\\n                </clr-toggle-wrapper>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.starts-at' | translate\\\" for=\\\"startsAt\\\">\\r\\n                        <vdr-datetime-picker formControlName=\\\"startsAt\\\"></vdr-datetime-picker>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.ends-at' | translate\\\" for=\\\"endsAt\\\">\\r\\n                        <vdr-datetime-picker formControlName=\\\"endsAt\\\"></vdr-datetime-picker>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.coupon-code' | translate\\\" for=\\\"couponCode\\\">\\r\\n                        <input\\r\\n                            id=\\\"couponCode\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"couponCode\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'marketing.per-customer-limit' | translate\\\"\\r\\n                        [tooltip]=\\\"'marketing.per-customer-limit-tooltip' | translate\\\"\\r\\n                        for=\\\"perCustomerUsageLimit\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"perCustomerUsageLimit\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"1\\\"\\r\\n                            max=\\\"999\\\"\\r\\n                            formControlName=\\\"perCustomerUsageLimit\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'marketing.usage-limit' | translate\\\"\\r\\n                        [tooltip]=\\\"'marketing.usage-limit-tooltip' | translate\\\"\\r\\n                        for=\\\"usageLimit\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"usageLimit\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"1\\\"\\r\\n                            max=\\\"9999999\\\"\\r\\n                            formControlName=\\\"usageLimit\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Promotion\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"promotion-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'marketing.conditions' | translate\\\" formArrayName=\\\"conditions\\\">\\r\\n                <div *ngFor=\\\"let condition of conditions; index as i\\\">\\r\\n                    <vdr-configurable-input\\r\\n                        (remove)=\\\"removeCondition($event)\\\"\\r\\n                        [position]=\\\"i\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [operation]=\\\"condition\\\"\\r\\n                        [operationDefinition]=\\\"getConditionDefinition(condition)\\\"\\r\\n                        [formControlName]=\\\"i\\\"\\r\\n                    ></vdr-configurable-input>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <vdr-dropdown *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'marketing.add-condition' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let condition of getAvailableConditions()\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                class=\\\"item-wrap\\\"\\r\\n                                (click)=\\\"addCondition(condition)\\\"\\r\\n                            >\\r\\n                                {{ condition.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'marketing.actions' | translate\\\" formArrayName=\\\"actions\\\">\\r\\n                <div *ngFor=\\\"let action of actions; index as i\\\">\\r\\n                    <vdr-configurable-input\\r\\n                        (remove)=\\\"removeAction($event)\\\"\\r\\n                        [position]=\\\"i\\\"\\r\\n                        [operation]=\\\"action\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [operationDefinition]=\\\"getActionDefinition(action)\\\"\\r\\n                        [formControlName]=\\\"i\\\"\\r\\n                    ></vdr-configurable-input>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <vdr-dropdown *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'marketing.add-action' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let action of getAvailableActions()\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                class=\\\"item-wrap\\\"\\r\\n                                (click)=\\\"addAction(action)\\\"\\r\\n                            >\\r\\n                                {{ action.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".item-wrap{white-space:normal}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\", \"hideDescription\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.DatetimePickerComponent, selector: \"vdr-datetime-picker\", inputs: [\"yearRange\", \"weekStartDay\", \"timeGranularityInterval\", \"min\", \"max\", \"readonly\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i4.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PromotionDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-promotion-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-align-items-center\\\">\\r\\n                <vdr-language-selector\\r\\n                    [disabled]=\\\"isNew$ | async\\\"\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"promotion-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdatePromotion'\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"promotion-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                <clr-toggle-wrapper>\\r\\n                    <input type=\\\"checkbox\\\" clrToggle name=\\\"enabled\\\" formControlName=\\\"enabled\\\" />\\r\\n                    <label>{{ 'common.enabled' | translate }}</label>\\r\\n                </clr-toggle-wrapper>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.starts-at' | translate\\\" for=\\\"startsAt\\\">\\r\\n                        <vdr-datetime-picker formControlName=\\\"startsAt\\\"></vdr-datetime-picker>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.ends-at' | translate\\\" for=\\\"endsAt\\\">\\r\\n                        <vdr-datetime-picker formControlName=\\\"endsAt\\\"></vdr-datetime-picker>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.coupon-code' | translate\\\" for=\\\"couponCode\\\">\\r\\n                        <input\\r\\n                            id=\\\"couponCode\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"couponCode\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'marketing.per-customer-limit' | translate\\\"\\r\\n                        [tooltip]=\\\"'marketing.per-customer-limit-tooltip' | translate\\\"\\r\\n                        for=\\\"perCustomerUsageLimit\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"perCustomerUsageLimit\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"1\\\"\\r\\n                            max=\\\"999\\\"\\r\\n                            formControlName=\\\"perCustomerUsageLimit\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'marketing.usage-limit' | translate\\\"\\r\\n                        [tooltip]=\\\"'marketing.usage-limit-tooltip' | translate\\\"\\r\\n                        for=\\\"usageLimit\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"usageLimit\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"1\\\"\\r\\n                            max=\\\"9999999\\\"\\r\\n                            formControlName=\\\"usageLimit\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Promotion\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"promotion-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'marketing.conditions' | translate\\\" formArrayName=\\\"conditions\\\">\\r\\n                <div *ngFor=\\\"let condition of conditions; index as i\\\">\\r\\n                    <vdr-configurable-input\\r\\n                        (remove)=\\\"removeCondition($event)\\\"\\r\\n                        [position]=\\\"i\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [operation]=\\\"condition\\\"\\r\\n                        [operationDefinition]=\\\"getConditionDefinition(condition)\\\"\\r\\n                        [formControlName]=\\\"i\\\"\\r\\n                    ></vdr-configurable-input>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <vdr-dropdown *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'marketing.add-condition' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let condition of getAvailableConditions()\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                class=\\\"item-wrap\\\"\\r\\n                                (click)=\\\"addCondition(condition)\\\"\\r\\n                            >\\r\\n                                {{ condition.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'marketing.actions' | translate\\\" formArrayName=\\\"actions\\\">\\r\\n                <div *ngFor=\\\"let action of actions; index as i\\\">\\r\\n                    <vdr-configurable-input\\r\\n                        (remove)=\\\"removeAction($event)\\\"\\r\\n                        [position]=\\\"i\\\"\\r\\n                        [operation]=\\\"action\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [operationDefinition]=\\\"getActionDefinition(action)\\\"\\r\\n                        [formControlName]=\\\"i\\\"\\r\\n                    ></vdr-configurable-input>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <vdr-dropdown *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'marketing.add-action' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let action of getAvailableActions()\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                class=\\\"item-wrap\\\"\\r\\n                                (click)=\\\"addAction(action)\\\"\\r\\n                            >\\r\\n                                {{ action.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".item-wrap{white-space:normal}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }] });\n\nconst ASSIGN_PROMOTIONS_TO_CHANNEL = gql `\r\n    mutation AssignPromotionsToChannel($input: AssignPromotionsToChannelInput!) {\r\n        assignPromotionsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst REMOVE_PROMOTIONS_FROM_CHANNEL = gql `\r\n    mutation RemovePromotionsFromChannel($input: RemovePromotionsFromChannelInput!) {\r\n        removePromotionsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst deletePromotionsBulkAction = createBulkDeleteAction({\n    location: 'promotion-list',\n    requiresPermission: Permission.DeletePromotion,\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.promotion.deletePromotions(ids).pipe(map(res => res.deletePromotions)),\n});\nconst assignPromotionsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'promotion-list',\n    requiresPermission: Permission.UpdatePromotion,\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, promotionIds, channelIds) => {\n        return channelIds.map(channelId => dataService\n            .mutate(AssignPromotionsToChannelDocument, {\n            input: {\n                channelId,\n                promotionIds,\n            },\n        })\n            .pipe(map(res => res.assignPromotionsToChannel)));\n    },\n});\nconst removePromotionsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'promotion-list',\n    requiresPermission: Permission.DeleteCatalog,\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, promotionIds, channelId) => dataService\n        .mutate(RemovePromotionsFromChannelDocument, {\n        input: {\n            channelId,\n            promotionIds,\n        },\n    })\n        .pipe(map(res => res.removePromotionsFromChannel)),\n});\nconst duplicatePromotionsBulkAction = {\n    location: 'promotion-list',\n    label: marker('common.duplicate'),\n    icon: 'copy',\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent((DuplicateEntityDialogComponent), {\n            locals: {\n                entities: selection,\n                entityName: 'Promotion',\n                title: marker('marketing.duplicate-promotions'),\n                getEntityName: entity => entity.name,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n                hostComponent.refresh();\n            }\n        });\n    },\n};\n\nconst GET_PROMOTION_LIST = gql `\n    query GetPromotionList($options: PromotionListOptions) {\n        promotions(options: $options) {\n            items {\n                ...Promotion\n            }\n            totalItems\n        }\n    }\n    ${PROMOTION_FRAGMENT}\n`;\nclass PromotionListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.dataTableListId = 'promotion-list';\n        this.customFields = this.getCustomFieldConfig('Promotion');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilters([\n            {\n                name: 'startsAt',\n                type: { kind: 'dateRange' },\n                label: marker('marketing.starts-at'),\n                filterField: 'startsAt',\n            },\n            {\n                name: 'endsAt',\n                type: { kind: 'dateRange' },\n                label: marker('marketing.ends-at'),\n                filterField: 'endsAt',\n            },\n            {\n                name: 'enabled',\n                type: { kind: 'boolean' },\n                label: marker('common.enabled'),\n                filterField: 'enabled',\n            },\n            {\n                name: 'name',\n                type: { kind: 'text' },\n                label: marker('common.name'),\n                filterField: 'name',\n            },\n            {\n                name: 'couponCode',\n                type: { kind: 'text' },\n                label: marker('marketing.coupon-code'),\n                filterField: 'couponCode',\n            },\n            {\n                name: 'desc',\n                type: { kind: 'text' },\n                label: marker('common.description'),\n                filterField: 'description',\n            },\n            {\n                name: 'perCustomerUsageLimit',\n                type: { kind: 'number' },\n                label: marker('marketing.per-customer-limit'),\n                filterField: 'perCustomerUsageLimit',\n            },\n            {\n                name: 'usageLimit',\n                type: { kind: 'number' },\n                label: marker('marketing.usage-limit'),\n                filterField: 'usageLimit',\n            },\n        ])\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSorts([\n            { name: 'createdAt' },\n            { name: 'updatedAt' },\n            { name: 'startsAt' },\n            { name: 'endsAt' },\n            { name: 'name' },\n            { name: 'couponCode' },\n            { name: 'perCustomerUsageLimit' },\n            { name: 'usageLimit' },\n        ])\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetPromotionListDocument,\n            getItems: data => data.promotions,\n            setVariables: (skip, take) => this.createQueryOptions(skip, take, this.searchTermControl.value),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    createQueryOptions(skip, take, searchTerm) {\n        const filter = this.filters.createFilterInput();\n        const sort = this.sorts.createSortInput();\n        let filterOperator = LogicalOperator.AND;\n        if (searchTerm) {\n            filter.couponCode = { contains: searchTerm };\n            filter.name = { contains: searchTerm };\n            filterOperator = LogicalOperator.OR;\n        }\n        return {\n            options: {\n                skip,\n                take,\n                filter,\n                filterOperator,\n                sort,\n            },\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PromotionListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.12\", type: PromotionListComponent, selector: \"vdr-promotion-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"promotion-list\\\" />\\r\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['./create']\\\" *vdrIfPermissions=\\\"'CreatePromotion'\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'marketing.create-new-promotion' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"promotion-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"promotion-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'marketing.search-by-name-or-coupon-code' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">{{ promotion.id }}</ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.name' | translate\\\"\\r\\n        id=\\\"name\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('name')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', promotion.id]\\\"\\r\\n                ><span> {{ promotion.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"promotion.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!promotion.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'marketing.coupon-code' | translate\\\"\\r\\n        id=\\\"coupon-code\\\"\\r\\n        [sort]=\\\"sorts.get('couponCode')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.couponCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'marketing.starts-at' | translate\\\"\\r\\n        id=\\\"starts-at\\\"\\r\\n        [sort]=\\\"sorts.get('startsAt')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.startsAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'marketing.ends-at' | translate\\\" id=\\\"ends-at\\\" [sort]=\\\"sorts.get('endsAt')\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.endsAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'marketing.per-customer-limit' | translate\\\"\\r\\n        id=\\\"per-customer-limit\\\"\\r\\n        [sort]=\\\"sorts.get('perCustomerUsageLimit')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.perCustomerUsageLimit }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'marketing.usage-limit' | translate\\\"\\r\\n        id=\\\"usage-limit\\\"\\r\\n        [sort]=\\\"sorts.get('usageLimit')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.usageLimit }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-form{padding:0}.search-input{margin:6px 8px 0 0;min-width:200px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\", \"visibleColumnsChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i4.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: PromotionListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-promotion-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"promotion-list\\\" />\\r\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['./create']\\\" *vdrIfPermissions=\\\"'CreatePromotion'\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'marketing.create-new-promotion' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"promotion-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-data-table-2\\r\\n    [id]=\\\"dataTableListId\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n    (visibleColumnsChange)=\\\"setVisibleColumns($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"promotion-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'marketing.search-by-name-or-coupon-code' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">{{ promotion.id }}</ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.name' | translate\\\"\\r\\n        id=\\\"name\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('name')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', promotion.id]\\\"\\r\\n                ><span> {{ promotion.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"promotion.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!promotion.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'marketing.coupon-code' | translate\\\"\\r\\n        id=\\\"coupon-code\\\"\\r\\n        [sort]=\\\"sorts.get('couponCode')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.couponCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'marketing.starts-at' | translate\\\"\\r\\n        id=\\\"starts-at\\\"\\r\\n        [sort]=\\\"sorts.get('startsAt')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.startsAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'marketing.ends-at' | translate\\\" id=\\\"ends-at\\\" [sort]=\\\"sorts.get('endsAt')\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.endsAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'marketing.per-customer-limit' | translate\\\"\\r\\n        id=\\\"per-customer-limit\\\"\\r\\n        [sort]=\\\"sorts.get('perCustomerUsageLimit')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.perCustomerUsageLimit }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'marketing.usage-limit' | translate\\\"\\r\\n        id=\\\"usage-limit\\\"\\r\\n        [sort]=\\\"sorts.get('usageLimit')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.usageLimit }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-form{padding:0}.search-input{margin:6px 8px 0 0;min-width:200px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst createRoutes = (pageService) => [\n    {\n        path: 'promotions',\n        component: PageComponent,\n        data: {\n            locationId: 'promotion-list',\n            breadcrumb: marker('breadcrumb.promotions'),\n        },\n        children: pageService.getPageTabRoutes('promotion-list'),\n    },\n    {\n        path: 'promotions/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'promotion-detail',\n            breadcrumb: { label: marker('breadcrumb.promotions'), link: ['../', 'promotions'] },\n        },\n        children: pageService.getPageTabRoutes('promotion-detail'),\n    },\n];\nfunction promotionBreadcrumb(data, params) {\n    return detailBreadcrumb({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.promotions',\n        getName: promotion => promotion.name,\n        route: 'promotions',\n    });\n}\n\nclass MarketingModule {\n    static { this.hasRegisteredTabsAndBulkActions = false; }\n    constructor(bulkActionRegistryService, pageService) {\n        if (MarketingModule.hasRegisteredTabsAndBulkActions) {\n            return;\n        }\n        bulkActionRegistryService.registerBulkAction(assignPromotionsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(duplicatePromotionsBulkAction);\n        bulkActionRegistryService.registerBulkAction(removePromotionsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deletePromotionsBulkAction);\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'promotion-list',\n            tab: marker('breadcrumb.promotions'),\n            route: '',\n            component: PromotionListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'promotion-detail',\n            tab: marker('marketing.promotion'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: PromotionDetailComponent,\n                query: GetPromotionDetailDocument,\n                entityKey: 'promotion',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('marketing.create-new-promotion'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        MarketingModule.hasRegisteredTabsAndBulkActions = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: MarketingModule, deps: [{ token: i1.BulkActionRegistryService }, { token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.12\", ngImport: i0, type: MarketingModule, declarations: [PromotionListComponent, PromotionDetailComponent], imports: [SharedModule, i3$1.RouterModule, SharedModule, AsyncPipe, SharedModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: MarketingModule, providers: [\n            {\n                provide: ROUTES,\n                useFactory: (pageService) => createRoutes(pageService),\n                multi: true,\n                deps: [PageService],\n            },\n        ], imports: [SharedModule, RouterModule.forChild([]), SharedModule, SharedModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.12\", ngImport: i0, type: MarketingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [SharedModule, RouterModule.forChild([]), SharedModule, AsyncPipe, SharedModule],\n                    providers: [\n                        {\n                            provide: ROUTES,\n                            useFactory: (pageService) => createRoutes(pageService),\n                            multi: true,\n                            deps: [PageService],\n                        },\n                    ],\n                    declarations: [PromotionListComponent, PromotionDetailComponent],\n                }]\n        }], ctorParameters: () => [{ type: i1.BulkActionRegistryService }, { type: i1.PageService }] });\n\n// This file was generated by the build-public-api.ts script\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GET_PROMOTION_DETAIL, GET_PROMOTION_LIST, MarketingModule, PromotionDetailComponent, PromotionListComponent, assignPromotionsToChannelBulkAction, createRoutes, deletePromotionsBulkAction, duplicatePromotionsBulkAction, promotionBreadcrumb, removePromotionsFromChannelBulkAction };\n"],"x_google_ignoreList":[0]}